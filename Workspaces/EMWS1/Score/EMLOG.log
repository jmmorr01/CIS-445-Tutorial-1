*------------------------------------------------------------*
User:                jmmorr01
Date:                October 20, 2018
Time:                16:48:29
Site:                70080761
Platform:            X64_8PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 20, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:08" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                October 20, 2018
Time:                16:48:08
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O03HMKTX "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O03HMKTX new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 20, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:08" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 20, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:09" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
29210      proc freq data=EMWS1.Score_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Score_VariableSet noprint;
29211      table ROLE*LEVEL/out=WORK.ScoreMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ScoreMETA;
29212      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.SCORE_VARIABLESET.
NOTE: The data set WORK.SCOREMETA has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
 
 
29213      proc print data=WORK.ScoreMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ScoreMETA label noobs;
29214      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
29215      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
29216      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29217      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
29218      run;
 
NOTE: There were 2 observations read from the data set WORK.SCOREMETA.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29219      title10;
MPRINT(EM_DIAGRAM):   title10;
29220      %let groupid =;
29221      %let endGroupid =;
29222      %let prescoreid =;
29223      %let idsTable =;
29224      %let hpdmTable =;
29225      %let lasthptm =;
29226      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
29227      set EMWS1.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_EMINFO;
29228      where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
29229      select(upcase(key));
MPRINT(EM_DIAGRAM):   select(upcase(key));
29230      when('LASTHPTM') call symput('lasthptm', DATA);
MPRINT(EM_DIAGRAM):   when('LASTHPTM') call symput('lasthptm', DATA);
29231      when('IDSTABLE') call symput('idsTable', DATA);
MPRINT(EM_DIAGRAM):   when('IDSTABLE') call symput('idsTable', DATA);
29232      when('HPDMSAMPLE') call symput('hpdmSample', DATA);
MPRINT(EM_DIAGRAM):   when('HPDMSAMPLE') call symput('hpdmSample', DATA);
29233      when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
29234      when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
29235      otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
29236      end;
MPRINT(EM_DIAGRAM):   end;
29237      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG_EMINFO.
      WHERE UPCASE(key) in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'HPDMSAMPLE', 'IDSTABLE', 'INDEXINFO', 'LASTHPTM', 'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS1.REG_EMINFO.
      WHERE (TARGET='TARGET_B') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO40UWQVJ0 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS1.REG_EMINFO.
      WHERE (TARGET='TARGET_B') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO423J223F has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data EMWS1.Score_SCORE / view = EMWS1.Score_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids2_DATA;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.1;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M3P062415;
MPRINT(EM_DIAGRAM):   * Host: COB-MBA045;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: J:\JMMORR01\CIS 445\Tutorial 1;
MPRINT(EM_DIAGRAM):   * Project Name: Charity;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Donations;
MPRINT(EM_DIAGRAM):   * Generated by: jmmorr01;
MPRINT(EM_DIAGRAM):   * Date: 20OCT2018:16:48:11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Repl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   * Defining New Variables;
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   Length REP_DONOR_GENDER $9;
MPRINT(EM_DIAGRAM):   Label REP_DONOR_GENDER= 'Replacement: DONOR_GENDER';
MPRINT(EM_DIAGRAM):   REP_DONOR_GENDER= DONOR_GENDER;
MPRINT(EM_DIAGRAM):   Length REP_SES $4;
MPRINT(EM_DIAGRAM):   Label REP_SES= 'Replacement: SES';
MPRINT(EM_DIAGRAM):   REP_SES= SES;
MPRINT(EM_DIAGRAM):   Length REP_URBANICITY $4;
MPRINT(EM_DIAGRAM):   Label REP_URBANICITY= 'Replacement: URBANICITY';
MPRINT(EM_DIAGRAM):   REP_URBANICITY= URBANICITY;
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   * Replace Specific Class Levels ;
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   length _UFormat200 $200;
MPRINT(EM_DIAGRAM):   drop _UFORMAT200;
MPRINT(EM_DIAGRAM):   _UFORMAT200 = " ";
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   * Variable: DONOR_GENDER;
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(DONOR_GENDER);
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "A" then REP_DONOR_GENDER="_UNKNOWN_";
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   * Variable: SES;
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(SES);
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "?" then REP_SES="";
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   * Variable: URBANICITY;
MPRINT(EM_DIAGRAM):   * ;
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(URBANICITY);
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "?" then REP_URBANICITY="";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Imputation;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Impt;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   label IMP_DONOR_AGE = 'Imputed DONOR_AGE';
MPRINT(EM_DIAGRAM):   IMP_DONOR_AGE = DONOR_AGE;
MPRINT(EM_DIAGRAM):   if missing(DONOR_AGE) then IMP_DONOR_AGE = 60;
MPRINT(EM_DIAGRAM):   label IMP_MONTHS_SINCE_LAST_PROM_RESP = 'Imputed MONTHS_SINCE_LAST_PROM_RESP';
MPRINT(EM_DIAGRAM):   IMP_MONTHS_SINCE_LAST_PROM_RESP = MONTHS_SINCE_LAST_PROM_RESP;
MPRINT(EM_DIAGRAM):   if missing(MONTHS_SINCE_LAST_PROM_RESP) then IMP_MONTHS_SINCE_LAST_PROM_RESP = 18;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * TREE IMPUTATION;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: INCOME_GROUP;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   label IMP_INCOME_GROUP = 'Imputed INCOME_GROUP';
MPRINT(EM_DIAGRAM):   IMP_INCOME_GROUP = INCOME_GROUP;
MPRINT(EM_DIAGRAM):   if missing(IMP_INCOME_GROUP) then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_INCOME_GROUP $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP2 = 'Predicted: INCOME_GROUP=2';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP6 = 'Predicted: INCOME_GROUP=6';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP5 = 'Predicted: INCOME_GROUP=5';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP4 = 'Predicted: INCOME_GROUP=4';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP3 = 'Predicted: INCOME_GROUP=3';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP1 = 'Predicted: INCOME_GROUP=1';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP7 = 'Predicted: INCOME_GROUP=7';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP2 = 'Unadjusted P: INCOME_GROUP=2';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP6 = 'Unadjusted P: INCOME_GROUP=6';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP5 = 'Unadjusted P: INCOME_GROUP=5';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP4 = 'Unadjusted P: INCOME_GROUP=4';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP3 = 'Unadjusted P: INCOME_GROUP=3';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP1 = 'Unadjusted P: INCOME_GROUP=1';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP7 = 'Unadjusted P: INCOME_GROUP=7';
MPRINT(EM_DIAGRAM):   label I_INCOME_GROUP = 'Into: INCOME_GROUP';
MPRINT(EM_DIAGRAM):   label U_INCOME_GROUP = 'Unnormalized Into: INCOME_GROUP';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_3 $ 3;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_3;
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_1 $ 1;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_1;
MPRINT(EM_DIAGRAM):   _ARBFMT_1 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 432.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 432.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '23' ,'25' ,'01' ,'09' ,'41' ,'15' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' , '46' ,'40' ,'26' ,'28' ,'21' ,'51' ,'34' ,'42' ,'44' ,'29' ,'05' ,'17' , '43' ,'39' ,'11'
,'31' ,'33' ,'38' ,'47' ,'53' ,'22' ,'06' ,'32' ,'03' , '52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('02' ,'24' ,'12' ,'35' ,'13' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 19185.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 19185.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = PUT( HOME_OWNER , $3.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_3 IN ('H' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 2.7 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF FILE_AVG_GIFT < 2.7 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 2.7 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_AVG_GIFT_AMT < 2.7 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.10574018126888;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.13897280966767;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.29003021148036;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.16012084592145;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07552870090634;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.13293051359516;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.09667673716012;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.10574018126888;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.13897280966767;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.29003021148036;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.16012084592145;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07552870090634;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.13293051359516;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.09667673716012;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 531.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 531.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 20802 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 20802 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1183 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1183 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'24' ,'12' ,'35' ,'13' ,'14' , '34' ,'11' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('18' ,'27' ,'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 8.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_ATTRIBUTE2 < 8.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.1;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.21666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.28333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.1;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.21666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.28333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 2637.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 2637.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('24' ,'12' ,'35' ,'14' ,'34' ,'11' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'13' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 33325 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 33325 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.47037037037037;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.01481481481481;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01111111111111;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.3037037037037;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.47037037037037;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.01481481481481;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01111111111111;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.3037037037037;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '6';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.00921658986175;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.19585253456221;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.22811059907834;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.08294930875576;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.02764976958525;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.00691244239631;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.44930875576036;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.00921658986175;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.19585253456221;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.22811059907834;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.08294930875576;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.02764976958525;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.00691244239631;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.44930875576036;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1117.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1117.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 18546 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 18546 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 84.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 84.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 73.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 73.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(NUMBER_PROM_12 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NUMBER_PROM_12 < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= NUMBER_PROM_12 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MOR_HIT_RATE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MOR_HIT_RATE < 41.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 41.5 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.21875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.125;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.171875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.21875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.140625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.0625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.0625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.21875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.125;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.171875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.21875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.140625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.0625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.0625;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE4 ) AND 61 <= PCT_ATTRIBUTE4 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.5;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.5;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.0258064516129;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.17419354838709;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.36129032258064;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2258064516129;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.06774193548387;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01290322580645;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.13225806451612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.0258064516129;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.17419354838709;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.36129032258064;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.06774193548387;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01290322580645;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.13225806451612;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'5' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 22944.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 22944.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 1404 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1404 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04790419161676;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.14371257485029;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.17365269461077;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.1377245508982;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.05389221556886;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01796407185628;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.4251497005988;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04790419161676;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.14371257485029;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.17365269461077;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.1377245508982;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.05389221556886;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01796407185628;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.4251497005988;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 4.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_CARD_PROM < 4.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_RANGE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_GIFT_RANGE < 41 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 41 <= LIFETIME_GIFT_RANGE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.03846153846153;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.26923076923076;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09615384615384;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.44230769230769;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.03846153846153;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09615384615384;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.44230769230769;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04395604395604;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.34065934065934;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21978021978021;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08791208791208;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01648351648351;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.09340659340659;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04395604395604;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.34065934065934;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21978021978021;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08791208791208;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01648351648351;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.09340659340659;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '6';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = PUT( HOME_OWNER , $3.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_3 IN ('H' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(OVERLAY_SOURCE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_1 = PUT( OVERLAY_SOURCE , $1.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_1 IN ('P' ,'B' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_1 IN ('M' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'20' ,'16' ,'30' ,'07' ,'23' , '25' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'48' ,'24' ,'08' ,'12' ,'35' , '19' ,'27' ,'46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' , '29' ,'05' ,'17'
,'43' ,'39' ,'11' ,'31' ,'33' ,'38' ,'22' ,'06' ,'32' , '03' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('45' ,'01' ,'51' ,'47' ,'53' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 215.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 215.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 10196.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 10196.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'30' ,'09' ,'41' ,'48' ,'51' ,'31' , '33' ,'53' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'49' ,'45' ,'20' ,'16' ,'07' ,'23' ,'25' , '01' ,'02' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'35' ,'19' ,'27' , '46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' ,'29' , '05' ,'17' ,'43' ,'39' ,'11'
,'38' ,'47' ,'22' ,'06' ,'03' ,'37' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.29721362229102;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.01083591331269;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07430340557275;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.10990712074303;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.41331269349845;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03560371517027;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.29721362229102;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.01083591331269;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07430340557275;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.10990712074303;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.41331269349845;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03560371517027;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '38' ,'47' ,'53' ,'06' ,'37'
,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17643 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 17643 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND MONTHS_SINCE_ORIGIN < 71 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND 71 <= MONTHS_SINCE_ORIGIN THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MONTHS_SINCE_FIRST_GIFT < 65 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 65 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 45.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 45.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.28030303030303;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.04545454545454;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21212121212121;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07575757575757;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03787878787878;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.28030303030303;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.04545454545454;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21212121212121;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07575757575757;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03787878787878;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.13793103448275;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.26206896551724;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.14482758620689;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.18620689655172;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.06206896551724;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.26206896551724;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.14482758620689;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.18620689655172;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.06206896551724;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 70.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 70.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 70.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 70.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_RESPONSE_PROP ) AND RECENT_RESPONSE_PROP < 0.049 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_RESPONSE_PROP ) AND 0.049 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_GIFT_AMT < 1.6 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1.6 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LAST_GIFT_AMT < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1.5 <= LAST_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.23076923076923;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.23076923076923;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.15384615384615;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.35313531353135;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.03300330033003;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.1056105610561;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07590759075907;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08580858085808;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.34323432343234;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.003300330033;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.35313531353135;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.03300330033003;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.1056105610561;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07590759075907;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08580858085808;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.34323432343234;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.003300330033;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.29548229548229;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.04029304029304;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.12942612942612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.14407814407814;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.16483516483516;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.19169719169719;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.29548229548229;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.04029304029304;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.12942612942612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.14407814407814;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.16483516483516;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.19169719169719;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 66.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 66.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'01' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' , '35' ,'19' ,'27' ,'46' ,'40' ,'21' ,'14' ,'51' ,'34' ,'42' ,'44' , '05' ,'17' ,'43' ,'39' ,'11'
,'31' ,'38' ,'47' ,'53' ,'22' ,'06' , '32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'48' ,'13' ,'26' ,'28' ,'29' ,'33' ,'37' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 73.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 73.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '33' ,'38' ,'47' ,'53' ,'06'
,'32' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17330.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 17330.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.15845070422535;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.08802816901408;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21830985915492;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.21478873239436;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09507042253521;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.10211267605633;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.12323943661971;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.15845070422535;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.08802816901408;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21830985915492;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.21478873239436;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09507042253521;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.10211267605633;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.12323943661971;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 246.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 246.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'25' ,'09' ,'41' ,'36' ,'48' , '51' ,'43' ,'31' ,'33' ,'47' ,'53' ,'32' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'18' , '08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' ,'21' ,'44' ,'29' ,'05' , '17' ,'39' ,'38' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11131.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 11131.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MOR_HIT_RATE ) AND 35 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '4';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.40227703984819;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.05313092979127;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.10436432637571;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.12903225806451;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09487666034155;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.19734345351043;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.01897533206831;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.40227703984819;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.05313092979127;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.10436432637571;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.12903225806451;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09487666034155;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.19734345351043;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.01897533206831;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_STAR_STATUS ) AND 14.5 <= RECENT_STAR_STATUS THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.4;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.4;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.25784447476125;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.06412005457025;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.19099590723055;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.19645293315143;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.15552523874488;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.11869031377899;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.01637107776261;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.25784447476125;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.06412005457025;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.19099590723055;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.19645293315143;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.15552523874488;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.11869031377899;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.01637107776261;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '33' ,'38' ,'47' ,'53' ,'06'
,'32' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17172.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 17172.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04496788008565;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.15203426124197;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.38115631691648;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.15631691648822;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.05995717344753;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.02141327623126;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.18415417558886;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04496788008565;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.15203426124197;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.38115631691648;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.15631691648822;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.05995717344753;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.02141327623126;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.18415417558886;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 10272 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 10272 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 214.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 214.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'41' ,'51' ,'43' ,'31' ,'47' , '53' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'25' , '09' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' , '21' ,'44' ,'29' ,'05' ,'17' ,'39' ,'33' ,'38' ,'06' ,'37' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MOR_HIT_RATE ) AND MOR_HIT_RATE < 16 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MOR_HIT_RATE ) AND 16 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 47.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 47.5 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 47.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 47.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.41379310344827;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.41379310344827;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.1782334384858;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.0583596214511;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.20504731861198;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2192429022082;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.17981072555205;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.09779179810725;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.06151419558359;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.1782334384858;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.0583596214511;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.20504731861198;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2192429022082;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.17981072555205;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.09779179810725;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.06151419558359;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '4';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.12755102040816;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.09566326530612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.29400510204081;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2563775510204;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.12181122448979;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.03188775510204;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.07270408163265;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.12755102040816;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.09566326530612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.29400510204081;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2563775510204;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.12181122448979;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.03188775510204;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.07270408163265;
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: INCOME_GROUP;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_INCOME_GROUP);
MPRINT(EM_DIAGRAM):   if _format200="7" then IMP_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   else if _format200="6" then IMP_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   else if _format200="5" then IMP_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   else if _format200="4" then IMP_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_INCOME_GROUP = 3;
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_SES;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length IMP_REP_SES $4;
MPRINT(EM_DIAGRAM):   label IMP_REP_SES = 'Imputed: Replacement: SES';
MPRINT(EM_DIAGRAM):   IMP_REP_SES = REP_SES;
MPRINT(EM_DIAGRAM):   if IMP_REP_SES eq '' then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_REP_SES $ 4;
MPRINT(EM_DIAGRAM):   LENGTH U_REP_SES $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label P_REP_SES2 = 'Predicted: REP_SES=2';
MPRINT(EM_DIAGRAM):   label P_REP_SES3 = 'Predicted: REP_SES=3';
MPRINT(EM_DIAGRAM):   label P_REP_SES1 = 'Predicted: REP_SES=1';
MPRINT(EM_DIAGRAM):   label P_REP_SES4 = 'Predicted: REP_SES=4';
MPRINT(EM_DIAGRAM):   label Q_REP_SES2 = 'Unadjusted P: REP_SES=2';
MPRINT(EM_DIAGRAM):   label Q_REP_SES3 = 'Unadjusted P: REP_SES=3';
MPRINT(EM_DIAGRAM):   label Q_REP_SES1 = 'Unadjusted P: REP_SES=1';
MPRINT(EM_DIAGRAM):   label Q_REP_SES4 = 'Unadjusted P: REP_SES=4';
MPRINT(EM_DIAGRAM):   label I_REP_SES = 'Into: REP_SES';
MPRINT(EM_DIAGRAM):   label U_REP_SES = 'Unnormalized Into: REP_SES';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'42' ,'46' ,'45' ,'20' ,'16' ,'07' , '34' ,'23' ,'25' ,'01' ,'02' ,'37' ,'15' ,'38' ,'18' ,'36' ,'48' ,'24' , '12' ,'35' ,'19' ,'27' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'51' ,'44' , '29' ,'05'
,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' , '10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('50' ,'53' ,'30' ,'09' ,'41' ,'08' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.866 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.866 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MONTHS_SINCE_FIRST_GIFT < 159.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 159.5 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   I_REP_SES = '3';
MPRINT(EM_DIAGRAM):   U_REP_SES = '3';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'46' ,'45' ,'20' ,'16' ,'07' ,'25' , '37' ,'38' ,'18' ,'36' ,'48' ,'19' ,'27' ,'40' ,'26' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' , '35' ,'13' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' , '33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 15470.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 15470.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 719.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 719.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   I_REP_SES = '2';
MPRINT(EM_DIAGRAM):   U_REP_SES = '2';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' , '33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 15304.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 15304.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 720.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 720.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('28' ,'44' ,'29' ,'05' ,'17' ,'39' ,'47' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 10141.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 10141.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 238.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOUSEHOLD_INCOME < 238.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('R' ,'S' ,'C' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 39.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 39.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 1;
MPRINT(EM_DIAGRAM):   I_REP_SES = '4';
MPRINT(EM_DIAGRAM):   U_REP_SES = '4';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   I_REP_SES = '3';
MPRINT(EM_DIAGRAM):   U_REP_SES = '3';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   I_REP_SES = '2';
MPRINT(EM_DIAGRAM):   U_REP_SES = '2';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   I_REP_SES = '1';
MPRINT(EM_DIAGRAM):   U_REP_SES = '1';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_SES;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_REP_SES);
MPRINT(EM_DIAGRAM):   if _format200="4" then IMP_REP_SES = "4   ";
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_REP_SES = "3   ";
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_REP_SES = "2   ";
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_REP_SES = "1   ";
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_URBANICITY;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length IMP_REP_URBANICITY $4;
MPRINT(EM_DIAGRAM):   label IMP_REP_URBANICITY = 'Imputed: Replacement: URBANICITY';
MPRINT(EM_DIAGRAM):   IMP_REP_URBANICITY = REP_URBANICITY;
MPRINT(EM_DIAGRAM):   if IMP_REP_URBANICITY eq '' then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_REP_URBANICITY $ 4;
MPRINT(EM_DIAGRAM):   LENGTH U_REP_URBANICITY $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYU = 'Predicted: REP_URBANICITY=U';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYR = 'Predicted: REP_URBANICITY=R';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYS = 'Predicted: REP_URBANICITY=S';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYC = 'Predicted: REP_URBANICITY=C';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYT = 'Predicted: REP_URBANICITY=T';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYU = 'Unadjusted P: REP_URBANICITY=U';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYR = 'Unadjusted P: REP_URBANICITY=R';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYS = 'Unadjusted P: REP_URBANICITY=S';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYC = 'Unadjusted P: REP_URBANICITY=C';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYT = 'Unadjusted P: REP_URBANICITY=T';
MPRINT(EM_DIAGRAM):   label I_REP_URBANICITY = 'Into: REP_URBANICITY';
MPRINT(EM_DIAGRAM):   label U_REP_URBANICITY = 'Unnormalized Into: REP_URBANICITY';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'20' ,'16' ,'07' ,'34' ,'01' ,'09' ,'02' ,'41' , '37' ,'15' ,'38' ,'18' ,'36' ,'08' ,'12' ,'35' ,'19' ,'27' ,'40' ,'13' , '26' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' , '47' ,'22'
,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'30' ,'23' , '25' ,'48' ,'24' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LAST_GIFT_AMT < 215 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 215 <= LAST_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MAX_GIFT_AMT < 215 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 215 <= LIFETIME_MAX_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('30' ,'23' ,'25' ,'24' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'48' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 15609 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 15609 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'27' ,'26' ,'28' , '51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' , '03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'34' ,'41' ,'37' ,'15' ,'38' ,'18' , '36' ,'12' ,'35' ,'19' ,'40' ,'13' ,'21' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 65.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 65.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 354.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 354.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'39' ,'06' , '03' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'17' ,'11' , '33' ,'47' ,'22' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 1440 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1440 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('1' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('39' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'06' , '03' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE1 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 6.5 <= PCT_ATTRIBUTE1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_ATTRIBUTE1 < 6.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'U';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'U';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'33' ,'47' , '22' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('17' ,'11' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1970.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1970.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('51' ,'44' ,'47' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'29' ,'33' ,'22' ,'32' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11036.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 11036.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 455 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 455 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('34' ,'41' ,'37' ,'38' ,'36' ,'35' ,'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'15' ,'18' ,'12' ,'19' ,'13' ,'21' , '14' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 302.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 302.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 797.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 797.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_URBANICITY;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_REP_URBANICITY);
MPRINT(EM_DIAGRAM):   if _format200="U" then IMP_REP_URBANICITY = "U   ";
MPRINT(EM_DIAGRAM):   else if _format200="T" then IMP_REP_URBANICITY = "T   ";
MPRINT(EM_DIAGRAM):   else if _format200="S" then IMP_REP_URBANICITY = "S   ";
MPRINT(EM_DIAGRAM):   else if _format200="R" then IMP_REP_URBANICITY = "R   ";
MPRINT(EM_DIAGRAM):   else if _format200="C" then IMP_REP_URBANICITY = "C   ";
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: WEALTH_RATING;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   label IMP_WEALTH_RATING = 'Imputed WEALTH_RATING';
MPRINT(EM_DIAGRAM):   IMP_WEALTH_RATING = WEALTH_RATING;
MPRINT(EM_DIAGRAM):   if missing(IMP_WEALTH_RATING) then do;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_WEALTH_RATING $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING4 = 'Predicted: WEALTH_RATING=4';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING5 = 'Predicted: WEALTH_RATING=5';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING7 = 'Predicted: WEALTH_RATING=7';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING2 = 'Predicted: WEALTH_RATING=2';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING1 = 'Predicted: WEALTH_RATING=1';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING3 = 'Predicted: WEALTH_RATING=3';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING6 = 'Predicted: WEALTH_RATING=6';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING9 = 'Predicted: WEALTH_RATING=9';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING8 = 'Predicted: WEALTH_RATING=8';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING0 = 'Predicted: WEALTH_RATING=0';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING4 = 'Unadjusted P: WEALTH_RATING=4';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING5 = 'Unadjusted P: WEALTH_RATING=5';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING7 = 'Unadjusted P: WEALTH_RATING=7';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING2 = 'Unadjusted P: WEALTH_RATING=2';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING1 = 'Unadjusted P: WEALTH_RATING=1';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING3 = 'Unadjusted P: WEALTH_RATING=3';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING6 = 'Unadjusted P: WEALTH_RATING=6';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING9 = 'Unadjusted P: WEALTH_RATING=9';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING8 = 'Unadjusted P: WEALTH_RATING=8';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING0 = 'Unadjusted P: WEALTH_RATING=0';
MPRINT(EM_DIAGRAM):   label I_WEALTH_RATING = 'Into: WEALTH_RATING';
MPRINT(EM_DIAGRAM):   label U_WEALTH_RATING = 'Unnormalized Into: WEALTH_RATING';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'07' , '41' ,'37' ,'18' ,'36' ,'48' ,'08' ,'31' ,'19' ,'27' ,'46' ,'26' ,'28' , '21' ,'51' ,'44' ,'05' ,'17' ,'39' ,'25' ,'33' ,'38' ,'09' ,'29' ,'53' , '40' ,'32'
,'47' ,'10' ,'52' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'13' ,'42' , '14' ,'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17151 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 17151 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 583.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 583.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 32356.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 32356.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'42' ,'24' , '12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('13' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.2;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 22479.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 22479.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1038 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1038 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 594.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 594.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1753 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1753 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 89.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 89.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 612.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 612.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.1;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.63333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.1;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.63333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.02631578947368;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.78947368421052;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.13157894736842;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.02631578947368;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.78947368421052;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.13157894736842;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.01818181818181;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.84848484848484;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.09696969696969;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0060606060606;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.01818181818181;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.84848484848484;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.09696969696969;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0060606060606;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 383.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 383.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 61.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 61.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 15622.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 15622.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('U' ,'R' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('S' ,'C' ,'T' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('01' ,'02' ,'42' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'15' ,'35' ,'13' ,'14' ,'24' , '12' ,'11' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 1733 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1733 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.05070422535211;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.08169014084507;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.19718309859154;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.04507042253521;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.14647887323943;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.19436619718309;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.2338028169014;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.05070422535211;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.08169014084507;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.19718309859154;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.04507042253521;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.14647887323943;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.19436619718309;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.2338028169014;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.17222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09444444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.12222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.10555555555555;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.17222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09444444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.12222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.10555555555555;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '6';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1628 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1628 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 25807.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 25807.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'35' ,'13' ,'42' ,'14' ,'24' ,'12' , '11' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_CARD_PROM ) AND LIFETIME_CARD_PROM < 34.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_CARD_PROM ) AND 34.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_CARD_GIFT < 21.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 21.5 <= FILE_CARD_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 101.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 101.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 28361.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 28361.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 3997 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 3997 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'35' ,'13' ,'14' ,'24' ,'12' , '11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'15' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.03296703296703;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.03296703296703;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.02597402597402;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.06493506493506;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.02164502164502;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01298701298701;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.17748917748917;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01731601731601;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.02597402597402;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.06493506493506;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.02164502164502;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01298701298701;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.17748917748917;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01731601731601;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 94.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 94.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'02' ,'15' ,'35' ,'13' ,'42' , '24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('14' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.00636942675159;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08917197452229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.01910828025477;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.02547770700636;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.61783439490445;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.20382165605095;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.00636942675159;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08917197452229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.01910828025477;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.02547770700636;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.61783439490445;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.20382165605095;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 22879 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 22879 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'15' ,'35' ,'13' ,'42' ,'14' , '24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1587 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 1587 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.02777777777777;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01388888888888;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.56944444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.02777777777777;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01388888888888;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.56944444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.03116147308781;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.18413597733711;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0084985835694;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0113314447592;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.08215297450424;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.22379603399433;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.42492917847025;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.03116147308781;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.18413597733711;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0084985835694;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0113314447592;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.08215297450424;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.22379603399433;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.42492917847025;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 268.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 268.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11745.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 11745.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' ,'36' , '48' ,'31' ,'46' ,'26' ,'51' ,'25' ,'33' ,'38' ,'09' ,'53' ,'32' ,'47' , '10' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'18' ,'08' ,'19' ,'27' , '28' ,'21' ,'44' ,'05' ,'17' ,'39' ,'29' ,'40' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 330.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 330.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 13147.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 13147.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'45' ,'30' ,'07' ,'41' ,'37' , '36' ,'08' ,'31' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' , '09' ,'29' ,'47' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'.' ,'16' ,'18' ,'48' ,'19' ,'27' ,'28' , '44' ,'05' ,'33' ,'40' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 48.335 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 48.335 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MIN_GIFT_AMT < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 37.5 <= LIFETIME_MIN_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_CARD_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_CARD_GIFT_AMT < 45.625 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 45.625 <= RECENT_AVG_CARD_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 970.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 970.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 27.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 27.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 18997.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 18997.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 4.25 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 4.25 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.024 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.024 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 3.605 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 3.605 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.4;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.19565217391304;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.15942028985507;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.05072463768115;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.31884057971014;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.03623188405797;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.00724637681159;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.19565217391304;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.15942028985507;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.05072463768115;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.31884057971014;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.03623188405797;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.00724637681159;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_PROM ) AND LIFETIME_PROM < 100.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_PROM ) AND 100.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_CARD_PROM < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 37.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_GIFT_COUNT < 71.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 71.5 <= LIFETIME_GIFT_COUNT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.44444444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.15745856353591;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.23204419889502;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08839779005524;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0732044198895;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.03591160220994;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.14779005524861;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.17403314917127;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00966850828729;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.04419889502762;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.03729281767955;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.15745856353591;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.23204419889502;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08839779005524;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0732044198895;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.03591160220994;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.14779005524861;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.17403314917127;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00966850828729;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.04419889502762;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.03729281767955;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'45' ,'.' ,'30' ,'07' ,'41' ,'37' ,'36' ,'48' , '08' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' ,'29' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' , '40' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_ATTRIBUTE2 < 17.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 17.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' , '40' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.16413793103448;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.26482758620689;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.02068965517241;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.00689655172413;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.03172413793103;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.04413793103448;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.17931034482758;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01241379310344;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.16413793103448;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.26482758620689;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.02068965517241;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.00689655172413;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.03172413793103;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.04413793103448;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.17931034482758;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01241379310344;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.36363636363636;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.36363636363636;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'.' ,'07' ,'08' ,'46' ,'26' ,'21' ,'51' ,'17' , '39' ,'38' ,'29' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.14117647058823;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.20392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.13725490196078;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09411764705882;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.2078431372549;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.04313725490196;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.07058823529411;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.00392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.14117647058823;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.20392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.13725490196078;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09411764705882;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.2078431372549;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.04313725490196;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.07058823529411;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.00392156862745;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '6';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.15492957746478;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.05633802816901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.16901408450704;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.12676056338028;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.15492957746478;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.05633802816901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.16901408450704;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.12676056338028;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '2';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 186.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 186.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 8800 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 8800 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 335.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 335.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND PCT_OWNER_OCCUPIED < 90.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND 90.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_CARD_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_CARD_RESPONSE_PROP < 0.909 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.909 <= RECENT_CARD_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.771 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 0.771 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.5;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.5;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE2 ) AND PCT_ATTRIBUTE2 < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PCT_ATTRIBUTE2 ) AND 1.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE4 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_ATTRIBUTE4 < 3 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 3 <= PCT_ATTRIBUTE4 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.04166666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.41666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.04166666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.41666666666666;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '0';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND 15462.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.27272727272727;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.27272727272727;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.06273062730627;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.04059040590405;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.02398523985239;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.14575645756457;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.25830258302583;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09778597785977;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.03136531365313;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00184501845018;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.00922509225092;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.32841328413284;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.06273062730627;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.04059040590405;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.02398523985239;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.14575645756457;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.25830258302583;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09778597785977;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.03136531365313;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00184501845018;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.00922509225092;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.32841328413284;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '0';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 236.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 236.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' , '18' ,'36' ,'48' ,'31' ,'46' ,'51' ,'25' ,'33' ,'38' ,'53' ,'40' , '32' ,'47' ,'10' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'08' ,'19' ,'27' , '26' ,'28' ,'21' ,'44' ,'17' ,'39' ,'09' ,'29' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11155.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 11155.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('30' ,'41' ,'08' ,'21' ,'51' ,'09' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'43' ,'45' ,'20' ,'16' ,'07' ,'37' , '36' ,'48' ,'27' ,'46' ,'26' ,'28' ,'44' ,'17' ,'39' ,'25' ,'38' , '29' ,'40' ,'47' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_URBANICITY ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('R' ,'S' ,'C' ,'T' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.20537897310513;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.17359413202933;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.06356968215158;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.14180929095354;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.07579462102689;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.1760391198044;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09046454767726;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00244498777506;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.02689486552567;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0440097799511;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.20537897310513;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.17359413202933;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.06356968215158;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.14180929095354;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.07579462102689;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.1760391198044;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09046454767726;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00244498777506;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.02689486552567;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0440097799511;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '4';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 4;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.1;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.04;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.21333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.17333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.23333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.04666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.02;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.00666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.07333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.1;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.04;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.21333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.17333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.23333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.04666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.02;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.00666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.07333333333333;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND LIFETIME_MIN_GIFT_AMT < 19 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND 19 <= LIFETIME_MIN_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.375;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.375;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE3 ) AND 61.5 <= PCT_ATTRIBUTE3 THEN DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.11469534050179;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.07048984468339;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.02986857825567;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.24731182795698;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.22341696535244;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.16009557945041;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.04659498207885;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00358422939068;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.0179211469534;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.08602150537634;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.11469534050179;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.07048984468339;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.02986857825567;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.24731182795698;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.22341696535244;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.16009557945041;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.04659498207885;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00358422939068;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.0179211469534;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.08602150537634;
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '2';
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: WEALTH_RATING;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length _format200 $200;
MPRINT(EM_DIAGRAM):   drop _format200;
MPRINT(EM_DIAGRAM):   _format200 = strip(I_WEALTH_RATING);
MPRINT(EM_DIAGRAM):   if _format200="9" then IMP_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   else if _format200="8" then IMP_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   else if _format200="7" then IMP_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   else if _format200="6" then IMP_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   else if _format200="5" then IMP_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   else if _format200="4" then IMP_WEALTH_RATING = 4;
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   else if _format200="0" then IMP_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   * Drop prediction variables since they are for INPUTS not TARGETS;
MPRINT(EM_DIAGRAM):   * Replace _NODE_ by _XODE_ so it can be safely dropped;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   drop P_INCOME_GROUP7 P_INCOME_GROUP1 P_INCOME_GROUP3 P_INCOME_GROUP4 P_INCOME_GROUP5 P_INCOME_GROUP6 P_INCOME_GROUP2 I_INCOME_GROUP U_INCOME_GROUP Q_INCOME_GROUP7 Q_INCOME_GROUP1 Q_INCOME_GROUP3 Q_INCOME_GROUP4 Q_INCOME_GROUP5
Q_INCOME_GROUP6 Q_INCOME_GROUP2 P_REP_SES4 P_REP_SES1 P_REP_SES3 P_REP_SES2 I_REP_SES U_REP_SES Q_REP_SES4 Q_REP_SES1 Q_REP_SES3 Q_REP_SES2 P_REP_URBANICITYT P_REP_URBANICITYC P_REP_URBANICITYS P_REP_URBANICITYR P_REP_URBANICITYU I_REP_URBANICITY
U_REP_URBANICITY Q_REP_URBANICITYT Q_REP_URBANICITYC Q_REP_URBANICITYS Q_REP_URBANICITYR Q_REP_URBANICITYU P_WEALTH_RATING0 P_WEALTH_RATING8 P_WEALTH_RATING9 P_WEALTH_RATING6 P_WEALTH_RATING3 P_WEALTH_RATING1 P_WEALTH_RATING2 P_WEALTH_RATING7
P_WEALTH_RATING5 P_WEALTH_RATING4 I_WEALTH_RATING U_WEALTH_RATING Q_WEALTH_RATING0 Q_WEALTH_RATING8 Q_WEALTH_RATING9 Q_WEALTH_RATING6 Q_WEALTH_RATING3 Q_WEALTH_RATING1 Q_WEALTH_RATING2 Q_WEALTH_RATING7 Q_WEALTH_RATING5 Q_WEALTH_RATING4 ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Computed Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: FILE_AVG_GIFT , log10(FILE_AVG_GIFT + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LG10_FILE_AVG_GIFT = 'Transformed FILE_AVG_GIFT';
MPRINT(EM_DIAGRAM):   if FILE_AVG_GIFT eq . then LG10_FILE_AVG_GIFT = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if FILE_AVG_GIFT + 1 > 0 then LG10_FILE_AVG_GIFT = log10(FILE_AVG_GIFT + 1);
MPRINT(EM_DIAGRAM):   else LG10_FILE_AVG_GIFT = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: LAST_GIFT_AMT , log10(LAST_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LG10_LAST_GIFT_AMT = 'Transformed LAST_GIFT_AMT';
MPRINT(EM_DIAGRAM):   if LAST_GIFT_AMT eq . then LG10_LAST_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if LAST_GIFT_AMT + 1 > 0 then LG10_LAST_GIFT_AMT = log10(LAST_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   else LG10_LAST_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_AVG_GIFT_AMT , log10(LIFETIME_AVG_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LG10_LIFETIME_AVG_GIFT_AMT = 'Transformed LIFETIME_AVG_GIFT_AMT';
MPRINT(EM_DIAGRAM):   if LIFETIME_AVG_GIFT_AMT eq . then LG10_LIFETIME_AVG_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if LIFETIME_AVG_GIFT_AMT + 1 > 0 then LG10_LIFETIME_AVG_GIFT_AMT = log10(LIFETIME_AVG_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   else LG10_LIFETIME_AVG_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_GIFT_AMOUNT , log10(LIFETIME_GIFT_AMOUNT + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LG10_LIFETIME_GIFT_AMOUNT = 'Transformed LIFETIME_GIFT_AMOUNT';
MPRINT(EM_DIAGRAM):   if LIFETIME_GIFT_AMOUNT eq . then LG10_LIFETIME_GIFT_AMOUNT = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if LIFETIME_GIFT_AMOUNT + 1 > 0 then LG10_LIFETIME_GIFT_AMOUNT = log10(LIFETIME_GIFT_AMOUNT + 1);
MPRINT(EM_DIAGRAM):   else LG10_LIFETIME_GIFT_AMOUNT = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_GIFT_COUNT , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_LIFETIME_GIFT_COUNT = 'Transformed LIFETIME_GIFT_COUNT';
MPRINT(EM_DIAGRAM):   length OPT_LIFETIME_GIFT_COUNT $36;
MPRINT(EM_DIAGRAM):   if (LIFETIME_GIFT_COUNT eq .) then OPT_LIFETIME_GIFT_COUNT="02:4.5-13.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT < 4.5) then OPT_LIFETIME_GIFT_COUNT = "01:low-4.5";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT >= 4.5 and LIFETIME_GIFT_COUNT < 13.5) then OPT_LIFETIME_GIFT_COUNT = "02:4.5-13.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT >= 13.5) then OPT_LIFETIME_GIFT_COUNT = "03:13.5-high";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: MEDIAN_HOME_VALUE , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOME_VALUE $36;
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE < 676.5) then OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE >= 676.5) then OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: MEDIAN_HOUSEHOLD_INCOME , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOUSEHOLD_INCOME = 'Transformed MEDIAN_HOUSEHOLD_INCOME';
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOUSEHOLD_INCOME $36;
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOUSEHOLD_INCOME eq .) then OPT_MEDIAN_HOUSEHOLD_INCOME="01:low-624.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOUSEHOLD_INCOME < 624.5) then OPT_MEDIAN_HOUSEHOLD_INCOME = "01:low-624.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOUSEHOLD_INCOME >= 624.5) then OPT_MEDIAN_HOUSEHOLD_INCOME = "02:624.5-high";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: PER_CAPITA_INCOME , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_PER_CAPITA_INCOME = 'Transformed PER_CAPITA_INCOME';
MPRINT(EM_DIAGRAM):   length OPT_PER_CAPITA_INCOME $36;
MPRINT(EM_DIAGRAM):   if (PER_CAPITA_INCOME eq .) then OPT_PER_CAPITA_INCOME="01:low-14976, MISSING";
MPRINT(EM_DIAGRAM):   else if (PER_CAPITA_INCOME < 14976) then OPT_PER_CAPITA_INCOME = "01:low-14976, MISSING";
MPRINT(EM_DIAGRAM):   else if (PER_CAPITA_INCOME >= 14976) then OPT_PER_CAPITA_INCOME = "02:14976-high";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: RECENT_RESPONSE_PROP , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_RECENT_RESPONSE_PROP = 'Transformed RECENT_RESPONSE_PROP';
MPRINT(EM_DIAGRAM):   length OPT_RECENT_RESPONSE_PROP $36;
MPRINT(EM_DIAGRAM):   if (RECENT_RESPONSE_PROP eq .) then OPT_RECENT_RESPONSE_PROP="01:low-0.2125, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_RESPONSE_PROP < 0.2125) then OPT_RECENT_RESPONSE_PROP = "01:low-0.2125, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_RESPONSE_PROP >= 0.2125) then OPT_RECENT_RESPONSE_PROP = "02:0.2125-high";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: RECENT_STAR_STATUS , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_RECENT_STAR_STATUS = 'Transformed RECENT_STAR_STATUS';
MPRINT(EM_DIAGRAM):   length OPT_RECENT_STAR_STATUS $36;
MPRINT(EM_DIAGRAM):   if (RECENT_STAR_STATUS eq .) then OPT_RECENT_STAR_STATUS="01:low-0.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS < 0.5) then OPT_RECENT_STAR_STATUS = "01:low-0.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS >= 0.5 and RECENT_STAR_STATUS < 1.5) then OPT_RECENT_STAR_STATUS = "02:0.5-1.5";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS >= 1.5) then OPT_RECENT_STAR_STATUS = "03:1.5-high";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_TARGET_B $ 12;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   if missing( FREQUENCY_STATUS_97NK ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   drop _11_0 ;
MPRINT(EM_DIAGRAM):   if missing( OPT_MEDIAN_HOME_VALUE ) then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_MEDIAN_HOME_VALUE,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = '02:676.5-HIGH, MISSING' then do;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-676.5' then do;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PEP_STAR ;
MPRINT(EM_DIAGRAM):   drop _17_0 ;
MPRINT(EM_DIAGRAM):   if missing( PEP_STAR ) then do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PEP_STAR , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.2500469307;
MPRINT(EM_DIAGRAM):   _P1 = 0.7499530693;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.3556861257867) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13171370881188) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16318592168351) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14135126079011) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   *** Effect: PEP_STAR ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17905481873096) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   _TEMP = -1.03523114674562 + _LP0;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   REGDR1: *** Update Posterior Probabilities;
MPRINT(EM_DIAGRAM):   _P0 = _P0 * 0.05 / 0.25004693073024;
MPRINT(EM_DIAGRAM):   _P1 = _P1 * 0.95 / 0.74995306926975;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 + _P1 ;
MPRINT(EM_DIAGRAM):   if _sum > 4.135903E-25 then do;
MPRINT(EM_DIAGRAM):   _P0 = _P0 / _sum;
MPRINT(EM_DIAGRAM):   _P1 = _P1 / _sum;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 * 0 + _P1 * 0;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_TARGET_B = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_TARGET_B = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop _temp_;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   LENGTH EM_DECISION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_DECISION= "Recommended Decision for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_DECISION = D_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_PROFIT= "Expected Profit for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_PROFIT = EP_TARGET_B;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 20, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:12" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                October 20, 2018
Time:                16:48:12
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0C_DGID "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0C_DGID new;
MPRINT(EM_DIAGRAM):   run;
33406      filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33407      *------------------------------------------------------------*;
33408      * Score: Scoring DATA data;
33409      *------------------------------------------------------------*;
33410      data EMWS1.Score_TRAIN
33411      / view=EMWS1.Score_TRAIN
33412      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_TRAIN / view=EMWS1.Score_TRAIN ;
33413      set EMWS1.MdlComp_TRAIN
33414      ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_TRAIN ;
33415      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMFLOWSCORE.sas.
33416     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33417     +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
33418     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33419     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
33420     +EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
33421     +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
33422     +EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
33423     +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
33424     +EM_PROBABILITY =
33425     +max(
33426     +P_TARGET_B1
33427     +,
33428     +P_TARGET_B0
33429     +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
33430     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
33430    !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33431     +LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
33432     +EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
33433     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_DECISION
33433    !+       EM_DECISION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33434     +LABEL EM_DECISION= "Recommended Decision for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_DECISION= "Recommended Decision for TARGET_B";
33435     +EM_DECISION = D_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_DECISION = D_TARGET_B;
33436     +LABEL EM_PROFIT= "Expected Profit for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_PROFIT= "Expected Profit for TARGET_B";
33437     +EM_PROFIT = EP_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_PROFIT = EP_TARGET_B;
33438     +LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
33439     +EM_CLASSTARGET = F_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_TARGET_B;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33440      run;
 
NOTE: DATA STEP view saved on file EMWS1.SCORE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.26 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.34 seconds
      cpu time            0.28 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
33441      quit;
33442      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
33443      filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33444      *------------------------------------------------------------*;
33445      * Score: Scoring VALIDATE data;
33446      *------------------------------------------------------------*;
33447      data EMWS1.Score_VALIDATE
33448      / view=EMWS1.Score_VALIDATE
33449      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_VALIDATE / view=EMWS1.Score_VALIDATE ;
33450      set EMWS1.MdlComp_VALIDATE
33451      ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_VALIDATE ;
33452      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMFLOWSCORE.sas.
33453     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33454     +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
33455     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33456     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
33457     +EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
33458     +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
33459     +EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
33460     +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
33461     +EM_PROBABILITY =
33462     +max(
33463     +P_TARGET_B1
33464     +,
33465     +P_TARGET_B0
33466     +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
33467     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
33467    !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33468     +LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
33469     +EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
33470     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_DECISION
33470    !+       EM_DECISION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33471     +LABEL EM_DECISION= "Recommended Decision for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_DECISION= "Recommended Decision for TARGET_B";
33472     +EM_DECISION = D_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_DECISION = D_TARGET_B;
33473     +LABEL EM_PROFIT= "Expected Profit for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_PROFIT= "Expected Profit for TARGET_B";
33474     +EM_PROFIT = EP_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_PROFIT = EP_TARGET_B;
33475     +LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: TARGET_B';
33476     +EM_CLASSTARGET = F_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_TARGET_B;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33477      run;
 
NOTE: DATA STEP view saved on file EMWS1.SCORE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
33478      quit;
33479      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
33480      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
33481      * Score: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score: Creating Publish Score Variables Table;
33482      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33483      proc sort data=EMWS1.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
33484      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33485      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
33486      proc sort data=EMWS1.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
33487      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33488      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS1.IDS_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 50 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
33489      data EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_EMINPUTVARS;
33490      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
33491      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33492      length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
33493      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
33494         "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
33495         "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
33496      if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
33497      if upcase(NAME) = "BP_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "BP_TARGET_B" then HIDE = "N";
33498      if upcase(NAME) = "CARD_PROM_12" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CARD_PROM_12" then HIDE = "N";
33499      if upcase(NAME) = "CLUSTER_CODE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CLUSTER_CODE" then HIDE = "N";
33500      if upcase(NAME) = "CONTROL_NUMBER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CONTROL_NUMBER" then HIDE = "N";
33501      if upcase(NAME) = "CP_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CP_TARGET_B" then HIDE = "N";
33502      if upcase(NAME) = "DONOR_GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DONOR_GENDER" then HIDE = "N";
33503      if upcase(NAME) = "D_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "D_TARGET_B" then HIDE = "N";
33504      if upcase(NAME) = "EP_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "EP_TARGET_B" then HIDE = "N";
33505      if upcase(NAME) = "FILE_CARD_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "FILE_CARD_GIFT" then HIDE = "N";
33506      if upcase(NAME) = "FREQUENCY_STATUS_97NK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "FREQUENCY_STATUS_97NK" then HIDE = "N";
33507      if upcase(NAME) = "F_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "F_TARGET_B" then HIDE = "N";
33508      if upcase(NAME) = "HOME_OWNER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HOME_OWNER" then HIDE = "N";
33509      if upcase(NAME) = "IMP_DONOR_AGE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_DONOR_AGE" then HIDE = "N";
33510      if upcase(NAME) = "IMP_INCOME_GROUP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_INCOME_GROUP" then HIDE = "N";
33511      if upcase(NAME) = "IMP_MONTHS_SINCE_LAST_PROM_RESP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_MONTHS_SINCE_LAST_PROM_RESP" then HIDE = "N";
33512      if upcase(NAME) = "IMP_REP_SES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_REP_SES" then HIDE = "N";
33513      if upcase(NAME) = "IMP_REP_URBANICITY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_REP_URBANICITY" then HIDE = "N";
33514      if upcase(NAME) = "IMP_WEALTH_RATING" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IMP_WEALTH_RATING" then HIDE = "N";
33515      if upcase(NAME) = "IN_HOUSE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "IN_HOUSE" then HIDE = "N";
33516      if upcase(NAME) = "I_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "I_TARGET_B" then HIDE = "N";
33517      if upcase(NAME) = "LG10_FILE_AVG_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_FILE_AVG_GIFT" then HIDE = "N";
33518      if upcase(NAME) = "LG10_LAST_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_LAST_GIFT_AMT" then HIDE = "N";
33519      if upcase(NAME) = "LG10_LIFETIME_AVG_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_LIFETIME_AVG_GIFT_AMT" then HIDE = "N";
33520      if upcase(NAME) = "LG10_LIFETIME_GIFT_AMOUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LG10_LIFETIME_GIFT_AMOUNT" then HIDE = "N";
33521      if upcase(NAME) = "LIFETIME_CARD_PROM" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_CARD_PROM" then HIDE = "N";
33522      if upcase(NAME) = "LIFETIME_GIFT_RANGE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_GIFT_RANGE" then HIDE = "N";
33523      if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_MAX_GIFT_AMT" then HIDE = "N";
33524      if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_MIN_GIFT_AMT" then HIDE = "N";
33525      if upcase(NAME) = "LIFETIME_PROM" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "LIFETIME_PROM" then HIDE = "N";
33526      if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then HIDE = "N";
33527      if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MONTHS_SINCE_LAST_GIFT" then HIDE = "N";
33528      if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then HIDE = "N";
33529      if upcase(NAME) = "MOR_HIT_RATE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MOR_HIT_RATE" then HIDE = "N";
33530      if upcase(NAME) = "NUMBER_PROM_12" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMBER_PROM_12" then HIDE = "N";
33531      if upcase(NAME) = "OPT_LIFETIME_GIFT_COUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_LIFETIME_GIFT_COUNT" then HIDE = "N";
33532      if upcase(NAME) = "OPT_MEDIAN_HOME_VALUE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_MEDIAN_HOME_VALUE" then HIDE = "N";
33533      if upcase(NAME) = "OPT_MEDIAN_HOUSEHOLD_INCOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_MEDIAN_HOUSEHOLD_INCOME" then HIDE = "N";
33534      if upcase(NAME) = "OPT_PER_CAPITA_INCOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_PER_CAPITA_INCOME" then HIDE = "N";
33535      if upcase(NAME) = "OPT_RECENT_RESPONSE_PROP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_RECENT_RESPONSE_PROP" then HIDE = "N";
33536      if upcase(NAME) = "OPT_RECENT_STAR_STATUS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OPT_RECENT_STAR_STATUS" then HIDE = "N";
33537      if upcase(NAME) = "OVERLAY_SOURCE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OVERLAY_SOURCE" then HIDE = "N";
33538      if upcase(NAME) = "PCT_ATTRIBUTE1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE1" then HIDE = "N";
33539      if upcase(NAME) = "PCT_ATTRIBUTE2" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE2" then HIDE = "N";
33540      if upcase(NAME) = "PCT_ATTRIBUTE3" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE3" then HIDE = "N";
33541      if upcase(NAME) = "PCT_ATTRIBUTE4" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_ATTRIBUTE4" then HIDE = "N";
33542      if upcase(NAME) = "PCT_OWNER_OCCUPIED" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PCT_OWNER_OCCUPIED" then HIDE = "N";
33543      if upcase(NAME) = "PEP_STAR" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PEP_STAR" then HIDE = "N";
33544      if upcase(NAME) = "PUBLISHED_PHONE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PUBLISHED_PHONE" then HIDE = "N";
33545      if upcase(NAME) = "P_TARGET_B0" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_TARGET_B0" then HIDE = "N";
33546      if upcase(NAME) = "P_TARGET_B1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_TARGET_B1" then HIDE = "N";
33547      if upcase(NAME) = "RECENCY_STATUS_96NK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENCY_STATUS_96NK" then HIDE = "N";
33548      if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then HIDE = "N";
33549      if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_AVG_GIFT_AMT" then HIDE = "N";
33550      if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then HIDE = "N";
33551      if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then HIDE = "N";
33552      if upcase(NAME) = "RECENT_RESPONSE_COUNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENT_RESPONSE_COUNT" then HIDE = "N";
33553      if upcase(NAME) = "REP_DONOR_GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "REP_DONOR_GENDER" then HIDE = "N";
33554      if upcase(NAME) = "R_TARGET_B0" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_TARGET_B0" then HIDE = "N";
33555      if upcase(NAME) = "R_TARGET_B1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_TARGET_B1" then HIDE = "N";
33556      if upcase(NAME) = "SES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SES" then HIDE = "N";
33557      if upcase(NAME) = "TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "TARGET_B" then HIDE = "N";
33558      if upcase(NAME) = "URBANICITY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "URBANICITY" then HIDE = "N";
33559      if upcase(NAME) = "U_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "U_TARGET_B" then HIDE = "N";
33560      if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
33561      if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
33562      if upcase(NAME) = "B_TARGET_B" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_TARGET_B" then HIDE = "N";
33563      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: There were 66 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 80 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.03 seconds
 
 
33564      proc sort data=EMWS1.Score_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score_EMINPUTVARS nodupkey;
33565      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33566      where CREATOR='' or (NAME="TARGET_B" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="TARGET_B" and CREATOR='');
33567      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='TARGET_B') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 50 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.15 seconds
      cpu time            0.01 seconds
 
 
33568      filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas";
33569      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
33570      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
33571      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas.
33572     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33573     +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
33574     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33575     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
33576     +EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
33577     +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
33578     +EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
33579     +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
33580     +EM_PROBABILITY =
33581     +max(
33582     +P_TARGET_B1
33583     +,
33584     +P_TARGET_B0
33585     +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
33586     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
33586    !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33587     +LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
33588     +EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
33589     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_DECISION
33589    !+       EM_DECISION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
33590     +LABEL EM_DECISION= "Recommended Decision for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_DECISION= "Recommended Decision for TARGET_B";
33591     +EM_DECISION = D_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_DECISION = D_TARGET_B;
33592     +LABEL EM_PROFIT= "Expected Profit for TARGET_B";
MPRINT(EM_DIAGRAM):   LABEL EM_PROFIT= "Expected Profit for TARGET_B";
33593     +EM_PROFIT = EP_TARGET_B;
MPRINT(EM_DIAGRAM):   EM_PROFIT = EP_TARGET_B;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33594      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
33595      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
33596      quit;
33597      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
33598      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
33599      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
33600      retain ID 1 Node "Score";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score";
33601      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
33602      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33603      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
33604      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33605      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33606      proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
33607      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33608      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 66 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
33609      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33610      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
33611      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
33612      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 66 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
33613      proc contents data=EMWS1.Score_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Score_train out=_meta(keep=NAME) noprint;
33614      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 90 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
33615      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
33616      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33617      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 90 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 90 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
33618      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33619      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
33620      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33621      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 90 observations read from the data set WORK._META.
NOTE: There were 66 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 90 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33622      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
33623      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 7 rows and 5 columns.
 
33624      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33625      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
33626      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 7 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS1.SCORE_FCMP has 7 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
33627      filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
33628      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
33629      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
33630      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
33631     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
33632     +if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
33633     +b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
33634     +end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
33635     +else
33636     +if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
33637     +b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
33638     +end;
MPRINT(EM_DIAGRAM):   end;
33639     +else
33640     +if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
33641     +b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
33642     +end;
MPRINT(EM_DIAGRAM):   end;
33643     +else
33644     +if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
33645     +b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
33646     +end;
MPRINT(EM_DIAGRAM):   end;
33647     +else
33648     +if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
33649     +b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
33650     +end;
MPRINT(EM_DIAGRAM):   end;
33651     +else
33652     +if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
33653     +b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
33654     +end;
MPRINT(EM_DIAGRAM):   end;
33655     +else
33656     +if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
33657     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33658     +b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
33659     +end;
MPRINT(EM_DIAGRAM):   end;
33660     +else
33661     +if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
33662     +b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
33663     +end;
MPRINT(EM_DIAGRAM):   end;
33664     +else
33665     +if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
33666     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33667     +b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
33668     +end;
MPRINT(EM_DIAGRAM):   end;
33669     +else
33670     +if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
33671     +b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
33672     +end;
MPRINT(EM_DIAGRAM):   end;
33673     +else
33674     +if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
33675     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33676     +b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
33677     +end;
MPRINT(EM_DIAGRAM):   end;
33678     +else
33679     +if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
33680     +b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
33681     +end;
MPRINT(EM_DIAGRAM):   end;
33682     +else
33683     +do;
MPRINT(EM_DIAGRAM):   else do;
33684     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
33685     +b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
33686     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33687      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
33688      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
33689      quit;
33690      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
33691      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
33692      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
33693      retain ID 2 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp";
33694      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
33695      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33696      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
33697      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33698      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
33699      proc sort data=EMWS1.Reg_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
33700      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33701      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.REG_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
33702      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33703      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
33704      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
33705      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33706      proc contents data=EMWS1.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp_train out=_meta(keep=NAME) noprint;
33707      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
33708      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
33709      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33710      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33711      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33712      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
33713      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33714      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 65 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33715      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
33716      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
33717      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
33718      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
33719      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 9 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
33720      filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Reg\EMPUBLISHSCORE.sas";
33721      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
33722      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
33723      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Reg\EMPUBLISHSCORE.sas.
33724     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
33725     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
33726     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
33727     +
33728     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
33729     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
33730     +
33731     +length I_TARGET_B $ 12;
MPRINT(EM_DIAGRAM):   length I_TARGET_B $ 12;
33732     +label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
33733     +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
33734     +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
33735     +label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
33736     +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
33737     +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
33738     +
33739     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
33740     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
33741     +
33742     +*** Generate dummy variables for FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for FREQUENCY_STATUS_97NK ;
33743     +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
33744     +if missing( FREQUENCY_STATUS_97NK ) then do;
MPRINT(EM_DIAGRAM):   if missing( FREQUENCY_STATUS_97NK ) then do;
33745     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
33746     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
33747     +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
33748     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
33749     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33750     +end;
MPRINT(EM_DIAGRAM):   end;
33751     +else do;
MPRINT(EM_DIAGRAM):   else do;
33752     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
33753     +   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
33754     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
33755     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
33756     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
33757     +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
33758     +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
33759     +   end;
MPRINT(EM_DIAGRAM):   end;
33760     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
33761     +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
33762     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
33763     +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
33764     +   end;
MPRINT(EM_DIAGRAM):   end;
33765     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
33766     +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
33767     +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
33768     +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
33769     +   end;
MPRINT(EM_DIAGRAM):   end;
33770     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
33771     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
33772     +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
33773     +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
33774     +   end;
MPRINT(EM_DIAGRAM):   end;
33775     +   else do;
MPRINT(EM_DIAGRAM):   else do;
33776     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
33777     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
33778     +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
33779     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
33780     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33781     +   end;
MPRINT(EM_DIAGRAM):   end;
33782     +end;
MPRINT(EM_DIAGRAM):   end;
33783     +
33784     +*** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
33785     +drop _11_0 ;
MPRINT(EM_DIAGRAM):   drop _11_0 ;
33786     +if missing( OPT_MEDIAN_HOME_VALUE ) then do;
MPRINT(EM_DIAGRAM):   if missing( OPT_MEDIAN_HOME_VALUE ) then do;
33787     +   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_0 = .;
33788     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
33789     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33790     +end;
MPRINT(EM_DIAGRAM):   end;
33791     +else do;
MPRINT(EM_DIAGRAM):   else do;
33792     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
33793     +   %DMNORMCP( OPT_MEDIAN_HOME_VALUE , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_MEDIAN_HOME_VALUE,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
33794     +   if _dm32 = '02:676.5-HIGH, MISSING'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = '02:676.5-HIGH, MISSING' then do;
33795     +      _11_0 = -1;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
33796     +   end;
MPRINT(EM_DIAGRAM):   end;
33797     +   else if _dm32 = '01:LOW-676.5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-676.5' then do;
33798     +      _11_0 = 1;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
33799     +   end;
MPRINT(EM_DIAGRAM):   end;
33800     +   else do;
MPRINT(EM_DIAGRAM):   else do;
33801     +      _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_0 = .;
33802     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
33803     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33804     +   end;
MPRINT(EM_DIAGRAM):   end;
33805     +end;
MPRINT(EM_DIAGRAM):   end;
33806     +
33807     +*** Generate dummy variables for PEP_STAR ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PEP_STAR ;
33808     +drop _17_0 ;
MPRINT(EM_DIAGRAM):   drop _17_0 ;
33809     +if missing( PEP_STAR ) then do;
MPRINT(EM_DIAGRAM):   if missing( PEP_STAR ) then do;
33810     +   _17_0 = .;
MPRINT(EM_DIAGRAM):   _17_0 = .;
33811     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
33812     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33813     +end;
MPRINT(EM_DIAGRAM):   end;
33814     +else do;
MPRINT(EM_DIAGRAM):   else do;
33815     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
33816     +   _dm12 = put( PEP_STAR , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( PEP_STAR , BEST12. );
33817     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
33818     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
33819     +      _17_0 = -1;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
33820     +   end;
MPRINT(EM_DIAGRAM):   end;
33821     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
33822     +      _17_0 = 1;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
33823     +   end;
MPRINT(EM_DIAGRAM):   end;
33824     +   else do;
MPRINT(EM_DIAGRAM):   else do;
33825     +      _17_0 = .;
MPRINT(EM_DIAGRAM):   _17_0 = .;
33826     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
33827     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
33828     +   end;
MPRINT(EM_DIAGRAM):   end;
33829     +end;
MPRINT(EM_DIAGRAM):   end;
33830     +
33831     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
33832     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
33833     +   _P0 = 0.2500469307;
MPRINT(EM_DIAGRAM):   _P0 = 0.2500469307;
33834     +   _P1 = 0.7499530693;
MPRINT(EM_DIAGRAM):   _P1 = 0.7499530693;
33835     +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
33836     +end;
MPRINT(EM_DIAGRAM):   end;
33837     +
33838     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
33839     +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
33840     +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
33841     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
33842     +
33843     +***  Effect: FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   *** Effect: FREQUENCY_STATUS_97NK ;
33844     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
33845     +_LP0 = _LP0 + (    -0.3556861257867) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.3556861257867) * _TEMP * _3_0;
33846     +_LP0 = _LP0 + (   -0.13171370881188) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13171370881188) * _TEMP * _3_1;
33847     +_LP0 = _LP0 + (    0.16318592168351) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16318592168351) * _TEMP * _3_2;
33848     +
33849     +***  Effect: OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_MEDIAN_HOME_VALUE ;
33850     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
33851     +_LP0 = _LP0 + (   -0.14135126079011) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14135126079011) * _TEMP * _11_0;
33852     +
33853     +***  Effect: PEP_STAR ;
MPRINT(EM_DIAGRAM):   *** Effect: PEP_STAR ;
33854     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
33855     +_LP0 = _LP0 + (   -0.17905481873096) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17905481873096) * _TEMP * _17_0;
33856     +
33857     +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
33858     +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
33859     +_TEMP =    -1.03523114674562 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.03523114674562 + _LP0;
33860     +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
33861     +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
33862     +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
33863     +end;
MPRINT(EM_DIAGRAM):   end;
33864     +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
33865     +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
33866     +
33867     +REGDR1:
33868     +
33869     +
33870     +
33871     +*** Update Posterior Probabilities;
MPRINT(EM_DIAGRAM):   REGDR1: *** Update Posterior Probabilities;
33872     +_P0 = _P0 * 0.05 / 0.25004693073024;
MPRINT(EM_DIAGRAM):   _P0 = _P0 * 0.05 / 0.25004693073024;
33873     +_P1 = _P1 * 0.95 / 0.74995306926975;
MPRINT(EM_DIAGRAM):   _P1 = _P1 * 0.95 / 0.74995306926975;
33874     +drop _sum; _sum = _P0 + _P1 ;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 + _P1 ;
33875     +if _sum > 4.135903E-25 then do;
MPRINT(EM_DIAGRAM):   if _sum > 4.135903E-25 then do;
33876     +   _P0 = _P0 / _sum;
MPRINT(EM_DIAGRAM):   _P0 = _P0 / _sum;
33877     +   _P1 = _P1 / _sum;
MPRINT(EM_DIAGRAM):   _P1 = _P1 / _sum;
33878     +end;
MPRINT(EM_DIAGRAM):   end;
33879     +
33880     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
33881     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
33882     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
33883     +
33884     +length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
33885     +
33886     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
33887     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
33888     +
33889     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
33890     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
33891     +
33892     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
33893     +EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
33894     +drop _sum;
MPRINT(EM_DIAGRAM):   drop _sum;
33895     +_sum = _P0 * 0 + _P1 * 0;
MPRINT(EM_DIAGRAM):   _sum = _P0 * 0 + _P1 * 0;
33896     +if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
33897     +   EP_TARGET_B = _sum; _decnum = 2;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
33898     +   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
33899     +end;
MPRINT(EM_DIAGRAM):   end;
33900     +
33901     +
33902     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
33903     +
33904     +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
33905     +label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
33906     +label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
33907     +P_TARGET_B1 = _P0;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = _P0;
33908     +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
33909     +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
33910     +P_TARGET_B0 = _P1;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = _P1;
33911     +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
33912     +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
33913     +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
33914     +end;
MPRINT(EM_DIAGRAM):   end;
33915     +I_TARGET_B = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_TARGET_B = REGDRF[_IY];
33916     +U_TARGET_B = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_TARGET_B = REGDRU[_IY];
33917     +
33918     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
33919     +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
33920     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33921      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
33922      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
33923      quit;
33924      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
33925      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
33926      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
33927      retain ID 3 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Reg";
33928      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
33929      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 372 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 372 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33930      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
33931      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33932      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 372 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 372 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33933      proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Trans_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
33934      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33935      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set EMWS1.TRANS_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
33936      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33937      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
33938      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
33939      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33940      proc contents data=EMWS1.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg_train out=_meta(keep=NAME) noprint;
33941      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 82 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
33942      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
33943      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33944      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 82 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 82 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33945      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
33946      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
33947      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
33948      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 82 observations read from the data set WORK._META.
NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 82 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33949      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
33950      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 74 rows and 5 columns.
 
33951      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33952      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
33953      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 74 observations read from the data set WORK._TEMPX.
NOTE: 74 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 83 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
 
 
33954      filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Trans\EMPUBLISHSCORE.sas";
33955      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
33956      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
33957      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Trans\EMPUBLISHSCORE.sas.
33958     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33959     +* Computed Code;
MPRINT(EM_DIAGRAM):   * Computed Code;
33960     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33961     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33962     +* TRANSFORM: FILE_AVG_GIFT , log10(FILE_AVG_GIFT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: FILE_AVG_GIFT , log10(FILE_AVG_GIFT + 1);
33963     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33964     +label LG10_FILE_AVG_GIFT = 'Transformed FILE_AVG_GIFT';
MPRINT(EM_DIAGRAM):   label LG10_FILE_AVG_GIFT = 'Transformed FILE_AVG_GIFT';
33965     +if FILE_AVG_GIFT eq . then LG10_FILE_AVG_GIFT = .;
MPRINT(EM_DIAGRAM):   if FILE_AVG_GIFT eq . then LG10_FILE_AVG_GIFT = .;
33966     +else do;
MPRINT(EM_DIAGRAM):   else do;
33967     +if FILE_AVG_GIFT + 1 > 0 then LG10_FILE_AVG_GIFT = log10(FILE_AVG_GIFT + 1);
MPRINT(EM_DIAGRAM):   if FILE_AVG_GIFT + 1 > 0 then LG10_FILE_AVG_GIFT = log10(FILE_AVG_GIFT + 1);
33968     +else LG10_FILE_AVG_GIFT = .;
MPRINT(EM_DIAGRAM):   else LG10_FILE_AVG_GIFT = .;
33969     +end;
MPRINT(EM_DIAGRAM):   end;
33970     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33971     +* TRANSFORM: LAST_GIFT_AMT , log10(LAST_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LAST_GIFT_AMT , log10(LAST_GIFT_AMT + 1);
33972     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33973     +label LG10_LAST_GIFT_AMT = 'Transformed LAST_GIFT_AMT';
MPRINT(EM_DIAGRAM):   label LG10_LAST_GIFT_AMT = 'Transformed LAST_GIFT_AMT';
33974     +if LAST_GIFT_AMT eq . then LG10_LAST_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   if LAST_GIFT_AMT eq . then LG10_LAST_GIFT_AMT = .;
33975     +else do;
MPRINT(EM_DIAGRAM):   else do;
33976     +if LAST_GIFT_AMT + 1 > 0 then LG10_LAST_GIFT_AMT = log10(LAST_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   if LAST_GIFT_AMT + 1 > 0 then LG10_LAST_GIFT_AMT = log10(LAST_GIFT_AMT + 1);
33977     +else LG10_LAST_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   else LG10_LAST_GIFT_AMT = .;
33978     +end;
MPRINT(EM_DIAGRAM):   end;
33979     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33980     +* TRANSFORM: LIFETIME_AVG_GIFT_AMT , log10(LIFETIME_AVG_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_AVG_GIFT_AMT , log10(LIFETIME_AVG_GIFT_AMT + 1);
33981     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33982     +label LG10_LIFETIME_AVG_GIFT_AMT = 'Transformed LIFETIME_AVG_GIFT_AMT';
MPRINT(EM_DIAGRAM):   label LG10_LIFETIME_AVG_GIFT_AMT = 'Transformed LIFETIME_AVG_GIFT_AMT';
33983     +if LIFETIME_AVG_GIFT_AMT eq . then LG10_LIFETIME_AVG_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   if LIFETIME_AVG_GIFT_AMT eq . then LG10_LIFETIME_AVG_GIFT_AMT = .;
33984     +else do;
MPRINT(EM_DIAGRAM):   else do;
33985     +if LIFETIME_AVG_GIFT_AMT + 1 > 0 then LG10_LIFETIME_AVG_GIFT_AMT = log10(LIFETIME_AVG_GIFT_AMT + 1);
MPRINT(EM_DIAGRAM):   if LIFETIME_AVG_GIFT_AMT + 1 > 0 then LG10_LIFETIME_AVG_GIFT_AMT = log10(LIFETIME_AVG_GIFT_AMT + 1);
33986     +else LG10_LIFETIME_AVG_GIFT_AMT = .;
MPRINT(EM_DIAGRAM):   else LG10_LIFETIME_AVG_GIFT_AMT = .;
33987     +end;
MPRINT(EM_DIAGRAM):   end;
33988     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33989     +* TRANSFORM: LIFETIME_GIFT_AMOUNT , log10(LIFETIME_GIFT_AMOUNT + 1);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_GIFT_AMOUNT , log10(LIFETIME_GIFT_AMOUNT + 1);
33990     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33991     +label LG10_LIFETIME_GIFT_AMOUNT = 'Transformed LIFETIME_GIFT_AMOUNT';
MPRINT(EM_DIAGRAM):   label LG10_LIFETIME_GIFT_AMOUNT = 'Transformed LIFETIME_GIFT_AMOUNT';
33992     +if LIFETIME_GIFT_AMOUNT eq . then LG10_LIFETIME_GIFT_AMOUNT = .;
MPRINT(EM_DIAGRAM):   if LIFETIME_GIFT_AMOUNT eq . then LG10_LIFETIME_GIFT_AMOUNT = .;
33993     +else do;
MPRINT(EM_DIAGRAM):   else do;
33994     +if LIFETIME_GIFT_AMOUNT + 1 > 0 then LG10_LIFETIME_GIFT_AMOUNT = log10(LIFETIME_GIFT_AMOUNT + 1);
MPRINT(EM_DIAGRAM):   if LIFETIME_GIFT_AMOUNT + 1 > 0 then LG10_LIFETIME_GIFT_AMOUNT = log10(LIFETIME_GIFT_AMOUNT + 1);
33995     +else LG10_LIFETIME_GIFT_AMOUNT = .;
MPRINT(EM_DIAGRAM):   else LG10_LIFETIME_GIFT_AMOUNT = .;
33996     +end;
MPRINT(EM_DIAGRAM):   end;
33997     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33998     +* TRANSFORM: LIFETIME_GIFT_COUNT , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: LIFETIME_GIFT_COUNT , Optimal Binning(4);
33999     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34000     +label OPT_LIFETIME_GIFT_COUNT = 'Transformed LIFETIME_GIFT_COUNT';
MPRINT(EM_DIAGRAM):   label OPT_LIFETIME_GIFT_COUNT = 'Transformed LIFETIME_GIFT_COUNT';
34001     +length OPT_LIFETIME_GIFT_COUNT $36;
MPRINT(EM_DIAGRAM):   length OPT_LIFETIME_GIFT_COUNT $36;
34002     +if (LIFETIME_GIFT_COUNT eq .) then OPT_LIFETIME_GIFT_COUNT="02:4.5-13.5, MISSING";
MPRINT(EM_DIAGRAM):   if (LIFETIME_GIFT_COUNT eq .) then OPT_LIFETIME_GIFT_COUNT="02:4.5-13.5, MISSING";
34003     +else
34004     +if (LIFETIME_GIFT_COUNT < 4.5) then
34005     +OPT_LIFETIME_GIFT_COUNT = "01:low-4.5";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT < 4.5) then OPT_LIFETIME_GIFT_COUNT = "01:low-4.5";
34006     +else
34007     +if (LIFETIME_GIFT_COUNT >= 4.5 and LIFETIME_GIFT_COUNT < 13.5) then
34008     +OPT_LIFETIME_GIFT_COUNT = "02:4.5-13.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT >= 4.5 and LIFETIME_GIFT_COUNT < 13.5) then OPT_LIFETIME_GIFT_COUNT = "02:4.5-13.5, MISSING";
34009     +else
34010     +if (LIFETIME_GIFT_COUNT >= 13.5) then
34011     +OPT_LIFETIME_GIFT_COUNT = "03:13.5-high";
MPRINT(EM_DIAGRAM):   else if (LIFETIME_GIFT_COUNT >= 13.5) then OPT_LIFETIME_GIFT_COUNT = "03:13.5-high";
34012     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34013     +* TRANSFORM: MEDIAN_HOME_VALUE , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: MEDIAN_HOME_VALUE , Optimal Binning(4);
34014     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34015     +label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
34016     +length OPT_MEDIAN_HOME_VALUE $36;
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOME_VALUE $36;
34017     +if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
34018     +else
34019     +if (MEDIAN_HOME_VALUE < 676.5) then
34020     +OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE < 676.5) then OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
34021     +else
34022     +if (MEDIAN_HOME_VALUE >= 676.5) then
34023     +OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE >= 676.5) then OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
34024     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34025     +* TRANSFORM: MEDIAN_HOUSEHOLD_INCOME , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: MEDIAN_HOUSEHOLD_INCOME , Optimal Binning(4);
34026     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34027     +label OPT_MEDIAN_HOUSEHOLD_INCOME = 'Transformed MEDIAN_HOUSEHOLD_INCOME';
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOUSEHOLD_INCOME = 'Transformed MEDIAN_HOUSEHOLD_INCOME';
34028     +length OPT_MEDIAN_HOUSEHOLD_INCOME $36;
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOUSEHOLD_INCOME $36;
34029     +if (MEDIAN_HOUSEHOLD_INCOME eq .) then OPT_MEDIAN_HOUSEHOLD_INCOME="01:low-624.5, MISSING";
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOUSEHOLD_INCOME eq .) then OPT_MEDIAN_HOUSEHOLD_INCOME="01:low-624.5, MISSING";
34030     +else
34031     +if (MEDIAN_HOUSEHOLD_INCOME < 624.5) then
34032     +OPT_MEDIAN_HOUSEHOLD_INCOME = "01:low-624.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOUSEHOLD_INCOME < 624.5) then OPT_MEDIAN_HOUSEHOLD_INCOME = "01:low-624.5, MISSING";
34033     +else
34034     +if (MEDIAN_HOUSEHOLD_INCOME >= 624.5) then
34035     +OPT_MEDIAN_HOUSEHOLD_INCOME = "02:624.5-high";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOUSEHOLD_INCOME >= 624.5) then OPT_MEDIAN_HOUSEHOLD_INCOME = "02:624.5-high";
34036     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34037     +* TRANSFORM: PER_CAPITA_INCOME , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: PER_CAPITA_INCOME , Optimal Binning(4);
34038     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34039     +label OPT_PER_CAPITA_INCOME = 'Transformed PER_CAPITA_INCOME';
MPRINT(EM_DIAGRAM):   label OPT_PER_CAPITA_INCOME = 'Transformed PER_CAPITA_INCOME';
34040     +length OPT_PER_CAPITA_INCOME $36;
MPRINT(EM_DIAGRAM):   length OPT_PER_CAPITA_INCOME $36;
34041     +if (PER_CAPITA_INCOME eq .) then OPT_PER_CAPITA_INCOME="01:low-14976, MISSING";
MPRINT(EM_DIAGRAM):   if (PER_CAPITA_INCOME eq .) then OPT_PER_CAPITA_INCOME="01:low-14976, MISSING";
34042     +else
34043     +if (PER_CAPITA_INCOME < 14976) then
34044     +OPT_PER_CAPITA_INCOME = "01:low-14976, MISSING";
MPRINT(EM_DIAGRAM):   else if (PER_CAPITA_INCOME < 14976) then OPT_PER_CAPITA_INCOME = "01:low-14976, MISSING";
34045     +else
34046     +if (PER_CAPITA_INCOME >= 14976) then
34047     +OPT_PER_CAPITA_INCOME = "02:14976-high";
MPRINT(EM_DIAGRAM):   else if (PER_CAPITA_INCOME >= 14976) then OPT_PER_CAPITA_INCOME = "02:14976-high";
34048     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34049     +* TRANSFORM: RECENT_RESPONSE_PROP , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: RECENT_RESPONSE_PROP , Optimal Binning(4);
34050     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34051     +label OPT_RECENT_RESPONSE_PROP = 'Transformed RECENT_RESPONSE_PROP';
MPRINT(EM_DIAGRAM):   label OPT_RECENT_RESPONSE_PROP = 'Transformed RECENT_RESPONSE_PROP';
34052     +length OPT_RECENT_RESPONSE_PROP $36;
MPRINT(EM_DIAGRAM):   length OPT_RECENT_RESPONSE_PROP $36;
34053     +if (RECENT_RESPONSE_PROP eq .) then OPT_RECENT_RESPONSE_PROP="01:low-0.2125, MISSING";
MPRINT(EM_DIAGRAM):   if (RECENT_RESPONSE_PROP eq .) then OPT_RECENT_RESPONSE_PROP="01:low-0.2125, MISSING";
34054     +else
34055     +if (RECENT_RESPONSE_PROP < 0.2125) then
34056     +OPT_RECENT_RESPONSE_PROP = "01:low-0.2125, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_RESPONSE_PROP < 0.2125) then OPT_RECENT_RESPONSE_PROP = "01:low-0.2125, MISSING";
34057     +else
34058     +if (RECENT_RESPONSE_PROP >= 0.2125) then
34059     +OPT_RECENT_RESPONSE_PROP = "02:0.2125-high";
MPRINT(EM_DIAGRAM):   else if (RECENT_RESPONSE_PROP >= 0.2125) then OPT_RECENT_RESPONSE_PROP = "02:0.2125-high";
34060     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34061     +* TRANSFORM: RECENT_STAR_STATUS , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   * TRANSFORM: RECENT_STAR_STATUS , Optimal Binning(4);
34062     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34063     +label OPT_RECENT_STAR_STATUS = 'Transformed RECENT_STAR_STATUS';
MPRINT(EM_DIAGRAM):   label OPT_RECENT_STAR_STATUS = 'Transformed RECENT_STAR_STATUS';
34064     +length OPT_RECENT_STAR_STATUS $36;
MPRINT(EM_DIAGRAM):   length OPT_RECENT_STAR_STATUS $36;
34065     +if (RECENT_STAR_STATUS eq .) then OPT_RECENT_STAR_STATUS="01:low-0.5, MISSING";
MPRINT(EM_DIAGRAM):   if (RECENT_STAR_STATUS eq .) then OPT_RECENT_STAR_STATUS="01:low-0.5, MISSING";
34066     +else
34067     +if (RECENT_STAR_STATUS < 0.5) then
34068     +OPT_RECENT_STAR_STATUS = "01:low-0.5, MISSING";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS < 0.5) then OPT_RECENT_STAR_STATUS = "01:low-0.5, MISSING";
34069     +else
34070     +if (RECENT_STAR_STATUS >= 0.5 and RECENT_STAR_STATUS < 1.5) then
34071     +OPT_RECENT_STAR_STATUS = "02:0.5-1.5";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS >= 0.5 and RECENT_STAR_STATUS < 1.5) then OPT_RECENT_STAR_STATUS = "02:0.5-1.5";
34072     +else
34073     +if (RECENT_STAR_STATUS >= 1.5) then
34074     +OPT_RECENT_STAR_STATUS = "03:1.5-high";
MPRINT(EM_DIAGRAM):   else if (RECENT_STAR_STATUS >= 1.5) then OPT_RECENT_STAR_STATUS = "03:1.5-high";
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
34075      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
34076      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
34077      quit;
34078      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
34079      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
34080      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
34081      retain ID 4 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 4 Node "Trans";
34082      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
34083      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 10 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34084      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
34085      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34086      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 10 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34087      proc sort data=EMWS1.Impt_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Impt_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
34088      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34089      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set EMWS1.IMPT_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
34090      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
34091      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
34092      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
34093      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34094      proc contents data=EMWS1.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Trans_train out=_meta(keep=NAME) noprint;
34095      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
34096      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
34097      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34098      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34099      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
34100      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
34101      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34102      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 54 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34103      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
34104      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 10 rows and 5 columns.
 
34105      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34106      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
34107      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 10 observations read from the data set WORK._TEMPX.
NOTE: 10 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 93 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
34108      filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Impt\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Impt\EMPUBLISHSCORE.sas";
34109      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
34110      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
34111      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Impt\EMPUBLISHSCORE.sas.
34112     +*;
MPRINT(EM_DIAGRAM):   *;
34113     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
34114     +*;
MPRINT(EM_DIAGRAM):   *;
34115     +label IMP_DONOR_AGE = 'Imputed DONOR_AGE';
MPRINT(EM_DIAGRAM):   label IMP_DONOR_AGE = 'Imputed DONOR_AGE';
34116     +IMP_DONOR_AGE = DONOR_AGE;
MPRINT(EM_DIAGRAM):   IMP_DONOR_AGE = DONOR_AGE;
34117     +if missing(DONOR_AGE) then IMP_DONOR_AGE = 60;
MPRINT(EM_DIAGRAM):   if missing(DONOR_AGE) then IMP_DONOR_AGE = 60;
34118     +label IMP_MONTHS_SINCE_LAST_PROM_RESP = 'Imputed MONTHS_SINCE_LAST_PROM_RESP';
MPRINT(EM_DIAGRAM):   label IMP_MONTHS_SINCE_LAST_PROM_RESP = 'Imputed MONTHS_SINCE_LAST_PROM_RESP';
34119     +IMP_MONTHS_SINCE_LAST_PROM_RESP = MONTHS_SINCE_LAST_PROM_RESP;
MPRINT(EM_DIAGRAM):   IMP_MONTHS_SINCE_LAST_PROM_RESP = MONTHS_SINCE_LAST_PROM_RESP;
34120     +if missing(MONTHS_SINCE_LAST_PROM_RESP) then IMP_MONTHS_SINCE_LAST_PROM_RESP = 18;
MPRINT(EM_DIAGRAM):   if missing(MONTHS_SINCE_LAST_PROM_RESP) then IMP_MONTHS_SINCE_LAST_PROM_RESP = 18;
34121     +*;
MPRINT(EM_DIAGRAM):   *;
34122     +* TREE IMPUTATION;
MPRINT(EM_DIAGRAM):   * TREE IMPUTATION;
34123     +*;
MPRINT(EM_DIAGRAM):   *;
34124     +*;
MPRINT(EM_DIAGRAM):   *;
34125     +* IMPUTE VARIABLE: INCOME_GROUP;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: INCOME_GROUP;
34126     +*;
MPRINT(EM_DIAGRAM):   *;
34127     +label IMP_INCOME_GROUP = 'Imputed INCOME_GROUP';
MPRINT(EM_DIAGRAM):   label IMP_INCOME_GROUP = 'Imputed INCOME_GROUP';
34128     +IMP_INCOME_GROUP = INCOME_GROUP;
MPRINT(EM_DIAGRAM):   IMP_INCOME_GROUP = INCOME_GROUP;
34129     +if missing(IMP_INCOME_GROUP) then do;
MPRINT(EM_DIAGRAM):   if missing(IMP_INCOME_GROUP) then do;
34130     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34131     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
34132     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
34133     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
34134     +LENGTH I_INCOME_GROUP $ 12;
MPRINT(EM_DIAGRAM):   LENGTH I_INCOME_GROUP $ 12;
34135     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
34136     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
34137     +label P_INCOME_GROUP2 = 'Predicted: INCOME_GROUP=2';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP2 = 'Predicted: INCOME_GROUP=2';
34138     +label P_INCOME_GROUP6 = 'Predicted: INCOME_GROUP=6';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP6 = 'Predicted: INCOME_GROUP=6';
34139     +label P_INCOME_GROUP5 = 'Predicted: INCOME_GROUP=5';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP5 = 'Predicted: INCOME_GROUP=5';
34140     +label P_INCOME_GROUP4 = 'Predicted: INCOME_GROUP=4';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP4 = 'Predicted: INCOME_GROUP=4';
34141     +label P_INCOME_GROUP3 = 'Predicted: INCOME_GROUP=3';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP3 = 'Predicted: INCOME_GROUP=3';
34142     +label P_INCOME_GROUP1 = 'Predicted: INCOME_GROUP=1';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP1 = 'Predicted: INCOME_GROUP=1';
34143     +label P_INCOME_GROUP7 = 'Predicted: INCOME_GROUP=7';
MPRINT(EM_DIAGRAM):   label P_INCOME_GROUP7 = 'Predicted: INCOME_GROUP=7';
34144     +label Q_INCOME_GROUP2 = 'Unadjusted P: INCOME_GROUP=2';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP2 = 'Unadjusted P: INCOME_GROUP=2';
34145     +label Q_INCOME_GROUP6 = 'Unadjusted P: INCOME_GROUP=6';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP6 = 'Unadjusted P: INCOME_GROUP=6';
34146     +label Q_INCOME_GROUP5 = 'Unadjusted P: INCOME_GROUP=5';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP5 = 'Unadjusted P: INCOME_GROUP=5';
34147     +label Q_INCOME_GROUP4 = 'Unadjusted P: INCOME_GROUP=4';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP4 = 'Unadjusted P: INCOME_GROUP=4';
34148     +label Q_INCOME_GROUP3 = 'Unadjusted P: INCOME_GROUP=3';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP3 = 'Unadjusted P: INCOME_GROUP=3';
34149     +label Q_INCOME_GROUP1 = 'Unadjusted P: INCOME_GROUP=1';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP1 = 'Unadjusted P: INCOME_GROUP=1';
34150     +label Q_INCOME_GROUP7 = 'Unadjusted P: INCOME_GROUP=7';
MPRINT(EM_DIAGRAM):   label Q_INCOME_GROUP7 = 'Unadjusted P: INCOME_GROUP=7';
34151     +label I_INCOME_GROUP = 'Into: INCOME_GROUP';
MPRINT(EM_DIAGRAM):   label I_INCOME_GROUP = 'Into: INCOME_GROUP';
34152     +label U_INCOME_GROUP = 'Unnormalized Into: INCOME_GROUP';
MPRINT(EM_DIAGRAM):   label U_INCOME_GROUP = 'Unnormalized Into: INCOME_GROUP';
34153     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
34154     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
34155     +LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
34156     +DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
34157     +_ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
34158     +/* Initialize to avoid warning. */
34159     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
34160     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
34161     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
34162     +/* Initialize to avoid warning. */
34163     +LENGTH _ARBFMT_3 $ 3;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_3 $ 3;
34164     +DROP _ARBFMT_3;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_3;
34165     +_ARBFMT_3 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = ' ';
34166     +/* Initialize to avoid warning. */
34167     +LENGTH _ARBFMT_1 $ 1;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_1 $ 1;
34168     +DROP _ARBFMT_1;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_1;
34169     +_ARBFMT_1 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_1 = ' ';
34170     +/* Initialize to avoid warning. */
34171     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_4 $ 4;
34172     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
34173     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
34174     +/* Initialize to avoid warning. */
34175     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
34176     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
34177     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34178     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34179     +MEDIAN_HOUSEHOLD_INCOME < 432.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 432.5 THEN DO;
34180     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34181     +END;
MPRINT(EM_DIAGRAM):   END;
34182     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34183     +432.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 432.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34184     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34185     +END;
MPRINT(EM_DIAGRAM):   END;
34186     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34187     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34188     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34189     +IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34190     +'23' ,'25' ,'01' ,'09' ,'41' ,'15' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,
34191     +'46' ,'40' ,'26' ,'28' ,'21' ,'51' ,'34' ,'42' ,'44' ,'29' ,'05' ,'17' ,
34192     +'43' ,'39' ,'11' ,'31' ,'33' ,'38' ,'47' ,'53' ,'22' ,'06' ,'32' ,'03' ,
34193     +'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '23' ,'25' ,'01' ,'09' ,'41' ,'15' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' , '46' ,'40' ,'26' ,'28' ,'21' ,'51' ,'34' ,'42' ,'44' ,'29' ,'05' ,'17' , '43' ,'39' ,'11'
,'31' ,'33' ,'38' ,'47' ,'53' ,'22' ,'06' ,'32' ,'03' , '52' ,'37' ,'10' ) THEN DO;
34194     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34195     +END;
MPRINT(EM_DIAGRAM):   END;
34196     +ELSE IF _ARBFMT_2 IN ('02' ,'24' ,'12' ,'35' ,'13' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('02' ,'24' ,'12' ,'35' ,'13' ,'14' ) THEN DO;
34197     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34198     +END;
MPRINT(EM_DIAGRAM):   END;
34199     +END;
MPRINT(EM_DIAGRAM):   END;
34200     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34201     +IF PER_CAPITA_INCOME < 19185.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 19185.5 THEN DO;
34202     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34203     +END;
MPRINT(EM_DIAGRAM):   END;
34204     +ELSE IF 19185.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 19185.5 <= PER_CAPITA_INCOME THEN DO;
34205     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34206     +END;
MPRINT(EM_DIAGRAM):   END;
34207     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34208     +END;
MPRINT(EM_DIAGRAM):   END;
34209     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34210     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34211     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34212     +_ARBFMT_3 = PUT( HOME_OWNER , $3.);
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = PUT( HOME_OWNER , $3.);
34213     +%DMNORMIP( _ARBFMT_3);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34214     +IF _ARBFMT_3 IN ('H' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_3 IN ('H' ) THEN DO;
34215     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34216     +END;
MPRINT(EM_DIAGRAM):   END;
34217     +ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
34218     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34219     +END;
MPRINT(EM_DIAGRAM):   END;
34220     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
34221     +IF 2.7 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   IF 2.7 <= FILE_AVG_GIFT THEN DO;
34222     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34223     +END;
MPRINT(EM_DIAGRAM):   END;
34224     +ELSE IF FILE_AVG_GIFT < 2.7 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF FILE_AVG_GIFT < 2.7 THEN DO;
34225     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34226     +END;
MPRINT(EM_DIAGRAM):   END;
34227     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
34228     +END;
MPRINT(EM_DIAGRAM):   END;
34229     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
34230     +IF 2.7 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   IF 2.7 <= LIFETIME_AVG_GIFT_AMT THEN DO;
34231     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34232     +END;
MPRINT(EM_DIAGRAM):   END;
34233     +ELSE IF LIFETIME_AVG_GIFT_AMT < 2.7 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_AVG_GIFT_AMT < 2.7 THEN DO;
34234     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34235     +END;
MPRINT(EM_DIAGRAM):   END;
34236     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
34237     +END;
MPRINT(EM_DIAGRAM):   END;
34238     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34239     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34240     +P_INCOME_GROUP2 = 0.10574018126888;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.10574018126888;
34241     +P_INCOME_GROUP6 = 0.13897280966767;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.13897280966767;
34242     +P_INCOME_GROUP5 = 0.29003021148036;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.29003021148036;
34243     +P_INCOME_GROUP4 = 0.16012084592145;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.16012084592145;
34244     +P_INCOME_GROUP3 = 0.07552870090634;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07552870090634;
34245     +P_INCOME_GROUP1 = 0.13293051359516;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.13293051359516;
34246     +P_INCOME_GROUP7 = 0.09667673716012;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.09667673716012;
34247     +Q_INCOME_GROUP2 = 0.10574018126888;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.10574018126888;
34248     +Q_INCOME_GROUP6 = 0.13897280966767;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.13897280966767;
34249     +Q_INCOME_GROUP5 = 0.29003021148036;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.29003021148036;
34250     +Q_INCOME_GROUP4 = 0.16012084592145;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.16012084592145;
34251     +Q_INCOME_GROUP3 = 0.07552870090634;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07552870090634;
34252     +Q_INCOME_GROUP1 = 0.13293051359516;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.13293051359516;
34253     +Q_INCOME_GROUP7 = 0.09667673716012;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.09667673716012;
34254     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34255     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34256     +END;
MPRINT(EM_DIAGRAM):   END;
34257     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34258     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34259     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34260     +MEDIAN_HOUSEHOLD_INCOME < 531.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 531.5 THEN DO;
34261     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34262     +END;
MPRINT(EM_DIAGRAM):   END;
34263     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34264     +531.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 531.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34265     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34266     +END;
MPRINT(EM_DIAGRAM):   END;
34267     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34268     +IF PER_CAPITA_INCOME < 20802 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 20802 THEN DO;
34269     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34270     +END;
MPRINT(EM_DIAGRAM):   END;
34271     +ELSE IF 20802 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 20802 <= PER_CAPITA_INCOME THEN DO;
34272     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34273     +END;
MPRINT(EM_DIAGRAM):   END;
34274     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34275     +END;
MPRINT(EM_DIAGRAM):   END;
34276     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
34277     +IF MEDIAN_HOME_VALUE < 1183 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1183 THEN DO;
34278     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34279     +END;
MPRINT(EM_DIAGRAM):   END;
34280     +ELSE IF 1183 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1183 <= MEDIAN_HOME_VALUE THEN DO;
34281     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34282     +END;
MPRINT(EM_DIAGRAM):   END;
34283     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34284     +END;
MPRINT(EM_DIAGRAM):   END;
34285     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34286     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34287     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34288     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
34289     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34290     +IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('1' ) THEN DO;
34291     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34292     +END;
MPRINT(EM_DIAGRAM):   END;
34293     +ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
34294     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34295     +END;
MPRINT(EM_DIAGRAM):   END;
34296     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34297     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34298     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34299     +IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'24' ,'12' ,'35' ,'13' ,'14' ,
34300     +'34' ,'11' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'24' ,'12' ,'35' ,'13' ,'14' , '34' ,'11' ,'03' ) THEN DO;
34301     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34302     +END;
MPRINT(EM_DIAGRAM):   END;
34303     +ELSE IF _ARBFMT_2 IN ('18' ,'27' ,'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('18' ,'27' ,'40' ) THEN DO;
34304     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34305     +END;
MPRINT(EM_DIAGRAM):   END;
34306     +END;
MPRINT(EM_DIAGRAM):   END;
34307     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
34308     +IF 8.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   IF 8.5 <= PCT_ATTRIBUTE2 THEN DO;
34309     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34310     +END;
MPRINT(EM_DIAGRAM):   END;
34311     +ELSE IF PCT_ATTRIBUTE2 < 8.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_ATTRIBUTE2 < 8.5 THEN DO;
34312     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34313     +END;
MPRINT(EM_DIAGRAM):   END;
34314     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
34315     +END;
MPRINT(EM_DIAGRAM):   END;
34316     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34317     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34318     +P_INCOME_GROUP2 = 0.1;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.1;
34319     +P_INCOME_GROUP6 = 0.21666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.21666666666666;
34320     +P_INCOME_GROUP5 = 0.28333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.28333333333333;
34321     +P_INCOME_GROUP4 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.11666666666666;
34322     +P_INCOME_GROUP3 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08333333333333;
34323     +P_INCOME_GROUP1 = 0.01666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01666666666666;
34324     +P_INCOME_GROUP7 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.18333333333333;
34325     +Q_INCOME_GROUP2 = 0.1;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.1;
34326     +Q_INCOME_GROUP6 = 0.21666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.21666666666666;
34327     +Q_INCOME_GROUP5 = 0.28333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.28333333333333;
34328     +Q_INCOME_GROUP4 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.11666666666666;
34329     +Q_INCOME_GROUP3 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08333333333333;
34330     +Q_INCOME_GROUP1 = 0.01666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01666666666666;
34331     +Q_INCOME_GROUP7 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.18333333333333;
34332     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34333     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34334     +END;
MPRINT(EM_DIAGRAM):   END;
34335     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34336     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34337     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
34338     +MEDIAN_HOME_VALUE < 2637.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 2637.5 THEN DO;
34339     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34340     +END;
MPRINT(EM_DIAGRAM):   END;
34341     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
34342     +2637.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 2637.5 <= MEDIAN_HOME_VALUE THEN DO;
34343     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34344     +END;
MPRINT(EM_DIAGRAM):   END;
34345     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34346     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34347     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34348     +IF _ARBFMT_2 IN ('24' ,'12' ,'35' ,'14' ,'34' ,'11' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('24' ,'12' ,'35' ,'14' ,'34' ,'11' ) THEN DO;
34349     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34350     +END;
MPRINT(EM_DIAGRAM):   END;
34351     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'13' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'13' ,'03' ) THEN DO;
34352     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34353     +END;
MPRINT(EM_DIAGRAM):   END;
34354     +END;
MPRINT(EM_DIAGRAM):   END;
34355     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34356     +IF PER_CAPITA_INCOME < 33325 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 33325 THEN DO;
34357     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34358     +END;
MPRINT(EM_DIAGRAM):   END;
34359     +ELSE IF 33325 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 33325 <= PER_CAPITA_INCOME THEN DO;
34360     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34361     +END;
MPRINT(EM_DIAGRAM):   END;
34362     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34363     +END;
MPRINT(EM_DIAGRAM):   END;
34364     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34365     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34366     +P_INCOME_GROUP2 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0;
34367     +P_INCOME_GROUP6 = 0.47037037037037;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.47037037037037;
34368     +P_INCOME_GROUP5 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.13333333333333;
34369     +P_INCOME_GROUP4 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.06666666666666;
34370     +P_INCOME_GROUP3 = 0.01481481481481;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.01481481481481;
34371     +P_INCOME_GROUP1 = 0.01111111111111;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01111111111111;
34372     +P_INCOME_GROUP7 = 0.3037037037037;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.3037037037037;
34373     +Q_INCOME_GROUP2 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0;
34374     +Q_INCOME_GROUP6 = 0.47037037037037;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.47037037037037;
34375     +Q_INCOME_GROUP5 = 0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.13333333333333;
34376     +Q_INCOME_GROUP4 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.06666666666666;
34377     +Q_INCOME_GROUP3 = 0.01481481481481;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.01481481481481;
34378     +Q_INCOME_GROUP1 = 0.01111111111111;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01111111111111;
34379     +Q_INCOME_GROUP7 = 0.3037037037037;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.3037037037037;
34380     +I_INCOME_GROUP = '6';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '6';
34381     +U_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 6;
34382     +END;
MPRINT(EM_DIAGRAM):   END;
34383     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34384     +P_INCOME_GROUP2 = 0.00921658986175;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.00921658986175;
34385     +P_INCOME_GROUP6 = 0.19585253456221;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.19585253456221;
34386     +P_INCOME_GROUP5 = 0.22811059907834;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.22811059907834;
34387     +P_INCOME_GROUP4 = 0.08294930875576;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.08294930875576;
34388     +P_INCOME_GROUP3 = 0.02764976958525;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.02764976958525;
34389     +P_INCOME_GROUP1 = 0.00691244239631;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.00691244239631;
34390     +P_INCOME_GROUP7 = 0.44930875576036;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.44930875576036;
34391     +Q_INCOME_GROUP2 = 0.00921658986175;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.00921658986175;
34392     +Q_INCOME_GROUP6 = 0.19585253456221;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.19585253456221;
34393     +Q_INCOME_GROUP5 = 0.22811059907834;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.22811059907834;
34394     +Q_INCOME_GROUP4 = 0.08294930875576;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.08294930875576;
34395     +Q_INCOME_GROUP3 = 0.02764976958525;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.02764976958525;
34396     +Q_INCOME_GROUP1 = 0.00691244239631;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.00691244239631;
34397     +Q_INCOME_GROUP7 = 0.44930875576036;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.44930875576036;
34398     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
34399     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
34400     +END;
MPRINT(EM_DIAGRAM):   END;
34401     +END;
MPRINT(EM_DIAGRAM):   END;
34402     +END;
MPRINT(EM_DIAGRAM):   END;
34403     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34404     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34405     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
34406     +MEDIAN_HOME_VALUE < 1117.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1117.5 THEN DO;
34407     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34408     +END;
MPRINT(EM_DIAGRAM):   END;
34409     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
34410     +1117.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1117.5 <= MEDIAN_HOME_VALUE THEN DO;
34411     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34412     +END;
MPRINT(EM_DIAGRAM):   END;
34413     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34414     +IF PER_CAPITA_INCOME < 18546 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 18546 THEN DO;
34415     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34416     +END;
MPRINT(EM_DIAGRAM):   END;
34417     +ELSE IF 18546 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 18546 <= PER_CAPITA_INCOME THEN DO;
34418     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34419     +END;
MPRINT(EM_DIAGRAM):   END;
34420     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34421     +END;
MPRINT(EM_DIAGRAM):   END;
34422     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
34423     +IF 84.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 84.5 <= PCT_OWNER_OCCUPIED THEN DO;
34424     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34425     +END;
MPRINT(EM_DIAGRAM):   END;
34426     +ELSE IF PCT_OWNER_OCCUPIED < 84.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 84.5 THEN DO;
34427     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34428     +END;
MPRINT(EM_DIAGRAM):   END;
34429     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
34430     +END;
MPRINT(EM_DIAGRAM):   END;
34431     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34432     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34433     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34434     +IF NOT MISSING(DONOR_AGE ) AND
34435     +DONOR_AGE < 73.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 73.5 THEN DO;
34436     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34437     +END;
MPRINT(EM_DIAGRAM):   END;
34438     +ELSE IF NOT MISSING(DONOR_AGE ) AND
34439     +73.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 73.5 <= DONOR_AGE THEN DO;
34440     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34441     +END;
MPRINT(EM_DIAGRAM):   END;
34442     +IF _BRANCH_ LT 0 AND NOT MISSING(NUMBER_PROM_12 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(NUMBER_PROM_12 ) THEN DO;
34443     +IF NUMBER_PROM_12 < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NUMBER_PROM_12 < 30.5 THEN DO;
34444     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34445     +END;
MPRINT(EM_DIAGRAM):   END;
34446     +ELSE IF 30.5 <= NUMBER_PROM_12 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= NUMBER_PROM_12 THEN DO;
34447     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34448     +END;
MPRINT(EM_DIAGRAM):   END;
34449     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34450     +END;
MPRINT(EM_DIAGRAM):   END;
34451     +IF _BRANCH_ LT 0 AND NOT MISSING(MOR_HIT_RATE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MOR_HIT_RATE ) THEN DO;
34452     +IF MOR_HIT_RATE < 41.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MOR_HIT_RATE < 41.5 THEN DO;
34453     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34454     +END;
MPRINT(EM_DIAGRAM):   END;
34455     +ELSE IF 41.5 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 41.5 <= MOR_HIT_RATE THEN DO;
34456     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34457     +END;
MPRINT(EM_DIAGRAM):   END;
34458     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34459     +END;
MPRINT(EM_DIAGRAM):   END;
34460     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34461     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34462     +P_INCOME_GROUP2 = 0.21875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.21875;
34463     +P_INCOME_GROUP6 = 0.125;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.125;
34464     +P_INCOME_GROUP5 = 0.171875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.171875;
34465     +P_INCOME_GROUP4 = 0.21875;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.21875;
34466     +P_INCOME_GROUP3 = 0.140625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.140625;
34467     +P_INCOME_GROUP1 = 0.0625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.0625;
34468     +P_INCOME_GROUP7 = 0.0625;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.0625;
34469     +Q_INCOME_GROUP2 = 0.21875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.21875;
34470     +Q_INCOME_GROUP6 = 0.125;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.125;
34471     +Q_INCOME_GROUP5 = 0.171875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.171875;
34472     +Q_INCOME_GROUP4 = 0.21875;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.21875;
34473     +Q_INCOME_GROUP3 = 0.140625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.140625;
34474     +Q_INCOME_GROUP1 = 0.0625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.0625;
34475     +Q_INCOME_GROUP7 = 0.0625;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.0625;
34476     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34477     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34478     +END;
MPRINT(EM_DIAGRAM):   END;
34479     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34480     +IF NOT MISSING(PCT_ATTRIBUTE4 ) AND
34481     +61 <= PCT_ATTRIBUTE4 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE4 ) AND 61 <= PCT_ATTRIBUTE4 THEN DO;
34482     +P_INCOME_GROUP2 = 0.5;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.5;
34483     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
34484     +P_INCOME_GROUP5 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.33333333333333;
34485     +P_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0;
34486     +P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
34487     +P_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.16666666666666;
34488     +P_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0;
34489     +Q_INCOME_GROUP2 = 0.5;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.5;
34490     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
34491     +Q_INCOME_GROUP5 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.33333333333333;
34492     +Q_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0;
34493     +Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
34494     +Q_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.16666666666666;
34495     +Q_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0;
34496     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34497     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34498     +END;
MPRINT(EM_DIAGRAM):   END;
34499     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34500     +P_INCOME_GROUP2 = 0.0258064516129;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.0258064516129;
34501     +P_INCOME_GROUP6 = 0.17419354838709;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.17419354838709;
34502     +P_INCOME_GROUP5 = 0.36129032258064;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.36129032258064;
34503     +P_INCOME_GROUP4 = 0.2258064516129;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2258064516129;
34504     +P_INCOME_GROUP3 = 0.06774193548387;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.06774193548387;
34505     +P_INCOME_GROUP1 = 0.01290322580645;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01290322580645;
34506     +P_INCOME_GROUP7 = 0.13225806451612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.13225806451612;
34507     +Q_INCOME_GROUP2 = 0.0258064516129;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.0258064516129;
34508     +Q_INCOME_GROUP6 = 0.17419354838709;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.17419354838709;
34509     +Q_INCOME_GROUP5 = 0.36129032258064;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.36129032258064;
34510     +Q_INCOME_GROUP4 = 0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2258064516129;
34511     +Q_INCOME_GROUP3 = 0.06774193548387;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.06774193548387;
34512     +Q_INCOME_GROUP1 = 0.01290322580645;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01290322580645;
34513     +Q_INCOME_GROUP7 = 0.13225806451612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.13225806451612;
34514     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34515     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34516     +END;
MPRINT(EM_DIAGRAM):   END;
34517     +END;
MPRINT(EM_DIAGRAM):   END;
34518     +END;
MPRINT(EM_DIAGRAM):   END;
34519     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34520     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34521     +_ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( WEALTH_RATING , BEST12.);
34522     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34523     +IF _ARBFMT_12 IN ('4' ,'5' ,'7' ,'6' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('4' ,'5' ,'7' ,'6' ) THEN DO;
34524     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34525     +END;
MPRINT(EM_DIAGRAM):   END;
34526     +ELSE IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('9' ,'8' ) THEN DO;
34527     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34528     +END;
MPRINT(EM_DIAGRAM):   END;
34529     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34530     +IF PER_CAPITA_INCOME < 22944.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 22944.5 THEN DO;
34531     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34532     +END;
MPRINT(EM_DIAGRAM):   END;
34533     +ELSE IF 22944.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 22944.5 <= PER_CAPITA_INCOME THEN DO;
34534     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34535     +END;
MPRINT(EM_DIAGRAM):   END;
34536     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34537     +END;
MPRINT(EM_DIAGRAM):   END;
34538     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
34539     +IF 1404 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 1404 <= MEDIAN_HOME_VALUE THEN DO;
34540     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34541     +END;
MPRINT(EM_DIAGRAM):   END;
34542     +ELSE IF MEDIAN_HOME_VALUE < 1404 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1404 THEN DO;
34543     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34544     +END;
MPRINT(EM_DIAGRAM):   END;
34545     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
34546     +END;
MPRINT(EM_DIAGRAM):   END;
34547     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34548     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34549     +P_INCOME_GROUP2 = 0.04790419161676;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04790419161676;
34550     +P_INCOME_GROUP6 = 0.14371257485029;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.14371257485029;
34551     +P_INCOME_GROUP5 = 0.17365269461077;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.17365269461077;
34552     +P_INCOME_GROUP4 = 0.1377245508982;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.1377245508982;
34553     +P_INCOME_GROUP3 = 0.05389221556886;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.05389221556886;
34554     +P_INCOME_GROUP1 = 0.01796407185628;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01796407185628;
34555     +P_INCOME_GROUP7 = 0.4251497005988;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.4251497005988;
34556     +Q_INCOME_GROUP2 = 0.04790419161676;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04790419161676;
34557     +Q_INCOME_GROUP6 = 0.14371257485029;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.14371257485029;
34558     +Q_INCOME_GROUP5 = 0.17365269461077;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.17365269461077;
34559     +Q_INCOME_GROUP4 = 0.1377245508982;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.1377245508982;
34560     +Q_INCOME_GROUP3 = 0.05389221556886;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.05389221556886;
34561     +Q_INCOME_GROUP1 = 0.01796407185628;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01796407185628;
34562     +Q_INCOME_GROUP7 = 0.4251497005988;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.4251497005988;
34563     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
34564     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
34565     +END;
MPRINT(EM_DIAGRAM):   END;
34566     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34567     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34568     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34569     +MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
34570     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34571     +END;
MPRINT(EM_DIAGRAM):   END;
34572     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34573     +504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34574     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34575     +END;
MPRINT(EM_DIAGRAM):   END;
34576     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
34577     +IF 4.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   IF 4.5 <= LIFETIME_CARD_PROM THEN DO;
34578     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34579     +END;
MPRINT(EM_DIAGRAM):   END;
34580     +ELSE IF LIFETIME_CARD_PROM < 4.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_CARD_PROM < 4.5 THEN DO;
34581     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34582     +END;
MPRINT(EM_DIAGRAM):   END;
34583     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
34584     +END;
MPRINT(EM_DIAGRAM):   END;
34585     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_RANGE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_RANGE ) THEN DO;
34586     +IF LIFETIME_GIFT_RANGE < 41 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_GIFT_RANGE < 41 THEN DO;
34587     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34588     +END;
MPRINT(EM_DIAGRAM):   END;
34589     +ELSE IF 41 <= LIFETIME_GIFT_RANGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 41 <= LIFETIME_GIFT_RANGE THEN DO;
34590     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34591     +END;
MPRINT(EM_DIAGRAM):   END;
34592     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34593     +END;
MPRINT(EM_DIAGRAM):   END;
34594     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34595     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34596     +P_INCOME_GROUP2 = 0.03846153846153;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.03846153846153;
34597     +P_INCOME_GROUP6 = 0.26923076923076;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.26923076923076;
34598     +P_INCOME_GROUP5 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.07692307692307;
34599     +P_INCOME_GROUP4 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07692307692307;
34600     +P_INCOME_GROUP3 = 0.09615384615384;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09615384615384;
34601     +P_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0;
34602     +P_INCOME_GROUP7 = 0.44230769230769;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.44230769230769;
34603     +Q_INCOME_GROUP2 = 0.03846153846153;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.03846153846153;
34604     +Q_INCOME_GROUP6 = 0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.26923076923076;
34605     +Q_INCOME_GROUP5 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.07692307692307;
34606     +Q_INCOME_GROUP4 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07692307692307;
34607     +Q_INCOME_GROUP3 = 0.09615384615384;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09615384615384;
34608     +Q_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0;
34609     +Q_INCOME_GROUP7 = 0.44230769230769;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.44230769230769;
34610     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
34611     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
34612     +END;
MPRINT(EM_DIAGRAM):   END;
34613     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34614     +P_INCOME_GROUP2 = 0.04395604395604;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04395604395604;
34615     +P_INCOME_GROUP6 = 0.34065934065934;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.34065934065934;
34616     +P_INCOME_GROUP5 = 0.21978021978021;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21978021978021;
34617     +P_INCOME_GROUP4 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.19780219780219;
34618     +P_INCOME_GROUP3 = 0.08791208791208;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08791208791208;
34619     +P_INCOME_GROUP1 = 0.01648351648351;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.01648351648351;
34620     +P_INCOME_GROUP7 = 0.09340659340659;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.09340659340659;
34621     +Q_INCOME_GROUP2 = 0.04395604395604;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04395604395604;
34622     +Q_INCOME_GROUP6 = 0.34065934065934;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.34065934065934;
34623     +Q_INCOME_GROUP5 = 0.21978021978021;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21978021978021;
34624     +Q_INCOME_GROUP4 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.19780219780219;
34625     +Q_INCOME_GROUP3 = 0.08791208791208;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08791208791208;
34626     +Q_INCOME_GROUP1 = 0.01648351648351;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.01648351648351;
34627     +Q_INCOME_GROUP7 = 0.09340659340659;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.09340659340659;
34628     +I_INCOME_GROUP = '6';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '6';
34629     +U_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 6;
34630     +END;
MPRINT(EM_DIAGRAM):   END;
34631     +END;
MPRINT(EM_DIAGRAM):   END;
34632     +END;
MPRINT(EM_DIAGRAM):   END;
34633     +END;
MPRINT(EM_DIAGRAM):   END;
34634     +END;
MPRINT(EM_DIAGRAM):   END;
34635     +END;
MPRINT(EM_DIAGRAM):   END;
34636     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34637     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34638     +_ARBFMT_3 = PUT( HOME_OWNER , $3.);
MPRINT(EM_DIAGRAM):   _ARBFMT_3 = PUT( HOME_OWNER , $3.);
34639     +%DMNORMIP( _ARBFMT_3);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34640     +IF _ARBFMT_3 IN ('H' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_3 IN ('H' ) THEN DO;
34641     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34642     +END;
MPRINT(EM_DIAGRAM):   END;
34643     +ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_3 IN ('U' ) THEN DO;
34644     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34645     +END;
MPRINT(EM_DIAGRAM):   END;
34646     +IF _BRANCH_ LT 0 AND NOT MISSING(OVERLAY_SOURCE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(OVERLAY_SOURCE ) THEN DO;
34647     +_ARBFMT_1 = PUT( OVERLAY_SOURCE , $1.);
MPRINT(EM_DIAGRAM):   _ARBFMT_1 = PUT( OVERLAY_SOURCE , $1.);
34648     +%DMNORMIP( _ARBFMT_1);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34649     +IF _ARBFMT_1 IN ('P' ,'B' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_1 IN ('P' ,'B' ) THEN DO;
34650     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34651     +END;
MPRINT(EM_DIAGRAM):   END;
34652     +ELSE IF _ARBFMT_1 IN ('M' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_1 IN ('M' ) THEN DO;
34653     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34654     +END;
MPRINT(EM_DIAGRAM):   END;
34655     +END;
MPRINT(EM_DIAGRAM):   END;
34656     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34657     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34658     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34659     +IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'20' ,'16' ,'30' ,'07' ,'23' ,
34660     +'25' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'48' ,'24' ,'08' ,'12' ,'35' ,
34661     +'19' ,'27' ,'46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' ,
34662     +'29' ,'05' ,'17' ,'43' ,'39' ,'11' ,'31' ,'33' ,'38' ,'22' ,'06' ,'32' ,
34663     +'03' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'20' ,'16' ,'30' ,'07' ,'23' , '25' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'48' ,'24' ,'08' ,'12' ,'35' , '19' ,'27' ,'46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' , '29' ,'05' ,'17'
,'43' ,'39' ,'11' ,'31' ,'33' ,'38' ,'22' ,'06' ,'32' , '03' ,'52' ,'37' ,'10' ) THEN DO;
34664     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34665     +END;
MPRINT(EM_DIAGRAM):   END;
34666     +ELSE IF _ARBFMT_2 IN ('45' ,'01' ,'51' ,'47' ,'53' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('45' ,'01' ,'51' ,'47' ,'53' ) THEN DO;
34667     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34668     +END;
MPRINT(EM_DIAGRAM):   END;
34669     +END;
MPRINT(EM_DIAGRAM):   END;
34670     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34671     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34672     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34673     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34674     +MEDIAN_HOUSEHOLD_INCOME < 215.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 215.5 THEN DO;
34675     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34676     +END;
MPRINT(EM_DIAGRAM):   END;
34677     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
34678     +215.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 215.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
34679     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34680     +END;
MPRINT(EM_DIAGRAM):   END;
34681     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34682     +IF PER_CAPITA_INCOME < 10196.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 10196.5 THEN DO;
34683     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34684     +END;
MPRINT(EM_DIAGRAM):   END;
34685     +ELSE IF 10196.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 10196.5 <= PER_CAPITA_INCOME THEN DO;
34686     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34687     +END;
MPRINT(EM_DIAGRAM):   END;
34688     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34689     +END;
MPRINT(EM_DIAGRAM):   END;
34690     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34691     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34692     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34693     +IF _ARBFMT_2 IN ('04' ,'50' ,'30' ,'09' ,'41' ,'48' ,'51' ,'31' ,
34694     +'33' ,'53' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'30' ,'09' ,'41' ,'48' ,'51' ,'31' , '33' ,'53' ,'32' ,'52' ,'10' ) THEN DO;
34695     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34696     +END;
MPRINT(EM_DIAGRAM):   END;
34697     +ELSE IF _ARBFMT_2 IN ('.' ,'49' ,'45' ,'20' ,'16' ,'07' ,'23' ,'25' ,
34698     +'01' ,'02' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'35' ,'19' ,'27' ,
34699     +'46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' ,'29' ,
34700     +'05' ,'17' ,'43' ,'39' ,'11' ,'38' ,'47' ,'22' ,'06' ,'03' ,'37' )
34701     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'49' ,'45' ,'20' ,'16' ,'07' ,'23' ,'25' , '01' ,'02' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,'35' ,'19' ,'27' , '46' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'34' ,'42' ,'44' ,'29' , '05' ,'17' ,'43' ,'39' ,'11'
,'38' ,'47' ,'22' ,'06' ,'03' ,'37' ) THEN DO;
34702     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34703     +END;
MPRINT(EM_DIAGRAM):   END;
34704     +END;
MPRINT(EM_DIAGRAM):   END;
34705     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34706     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34707     +P_INCOME_GROUP2 = 0.29721362229102;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.29721362229102;
34708     +P_INCOME_GROUP6 = 0.01083591331269;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.01083591331269;
34709     +P_INCOME_GROUP5 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.05882352941176;
34710     +P_INCOME_GROUP4 = 0.07430340557275;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07430340557275;
34711     +P_INCOME_GROUP3 = 0.10990712074303;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.10990712074303;
34712     +P_INCOME_GROUP1 = 0.41331269349845;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.41331269349845;
34713     +P_INCOME_GROUP7 = 0.03560371517027;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03560371517027;
34714     +Q_INCOME_GROUP2 = 0.29721362229102;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.29721362229102;
34715     +Q_INCOME_GROUP6 = 0.01083591331269;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.01083591331269;
34716     +Q_INCOME_GROUP5 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.05882352941176;
34717     +Q_INCOME_GROUP4 = 0.07430340557275;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07430340557275;
34718     +Q_INCOME_GROUP3 = 0.10990712074303;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.10990712074303;
34719     +Q_INCOME_GROUP1 = 0.41331269349845;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.41331269349845;
34720     +Q_INCOME_GROUP7 = 0.03560371517027;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03560371517027;
34721     +I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
34722     +U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
34723     +END;
MPRINT(EM_DIAGRAM):   END;
34724     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34725     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34726     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
34727     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34728     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
34729     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34730     +END;
MPRINT(EM_DIAGRAM):   END;
34731     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
34732     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34733     +END;
MPRINT(EM_DIAGRAM):   END;
34734     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34735     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34736     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34737     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34738     +'25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,
34739     +'26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' ,
34740     +'38' ,'47' ,'53' ,'06' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '38' ,'47' ,'53' ,'06' ,'37'
,'10' ) THEN DO;
34741     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34742     +END;
MPRINT(EM_DIAGRAM):   END;
34743     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
34744     +'13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
34745     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34746     +END;
MPRINT(EM_DIAGRAM):   END;
34747     +END;
MPRINT(EM_DIAGRAM):   END;
34748     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
34749     +IF PER_CAPITA_INCOME < 17643 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17643 THEN DO;
34750     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34751     +END;
MPRINT(EM_DIAGRAM):   END;
34752     +ELSE IF 17643 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17643 <= PER_CAPITA_INCOME THEN DO;
34753     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34754     +END;
MPRINT(EM_DIAGRAM):   END;
34755     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34756     +END;
MPRINT(EM_DIAGRAM):   END;
34757     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34758     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34759     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34760     +IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND
34761     +MONTHS_SINCE_ORIGIN < 71 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND MONTHS_SINCE_ORIGIN < 71 THEN DO;
34762     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34763     +END;
MPRINT(EM_DIAGRAM):   END;
34764     +ELSE IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND
34765     +71 <= MONTHS_SINCE_ORIGIN THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MONTHS_SINCE_ORIGIN ) AND 71 <= MONTHS_SINCE_ORIGIN THEN DO;
34766     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34767     +END;
MPRINT(EM_DIAGRAM):   END;
34768     +IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
34769     +IF MONTHS_SINCE_FIRST_GIFT < 65 THEN DO;
MPRINT(EM_DIAGRAM):   IF MONTHS_SINCE_FIRST_GIFT < 65 THEN DO;
34770     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34771     +END;
MPRINT(EM_DIAGRAM):   END;
34772     +ELSE IF 65 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 65 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
34773     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34774     +END;
MPRINT(EM_DIAGRAM):   END;
34775     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34776     +END;
MPRINT(EM_DIAGRAM):   END;
34777     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
34778     +IF LIFETIME_PROM < 45.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 45.5 THEN DO;
34779     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34780     +END;
MPRINT(EM_DIAGRAM):   END;
34781     +ELSE IF 45.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 45.5 <= LIFETIME_PROM THEN DO;
34782     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34783     +END;
MPRINT(EM_DIAGRAM):   END;
34784     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34785     +END;
MPRINT(EM_DIAGRAM):   END;
34786     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34787     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34788     +P_INCOME_GROUP2 = 0.28030303030303;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.28030303030303;
34789     +P_INCOME_GROUP6 = 0.04545454545454;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.04545454545454;
34790     +P_INCOME_GROUP5 = 0.21212121212121;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21212121212121;
34791     +P_INCOME_GROUP4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.18181818181818;
34792     +P_INCOME_GROUP3 = 0.07575757575757;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07575757575757;
34793     +P_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.16666666666666;
34794     +P_INCOME_GROUP7 = 0.03787878787878;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03787878787878;
34795     +Q_INCOME_GROUP2 = 0.28030303030303;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.28030303030303;
34796     +Q_INCOME_GROUP6 = 0.04545454545454;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.04545454545454;
34797     +Q_INCOME_GROUP5 = 0.21212121212121;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21212121212121;
34798     +Q_INCOME_GROUP4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.18181818181818;
34799     +Q_INCOME_GROUP3 = 0.07575757575757;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07575757575757;
34800     +Q_INCOME_GROUP1 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.16666666666666;
34801     +Q_INCOME_GROUP7 = 0.03787878787878;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03787878787878;
34802     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34803     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34804     +END;
MPRINT(EM_DIAGRAM):   END;
34805     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34806     +P_INCOME_GROUP2 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.10344827586206;
34807     +P_INCOME_GROUP6 = 0.13793103448275;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.13793103448275;
34808     +P_INCOME_GROUP5 = 0.26206896551724;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.26206896551724;
34809     +P_INCOME_GROUP4 = 0.14482758620689;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.14482758620689;
34810     +P_INCOME_GROUP3 = 0.18620689655172;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.18620689655172;
34811     +P_INCOME_GROUP1 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.10344827586206;
34812     +P_INCOME_GROUP7 = 0.06206896551724;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.06206896551724;
34813     +Q_INCOME_GROUP2 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.10344827586206;
34814     +Q_INCOME_GROUP6 = 0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.13793103448275;
34815     +Q_INCOME_GROUP5 = 0.26206896551724;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.26206896551724;
34816     +Q_INCOME_GROUP4 = 0.14482758620689;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.14482758620689;
34817     +Q_INCOME_GROUP3 = 0.18620689655172;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.18620689655172;
34818     +Q_INCOME_GROUP1 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.10344827586206;
34819     +Q_INCOME_GROUP7 = 0.06206896551724;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.06206896551724;
34820     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
34821     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
34822     +END;
MPRINT(EM_DIAGRAM):   END;
34823     +END;
MPRINT(EM_DIAGRAM):   END;
34824     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34825     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34826     +IF NOT MISSING(DONOR_AGE ) AND
34827     +DONOR_AGE < 70.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 70.5 THEN DO;
34828     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34829     +END;
MPRINT(EM_DIAGRAM):   END;
34830     +ELSE IF NOT MISSING(DONOR_AGE ) AND
34831     +70.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 70.5 <= DONOR_AGE THEN DO;
34832     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34833     +END;
MPRINT(EM_DIAGRAM):   END;
34834     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
34835     +IF LIFETIME_PROM < 70.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 70.5 THEN DO;
34836     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34837     +END;
MPRINT(EM_DIAGRAM):   END;
34838     +ELSE IF 70.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 70.5 <= LIFETIME_PROM THEN DO;
34839     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34840     +END;
MPRINT(EM_DIAGRAM):   END;
34841     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34842     +END;
MPRINT(EM_DIAGRAM):   END;
34843     +IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
34844     +_ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
34845     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34846     +IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
34847     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34848     +END;
MPRINT(EM_DIAGRAM):   END;
34849     +ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
34850     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34851     +END;
MPRINT(EM_DIAGRAM):   END;
34852     +END;
MPRINT(EM_DIAGRAM):   END;
34853     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34854     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34855     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34856     +IF NOT MISSING(RECENT_RESPONSE_PROP ) AND
34857     +RECENT_RESPONSE_PROP < 0.049 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_RESPONSE_PROP ) AND RECENT_RESPONSE_PROP < 0.049 THEN DO;
34858     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34859     +END;
MPRINT(EM_DIAGRAM):   END;
34860     +ELSE IF NOT MISSING(RECENT_RESPONSE_PROP ) AND
34861     +0.049 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_RESPONSE_PROP ) AND 0.049 <= RECENT_RESPONSE_PROP THEN DO;
34862     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34863     +END;
MPRINT(EM_DIAGRAM):   END;
34864     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
34865     +IF RECENT_AVG_GIFT_AMT < 1.6 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_GIFT_AMT < 1.6 THEN DO;
34866     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34867     +END;
MPRINT(EM_DIAGRAM):   END;
34868     +ELSE IF 1.6 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1.6 <= RECENT_AVG_GIFT_AMT THEN DO;
34869     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34870     +END;
MPRINT(EM_DIAGRAM):   END;
34871     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34872     +END;
MPRINT(EM_DIAGRAM):   END;
34873     +IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
34874     +IF LAST_GIFT_AMT < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LAST_GIFT_AMT < 1.5 THEN DO;
34875     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34876     +END;
MPRINT(EM_DIAGRAM):   END;
34877     +ELSE IF 1.5 <= LAST_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1.5 <= LAST_GIFT_AMT THEN DO;
34878     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34879     +END;
MPRINT(EM_DIAGRAM):   END;
34880     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34881     +END;
MPRINT(EM_DIAGRAM):   END;
34882     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
34883     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
34884     +P_INCOME_GROUP2 = 0.23076923076923;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.23076923076923;
34885     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
34886     +P_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0;
34887     +P_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0;
34888     +P_INCOME_GROUP3 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.07692307692307;
34889     +P_INCOME_GROUP1 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.53846153846153;
34890     +P_INCOME_GROUP7 = 0.15384615384615;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.15384615384615;
34891     +Q_INCOME_GROUP2 = 0.23076923076923;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.23076923076923;
34892     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
34893     +Q_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0;
34894     +Q_INCOME_GROUP4 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0;
34895     +Q_INCOME_GROUP3 = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.07692307692307;
34896     +Q_INCOME_GROUP1 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.53846153846153;
34897     +Q_INCOME_GROUP7 = 0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.15384615384615;
34898     +I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
34899     +U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
34900     +END;
MPRINT(EM_DIAGRAM):   END;
34901     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34902     +P_INCOME_GROUP2 = 0.35313531353135;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.35313531353135;
34903     +P_INCOME_GROUP6 = 0.03300330033003;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.03300330033003;
34904     +P_INCOME_GROUP5 = 0.1056105610561;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.1056105610561;
34905     +P_INCOME_GROUP4 = 0.07590759075907;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.07590759075907;
34906     +P_INCOME_GROUP3 = 0.08580858085808;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.08580858085808;
34907     +P_INCOME_GROUP1 = 0.34323432343234;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.34323432343234;
34908     +P_INCOME_GROUP7 = 0.003300330033;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.003300330033;
34909     +Q_INCOME_GROUP2 = 0.35313531353135;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.35313531353135;
34910     +Q_INCOME_GROUP6 = 0.03300330033003;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.03300330033003;
34911     +Q_INCOME_GROUP5 = 0.1056105610561;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.1056105610561;
34912     +Q_INCOME_GROUP4 = 0.07590759075907;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.07590759075907;
34913     +Q_INCOME_GROUP3 = 0.08580858085808;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.08580858085808;
34914     +Q_INCOME_GROUP1 = 0.34323432343234;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.34323432343234;
34915     +Q_INCOME_GROUP7 = 0.003300330033;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.003300330033;
34916     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34917     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34918     +END;
MPRINT(EM_DIAGRAM):   END;
34919     +END;
MPRINT(EM_DIAGRAM):   END;
34920     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34921     +P_INCOME_GROUP2 = 0.29548229548229;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.29548229548229;
34922     +P_INCOME_GROUP6 = 0.04029304029304;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.04029304029304;
34923     +P_INCOME_GROUP5 = 0.12942612942612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.12942612942612;
34924     +P_INCOME_GROUP4 = 0.14407814407814;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.14407814407814;
34925     +P_INCOME_GROUP3 = 0.16483516483516;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.16483516483516;
34926     +P_INCOME_GROUP1 = 0.19169719169719;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.19169719169719;
34927     +P_INCOME_GROUP7 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.03418803418803;
34928     +Q_INCOME_GROUP2 = 0.29548229548229;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.29548229548229;
34929     +Q_INCOME_GROUP6 = 0.04029304029304;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.04029304029304;
34930     +Q_INCOME_GROUP5 = 0.12942612942612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.12942612942612;
34931     +Q_INCOME_GROUP4 = 0.14407814407814;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.14407814407814;
34932     +Q_INCOME_GROUP3 = 0.16483516483516;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.16483516483516;
34933     +Q_INCOME_GROUP1 = 0.19169719169719;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.19169719169719;
34934     +Q_INCOME_GROUP7 = 0.03418803418803;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.03418803418803;
34935     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
34936     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
34937     +END;
MPRINT(EM_DIAGRAM):   END;
34938     +END;
MPRINT(EM_DIAGRAM):   END;
34939     +END;
MPRINT(EM_DIAGRAM):   END;
34940     +END;
MPRINT(EM_DIAGRAM):   END;
34941     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
34942     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34943     +IF NOT MISSING(DONOR_AGE ) AND
34944     +DONOR_AGE < 66.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(DONOR_AGE ) AND DONOR_AGE < 66.5 THEN DO;
34945     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34946     +END;
MPRINT(EM_DIAGRAM):   END;
34947     +ELSE IF NOT MISSING(DONOR_AGE ) AND
34948     +66.5 <= DONOR_AGE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(DONOR_AGE ) AND 66.5 <= DONOR_AGE THEN DO;
34949     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34950     +END;
MPRINT(EM_DIAGRAM):   END;
34951     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34952     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34953     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34954     +IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34955     +'25' ,'01' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' ,
34956     +'35' ,'19' ,'27' ,'46' ,'40' ,'21' ,'14' ,'51' ,'34' ,'42' ,'44' ,
34957     +'05' ,'17' ,'43' ,'39' ,'11' ,'31' ,'38' ,'47' ,'53' ,'22' ,'06' ,
34958     +'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'01' ,'09' ,'02' ,'41' ,'15' ,'18' ,'36' ,'24' ,'08' ,'12' , '35' ,'19' ,'27' ,'46' ,'40' ,'21' ,'14' ,'51' ,'34' ,'42' ,'44' , '05' ,'17' ,'43' ,'39' ,'11'
,'31' ,'38' ,'47' ,'53' ,'22' ,'06' , '32' ,'03' ,'52' ,'10' ) THEN DO;
34959     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34960     +END;
MPRINT(EM_DIAGRAM):   END;
34961     +ELSE IF _ARBFMT_2 IN ('23' ,'48' ,'13' ,'26' ,'28' ,'29' ,'33' ,'37' )
34962     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'48' ,'13' ,'26' ,'28' ,'29' ,'33' ,'37' ) THEN DO;
34963     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34964     +END;
MPRINT(EM_DIAGRAM):   END;
34965     +END;
MPRINT(EM_DIAGRAM):   END;
34966     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
34967     +IF LIFETIME_PROM < 73.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 73.5 THEN DO;
34968     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34969     +END;
MPRINT(EM_DIAGRAM):   END;
34970     +ELSE IF 73.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 73.5 <= LIFETIME_PROM THEN DO;
34971     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34972     +END;
MPRINT(EM_DIAGRAM):   END;
34973     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
34974     +END;
MPRINT(EM_DIAGRAM):   END;
34975     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
34976     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
34977     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
34978     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
34979     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34980     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
34981     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34982     +END;
MPRINT(EM_DIAGRAM):   END;
34983     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
34984     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34985     +END;
MPRINT(EM_DIAGRAM):   END;
34986     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
34987     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
34988     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
34989     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
34990     +'25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,
34991     +'26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' ,
34992     +'33' ,'38' ,'47' ,'53' ,'06' ,'32' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '33' ,'38' ,'47' ,'53' ,'06'
,'32' ,'52' ,'37' ,'10' ) THEN DO;
34993     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
34994     +END;
MPRINT(EM_DIAGRAM):   END;
34995     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
34996     +'13' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
34997     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
34998     +END;
MPRINT(EM_DIAGRAM):   END;
34999     +END;
MPRINT(EM_DIAGRAM):   END;
35000     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35001     +IF PER_CAPITA_INCOME < 17330.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17330.5 THEN DO;
35002     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35003     +END;
MPRINT(EM_DIAGRAM):   END;
35004     +ELSE IF 17330.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17330.5 <= PER_CAPITA_INCOME THEN DO;
35005     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35006     +END;
MPRINT(EM_DIAGRAM):   END;
35007     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35008     +END;
MPRINT(EM_DIAGRAM):   END;
35009     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35010     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35011     +P_INCOME_GROUP2 = 0.15845070422535;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.15845070422535;
35012     +P_INCOME_GROUP6 = 0.08802816901408;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.08802816901408;
35013     +P_INCOME_GROUP5 = 0.21830985915492;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.21830985915492;
35014     +P_INCOME_GROUP4 = 0.21478873239436;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.21478873239436;
35015     +P_INCOME_GROUP3 = 0.09507042253521;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09507042253521;
35016     +P_INCOME_GROUP1 = 0.10211267605633;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.10211267605633;
35017     +P_INCOME_GROUP7 = 0.12323943661971;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.12323943661971;
35018     +Q_INCOME_GROUP2 = 0.15845070422535;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.15845070422535;
35019     +Q_INCOME_GROUP6 = 0.08802816901408;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.08802816901408;
35020     +Q_INCOME_GROUP5 = 0.21830985915492;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.21830985915492;
35021     +Q_INCOME_GROUP4 = 0.21478873239436;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.21478873239436;
35022     +Q_INCOME_GROUP3 = 0.09507042253521;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09507042253521;
35023     +Q_INCOME_GROUP1 = 0.10211267605633;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.10211267605633;
35024     +Q_INCOME_GROUP7 = 0.12323943661971;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.12323943661971;
35025     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
35026     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
35027     +END;
MPRINT(EM_DIAGRAM):   END;
35028     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35029     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35030     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35031     +MEDIAN_HOUSEHOLD_INCOME < 246.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 246.5 THEN DO;
35032     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35033     +END;
MPRINT(EM_DIAGRAM):   END;
35034     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
35035     +246.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 246.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35036     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35037     +END;
MPRINT(EM_DIAGRAM):   END;
35038     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35039     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35040     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35041     +IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'25' ,'09' ,'41' ,'36' ,'48' ,
35042     +'51' ,'43' ,'31' ,'33' ,'47' ,'53' ,'32' ,'52' ,'37' ,'10' ) THEN
35043     +DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'25' ,'09' ,'41' ,'36' ,'48' , '51' ,'43' ,'31' ,'33' ,'47' ,'53' ,'32' ,'52' ,'37' ,'10' ) THEN DO;
35044     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35045     +END;
MPRINT(EM_DIAGRAM):   END;
35046     +ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'18' ,
35047     +'08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' ,'21' ,'44' ,'29' ,'05' ,
35048     +'17' ,'39' ,'38' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'18' , '08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' ,'21' ,'44' ,'29' ,'05' , '17' ,'39' ,'38' ,'06' ) THEN DO;
35049     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35050     +END;
MPRINT(EM_DIAGRAM):   END;
35051     +END;
MPRINT(EM_DIAGRAM):   END;
35052     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35053     +IF PER_CAPITA_INCOME < 11131.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11131.5 THEN DO;
35054     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35055     +END;
MPRINT(EM_DIAGRAM):   END;
35056     +ELSE IF 11131.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11131.5 <= PER_CAPITA_INCOME THEN DO;
35057     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35058     +END;
MPRINT(EM_DIAGRAM):   END;
35059     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35060     +END;
MPRINT(EM_DIAGRAM):   END;
35061     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35062     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35063     +IF NOT MISSING(MOR_HIT_RATE ) AND
35064     +35 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MOR_HIT_RATE ) AND 35 <= MOR_HIT_RATE THEN DO;
35065     +P_INCOME_GROUP2 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.22222222222222;
35066     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
35067     +P_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0;
35068     +P_INCOME_GROUP4 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.33333333333333;
35069     +P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
35070     +P_INCOME_GROUP1 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.11111111111111;
35071     +P_INCOME_GROUP7 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.33333333333333;
35072     +Q_INCOME_GROUP2 = 0.22222222222222;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.22222222222222;
35073     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
35074     +Q_INCOME_GROUP5 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0;
35075     +Q_INCOME_GROUP4 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.33333333333333;
35076     +Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
35077     +Q_INCOME_GROUP1 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.11111111111111;
35078     +Q_INCOME_GROUP7 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.33333333333333;
35079     +I_INCOME_GROUP = '4';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '4';
35080     +U_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 4;
35081     +END;
MPRINT(EM_DIAGRAM):   END;
35082     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35083     +P_INCOME_GROUP2 = 0.40227703984819;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.40227703984819;
35084     +P_INCOME_GROUP6 = 0.05313092979127;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.05313092979127;
35085     +P_INCOME_GROUP5 = 0.10436432637571;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.10436432637571;
35086     +P_INCOME_GROUP4 = 0.12903225806451;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.12903225806451;
35087     +P_INCOME_GROUP3 = 0.09487666034155;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.09487666034155;
35088     +P_INCOME_GROUP1 = 0.19734345351043;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.19734345351043;
35089     +P_INCOME_GROUP7 = 0.01897533206831;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.01897533206831;
35090     +Q_INCOME_GROUP2 = 0.40227703984819;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.40227703984819;
35091     +Q_INCOME_GROUP6 = 0.05313092979127;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.05313092979127;
35092     +Q_INCOME_GROUP5 = 0.10436432637571;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.10436432637571;
35093     +Q_INCOME_GROUP4 = 0.12903225806451;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.12903225806451;
35094     +Q_INCOME_GROUP3 = 0.09487666034155;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.09487666034155;
35095     +Q_INCOME_GROUP1 = 0.19734345351043;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.19734345351043;
35096     +Q_INCOME_GROUP7 = 0.01897533206831;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.01897533206831;
35097     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
35098     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
35099     +END;
MPRINT(EM_DIAGRAM):   END;
35100     +END;
MPRINT(EM_DIAGRAM):   END;
35101     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35102     +IF NOT MISSING(RECENT_STAR_STATUS ) AND
35103     +14.5 <= RECENT_STAR_STATUS THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_STAR_STATUS ) AND 14.5 <= RECENT_STAR_STATUS THEN DO;
35104     +P_INCOME_GROUP2 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.2;
35105     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
35106     +P_INCOME_GROUP5 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.2;
35107     +P_INCOME_GROUP4 = 0.2;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2;
35108     +P_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0;
35109     +P_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0;
35110     +P_INCOME_GROUP7 = 0.4;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.4;
35111     +Q_INCOME_GROUP2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.2;
35112     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
35113     +Q_INCOME_GROUP5 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.2;
35114     +Q_INCOME_GROUP4 = 0.2;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2;
35115     +Q_INCOME_GROUP3 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0;
35116     +Q_INCOME_GROUP1 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0;
35117     +Q_INCOME_GROUP7 = 0.4;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.4;
35118     +I_INCOME_GROUP = '7';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '7';
35119     +U_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 7;
35120     +END;
MPRINT(EM_DIAGRAM):   END;
35121     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35122     +P_INCOME_GROUP2 = 0.25784447476125;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.25784447476125;
35123     +P_INCOME_GROUP6 = 0.06412005457025;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.06412005457025;
35124     +P_INCOME_GROUP5 = 0.19099590723055;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.19099590723055;
35125     +P_INCOME_GROUP4 = 0.19645293315143;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.19645293315143;
35126     +P_INCOME_GROUP3 = 0.15552523874488;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.15552523874488;
35127     +P_INCOME_GROUP1 = 0.11869031377899;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.11869031377899;
35128     +P_INCOME_GROUP7 = 0.01637107776261;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.01637107776261;
35129     +Q_INCOME_GROUP2 = 0.25784447476125;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.25784447476125;
35130     +Q_INCOME_GROUP6 = 0.06412005457025;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.06412005457025;
35131     +Q_INCOME_GROUP5 = 0.19099590723055;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.19099590723055;
35132     +Q_INCOME_GROUP4 = 0.19645293315143;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.19645293315143;
35133     +Q_INCOME_GROUP3 = 0.15552523874488;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.15552523874488;
35134     +Q_INCOME_GROUP1 = 0.11869031377899;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.11869031377899;
35135     +Q_INCOME_GROUP7 = 0.01637107776261;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.01637107776261;
35136     +I_INCOME_GROUP = '2';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '2';
35137     +U_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 2;
35138     +END;
MPRINT(EM_DIAGRAM):   END;
35139     +END;
MPRINT(EM_DIAGRAM):   END;
35140     +END;
MPRINT(EM_DIAGRAM):   END;
35141     +END;
MPRINT(EM_DIAGRAM):   END;
35142     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35143     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35144     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35145     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35146     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
35147     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35148     +END;
MPRINT(EM_DIAGRAM):   END;
35149     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
35150     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35151     +END;
MPRINT(EM_DIAGRAM):   END;
35152     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35153     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35154     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35155     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' ,
35156     +'25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,
35157     +'26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' ,
35158     +'33' ,'38' ,'47' ,'53' ,'06' ,'32' ,'52' ,'37' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'45' ,'20' ,'16' ,'30' ,'07' , '25' ,'09' ,'41' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' , '26' ,'28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'43' ,'39' ,'31' , '33' ,'38' ,'47' ,'53' ,'06'
,'32' ,'52' ,'37' ,'10' ) THEN DO;
35159     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35160     +END;
MPRINT(EM_DIAGRAM):   END;
35161     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
35162     +'13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'34' ,'42' ,'11' ,'22' ,'03' ) THEN DO;
35163     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35164     +END;
MPRINT(EM_DIAGRAM):   END;
35165     +END;
MPRINT(EM_DIAGRAM):   END;
35166     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35167     +IF PER_CAPITA_INCOME < 17172.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17172.5 THEN DO;
35168     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35169     +END;
MPRINT(EM_DIAGRAM):   END;
35170     +ELSE IF 17172.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17172.5 <= PER_CAPITA_INCOME THEN DO;
35171     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35172     +END;
MPRINT(EM_DIAGRAM):   END;
35173     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35174     +END;
MPRINT(EM_DIAGRAM):   END;
35175     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35176     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35177     +P_INCOME_GROUP2 = 0.04496788008565;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.04496788008565;
35178     +P_INCOME_GROUP6 = 0.15203426124197;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.15203426124197;
35179     +P_INCOME_GROUP5 = 0.38115631691648;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.38115631691648;
35180     +P_INCOME_GROUP4 = 0.15631691648822;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.15631691648822;
35181     +P_INCOME_GROUP3 = 0.05995717344753;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.05995717344753;
35182     +P_INCOME_GROUP1 = 0.02141327623126;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.02141327623126;
35183     +P_INCOME_GROUP7 = 0.18415417558886;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.18415417558886;
35184     +Q_INCOME_GROUP2 = 0.04496788008565;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.04496788008565;
35185     +Q_INCOME_GROUP6 = 0.15203426124197;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.15203426124197;
35186     +Q_INCOME_GROUP5 = 0.38115631691648;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.38115631691648;
35187     +Q_INCOME_GROUP4 = 0.15631691648822;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.15631691648822;
35188     +Q_INCOME_GROUP3 = 0.05995717344753;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.05995717344753;
35189     +Q_INCOME_GROUP1 = 0.02141327623126;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.02141327623126;
35190     +Q_INCOME_GROUP7 = 0.18415417558886;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.18415417558886;
35191     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
35192     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
35193     +END;
MPRINT(EM_DIAGRAM):   END;
35194     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35195     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35196     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
35197     +PER_CAPITA_INCOME < 10272 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 10272 THEN DO;
35198     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35199     +END;
MPRINT(EM_DIAGRAM):   END;
35200     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
35201     +10272 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 10272 <= PER_CAPITA_INCOME THEN DO;
35202     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35203     +END;
MPRINT(EM_DIAGRAM):   END;
35204     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35205     +IF MEDIAN_HOUSEHOLD_INCOME < 214.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 214.5 THEN DO;
35206     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35207     +END;
MPRINT(EM_DIAGRAM):   END;
35208     +ELSE IF 214.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 214.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35209     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35210     +END;
MPRINT(EM_DIAGRAM):   END;
35211     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35212     +END;
MPRINT(EM_DIAGRAM):   END;
35213     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35214     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35215     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35216     +IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'41' ,'51' ,'43' ,'31' ,'47' ,
35217     +'53' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('50' ,'45' ,'30' ,'41' ,'51' ,'43' ,'31' ,'47' , '53' ,'32' ,'52' ,'10' ) THEN DO;
35218     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35219     +END;
MPRINT(EM_DIAGRAM):   END;
35220     +ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'25' ,
35221     +'09' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' ,
35222     +'21' ,'44' ,'29' ,'05' ,'17' ,'39' ,'33' ,'38' ,'06' ,'37' ) THEN
35223     +DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'20' ,'16' ,'07' ,'25' , '09' ,'18' ,'36' ,'48' ,'08' ,'19' ,'27' ,'46' ,'40' ,'26' ,'28' , '21' ,'44' ,'29' ,'05' ,'17' ,'39' ,'33' ,'38' ,'06' ,'37' ) THEN DO;
35224     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35225     +END;
MPRINT(EM_DIAGRAM):   END;
35226     +END;
MPRINT(EM_DIAGRAM):   END;
35227     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35228     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35229     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35230     +IF NOT MISSING(MOR_HIT_RATE ) AND
35231     +MOR_HIT_RATE < 16 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MOR_HIT_RATE ) AND MOR_HIT_RATE < 16 THEN DO;
35232     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35233     +END;
MPRINT(EM_DIAGRAM):   END;
35234     +ELSE IF NOT MISSING(MOR_HIT_RATE ) AND
35235     +16 <= MOR_HIT_RATE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MOR_HIT_RATE ) AND 16 <= MOR_HIT_RATE THEN DO;
35236     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35237     +END;
MPRINT(EM_DIAGRAM):   END;
35238     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
35239     +IF FILE_AVG_GIFT < 47.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 47.5 THEN DO;
35240     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35241     +END;
MPRINT(EM_DIAGRAM):   END;
35242     +ELSE IF 47.5 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 47.5 <= FILE_AVG_GIFT THEN DO;
35243     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35244     +END;
MPRINT(EM_DIAGRAM):   END;
35245     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35246     +END;
MPRINT(EM_DIAGRAM):   END;
35247     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
35248     +IF LIFETIME_AVG_GIFT_AMT < 47.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 47.5 THEN DO;
35249     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35250     +END;
MPRINT(EM_DIAGRAM):   END;
35251     +ELSE IF 47.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 47.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
35252     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35253     +END;
MPRINT(EM_DIAGRAM):   END;
35254     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35255     +END;
MPRINT(EM_DIAGRAM):   END;
35256     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35257     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35258     +P_INCOME_GROUP2 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.20689655172413;
35259     +P_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0;
35260     +P_INCOME_GROUP5 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.10344827586206;
35261     +P_INCOME_GROUP4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.06896551724137;
35262     +P_INCOME_GROUP3 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.20689655172413;
35263     +P_INCOME_GROUP1 = 0.41379310344827;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.41379310344827;
35264     +P_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0;
35265     +Q_INCOME_GROUP2 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.20689655172413;
35266     +Q_INCOME_GROUP6 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0;
35267     +Q_INCOME_GROUP5 = 0.10344827586206;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.10344827586206;
35268     +Q_INCOME_GROUP4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.06896551724137;
35269     +Q_INCOME_GROUP3 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.20689655172413;
35270     +Q_INCOME_GROUP1 = 0.41379310344827;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.41379310344827;
35271     +Q_INCOME_GROUP7 = 0;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0;
35272     +I_INCOME_GROUP = '1';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '1';
35273     +U_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 1;
35274     +END;
MPRINT(EM_DIAGRAM):   END;
35275     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35276     +P_INCOME_GROUP2 = 0.1782334384858;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.1782334384858;
35277     +P_INCOME_GROUP6 = 0.0583596214511;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.0583596214511;
35278     +P_INCOME_GROUP5 = 0.20504731861198;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.20504731861198;
35279     +P_INCOME_GROUP4 = 0.2192429022082;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2192429022082;
35280     +P_INCOME_GROUP3 = 0.17981072555205;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.17981072555205;
35281     +P_INCOME_GROUP1 = 0.09779179810725;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.09779179810725;
35282     +P_INCOME_GROUP7 = 0.06151419558359;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.06151419558359;
35283     +Q_INCOME_GROUP2 = 0.1782334384858;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.1782334384858;
35284     +Q_INCOME_GROUP6 = 0.0583596214511;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.0583596214511;
35285     +Q_INCOME_GROUP5 = 0.20504731861198;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.20504731861198;
35286     +Q_INCOME_GROUP4 = 0.2192429022082;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2192429022082;
35287     +Q_INCOME_GROUP3 = 0.17981072555205;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.17981072555205;
35288     +Q_INCOME_GROUP1 = 0.09779179810725;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.09779179810725;
35289     +Q_INCOME_GROUP7 = 0.06151419558359;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.06151419558359;
35290     +I_INCOME_GROUP = '4';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '4';
35291     +U_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 4;
35292     +END;
MPRINT(EM_DIAGRAM):   END;
35293     +END;
MPRINT(EM_DIAGRAM):   END;
35294     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35295     +P_INCOME_GROUP2 = 0.12755102040816;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP2 = 0.12755102040816;
35296     +P_INCOME_GROUP6 = 0.09566326530612;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP6 = 0.09566326530612;
35297     +P_INCOME_GROUP5 = 0.29400510204081;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP5 = 0.29400510204081;
35298     +P_INCOME_GROUP4 = 0.2563775510204;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP4 = 0.2563775510204;
35299     +P_INCOME_GROUP3 = 0.12181122448979;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP3 = 0.12181122448979;
35300     +P_INCOME_GROUP1 = 0.03188775510204;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP1 = 0.03188775510204;
35301     +P_INCOME_GROUP7 = 0.07270408163265;
MPRINT(EM_DIAGRAM):   P_INCOME_GROUP7 = 0.07270408163265;
35302     +Q_INCOME_GROUP2 = 0.12755102040816;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP2 = 0.12755102040816;
35303     +Q_INCOME_GROUP6 = 0.09566326530612;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP6 = 0.09566326530612;
35304     +Q_INCOME_GROUP5 = 0.29400510204081;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP5 = 0.29400510204081;
35305     +Q_INCOME_GROUP4 = 0.2563775510204;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP4 = 0.2563775510204;
35306     +Q_INCOME_GROUP3 = 0.12181122448979;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP3 = 0.12181122448979;
35307     +Q_INCOME_GROUP1 = 0.03188775510204;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP1 = 0.03188775510204;
35308     +Q_INCOME_GROUP7 = 0.07270408163265;
MPRINT(EM_DIAGRAM):   Q_INCOME_GROUP7 = 0.07270408163265;
35309     +I_INCOME_GROUP = '5';
MPRINT(EM_DIAGRAM):   I_INCOME_GROUP = '5';
35310     +U_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   U_INCOME_GROUP = 5;
35311     +END;
MPRINT(EM_DIAGRAM):   END;
35312     +END;
MPRINT(EM_DIAGRAM):   END;
35313     +END;
MPRINT(EM_DIAGRAM):   END;
35314     +END;
MPRINT(EM_DIAGRAM):   END;
35315     +END;
MPRINT(EM_DIAGRAM):   END;
35316     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35317     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
35318     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35319     +*;
MPRINT(EM_DIAGRAM):   *;
35320     +* ASSIGN VALUE TO: INCOME_GROUP;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: INCOME_GROUP;
35321     +*;
MPRINT(EM_DIAGRAM):   *;
35322     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
35323     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
35324     +_format200 = strip(I_INCOME_GROUP);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_INCOME_GROUP);
35325     +if _format200="7" then IMP_INCOME_GROUP = 7;
MPRINT(EM_DIAGRAM):   if _format200="7" then IMP_INCOME_GROUP = 7;
35326     +else
35327     +if _format200="6" then IMP_INCOME_GROUP = 6;
MPRINT(EM_DIAGRAM):   else if _format200="6" then IMP_INCOME_GROUP = 6;
35328     +else
35329     +if _format200="5" then IMP_INCOME_GROUP = 5;
MPRINT(EM_DIAGRAM):   else if _format200="5" then IMP_INCOME_GROUP = 5;
35330     +else
35331     +if _format200="4" then IMP_INCOME_GROUP = 4;
MPRINT(EM_DIAGRAM):   else if _format200="4" then IMP_INCOME_GROUP = 4;
35332     +else
35333     +if _format200="3" then IMP_INCOME_GROUP = 3;
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_INCOME_GROUP = 3;
35334     +else
35335     +if _format200="2" then IMP_INCOME_GROUP = 2;
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_INCOME_GROUP = 2;
35336     +else
35337     +if _format200="1" then IMP_INCOME_GROUP = 1;
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_INCOME_GROUP = 1;
35338     +END;
MPRINT(EM_DIAGRAM):   END;
35339     +*;
MPRINT(EM_DIAGRAM):   *;
35340     +* IMPUTE VARIABLE: REP_SES;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_SES;
35341     +*;
MPRINT(EM_DIAGRAM):   *;
35342     +length IMP_REP_SES $4;
MPRINT(EM_DIAGRAM):   length IMP_REP_SES $4;
35343     +label IMP_REP_SES = 'Imputed: Replacement: SES';
MPRINT(EM_DIAGRAM):   label IMP_REP_SES = 'Imputed: Replacement: SES';
35344     +IMP_REP_SES = REP_SES;
MPRINT(EM_DIAGRAM):   IMP_REP_SES = REP_SES;
NOTE: Numeric value converted to character.
35345     +if IMP_REP_SES eq '' then do;
MPRINT(EM_DIAGRAM):   if IMP_REP_SES eq '' then do;
35346     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35347     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
35348     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35349     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
35350     +LENGTH I_REP_SES $ 4;
MPRINT(EM_DIAGRAM):   LENGTH I_REP_SES $ 4;
35351     +LENGTH U_REP_SES $ 4;
MPRINT(EM_DIAGRAM):   LENGTH U_REP_SES $ 4;
35352     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
35353     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
35354     +label P_REP_SES2 = 'Predicted: REP_SES=2';
MPRINT(EM_DIAGRAM):   label P_REP_SES2 = 'Predicted: REP_SES=2';
35355     +label P_REP_SES3 = 'Predicted: REP_SES=3';
MPRINT(EM_DIAGRAM):   label P_REP_SES3 = 'Predicted: REP_SES=3';
35356     +label P_REP_SES1 = 'Predicted: REP_SES=1';
MPRINT(EM_DIAGRAM):   label P_REP_SES1 = 'Predicted: REP_SES=1';
35357     +label P_REP_SES4 = 'Predicted: REP_SES=4';
MPRINT(EM_DIAGRAM):   label P_REP_SES4 = 'Predicted: REP_SES=4';
35358     +label Q_REP_SES2 = 'Unadjusted P: REP_SES=2';
MPRINT(EM_DIAGRAM):   label Q_REP_SES2 = 'Unadjusted P: REP_SES=2';
35359     +label Q_REP_SES3 = 'Unadjusted P: REP_SES=3';
MPRINT(EM_DIAGRAM):   label Q_REP_SES3 = 'Unadjusted P: REP_SES=3';
35360     +label Q_REP_SES1 = 'Unadjusted P: REP_SES=1';
MPRINT(EM_DIAGRAM):   label Q_REP_SES1 = 'Unadjusted P: REP_SES=1';
35361     +label Q_REP_SES4 = 'Unadjusted P: REP_SES=4';
MPRINT(EM_DIAGRAM):   label Q_REP_SES4 = 'Unadjusted P: REP_SES=4';
35362     +label I_REP_SES = 'Into: REP_SES';
MPRINT(EM_DIAGRAM):   label I_REP_SES = 'Into: REP_SES';
35363     +label U_REP_SES = 'Unnormalized Into: REP_SES';
MPRINT(EM_DIAGRAM):   label U_REP_SES = 'Unnormalized Into: REP_SES';
35364     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
35365     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
35366     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
35367     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
35368     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
35369     +/* Initialize to avoid warning. */
35370     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
35371     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
35372     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
35373     +/* Initialize to avoid warning. */
35374     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
35375     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
35376     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35377     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35378     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35379     +IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'42' ,'46' ,'45' ,'20' ,'16' ,'07' ,
35380     +'34' ,'23' ,'25' ,'01' ,'02' ,'37' ,'15' ,'38' ,'18' ,'36' ,'48' ,'24' ,
35381     +'12' ,'35' ,'19' ,'27' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'51' ,'44' ,
35382     +'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,
35383     +'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'42' ,'46' ,'45' ,'20' ,'16' ,'07' , '34' ,'23' ,'25' ,'01' ,'02' ,'37' ,'15' ,'38' ,'18' ,'36' ,'48' ,'24' , '12' ,'35' ,'19' ,'27' ,'40' ,'13' ,'26' ,'28' ,'21' ,'14' ,'51' ,'44' , '29' ,'05'
,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' , '10' ) THEN DO;
35384     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35385     +END;
MPRINT(EM_DIAGRAM):   END;
35386     +ELSE IF _ARBFMT_2 IN ('50' ,'53' ,'30' ,'09' ,'41' ,'08' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('50' ,'53' ,'30' ,'09' ,'41' ,'08' ,'31' ) THEN DO;
35387     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35388     +END;
MPRINT(EM_DIAGRAM):   END;
35389     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
35390     +IF RECENT_RESPONSE_PROP < 0.866 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.866 THEN DO;
35391     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35392     +END;
MPRINT(EM_DIAGRAM):   END;
35393     +ELSE IF 0.866 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.866 <= RECENT_RESPONSE_PROP THEN DO;
35394     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35395     +END;
MPRINT(EM_DIAGRAM):   END;
35396     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35397     +END;
MPRINT(EM_DIAGRAM):   END;
35398     +IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_FIRST_GIFT ) THEN DO;
35399     +IF MONTHS_SINCE_FIRST_GIFT < 159.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MONTHS_SINCE_FIRST_GIFT < 159.5 THEN DO;
35400     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35401     +END;
MPRINT(EM_DIAGRAM):   END;
35402     +ELSE IF 159.5 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 159.5 <= MONTHS_SINCE_FIRST_GIFT THEN DO;
35403     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35404     +END;
MPRINT(EM_DIAGRAM):   END;
35405     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35406     +END;
MPRINT(EM_DIAGRAM):   END;
35407     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35408     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35409     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
35410     +P_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 1;
35411     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
35412     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
35413     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
35414     +Q_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 1;
35415     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
35416     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
35417     +I_REP_SES = '3';
MPRINT(EM_DIAGRAM):   I_REP_SES = '3';
35418     +U_REP_SES = '3';
MPRINT(EM_DIAGRAM):   U_REP_SES = '3';
35419     +END;
MPRINT(EM_DIAGRAM):   END;
35420     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35421     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35422     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35423     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35424     +IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'46' ,'45' ,'20' ,'16' ,'07' ,'25' ,
35425     +'37' ,'38' ,'18' ,'36' ,'48' ,'19' ,'27' ,'40' ,'26' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'46' ,'45' ,'20' ,'16' ,'07' ,'25' , '37' ,'38' ,'18' ,'36' ,'48' ,'19' ,'27' ,'40' ,'26' ) THEN DO;
35426     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35427     +END;
MPRINT(EM_DIAGRAM):   END;
35428     +ELSE IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,
35429     +'35' ,'13' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,
35430     +'33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' , '35' ,'13' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' , '33' ,'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
35431     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35432     +END;
MPRINT(EM_DIAGRAM):   END;
35433     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35434     +IF PER_CAPITA_INCOME < 15470.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 15470.5 THEN DO;
35435     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35436     +END;
MPRINT(EM_DIAGRAM):   END;
35437     +ELSE IF 15470.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 15470.5 <= PER_CAPITA_INCOME THEN DO;
35438     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35439     +END;
MPRINT(EM_DIAGRAM):   END;
35440     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35441     +END;
MPRINT(EM_DIAGRAM):   END;
35442     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35443     +IF MEDIAN_HOME_VALUE < 719.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 719.5 THEN DO;
35444     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35445     +END;
MPRINT(EM_DIAGRAM):   END;
35446     +ELSE IF 719.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 719.5 <= MEDIAN_HOME_VALUE THEN DO;
35447     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35448     +END;
MPRINT(EM_DIAGRAM):   END;
35449     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35450     +END;
MPRINT(EM_DIAGRAM):   END;
35451     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35452     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35453     +P_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 1;
35454     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
35455     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
35456     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
35457     +Q_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 1;
35458     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
35459     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
35460     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
35461     +I_REP_SES = '2';
MPRINT(EM_DIAGRAM):   I_REP_SES = '2';
35462     +U_REP_SES = '2';
MPRINT(EM_DIAGRAM):   U_REP_SES = '2';
35463     +END;
MPRINT(EM_DIAGRAM):   END;
35464     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35465     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35466     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35467     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35468     +IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
35469     +'13' ,'14' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('42' ,'34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'11' ,'22' ,'03' ) THEN DO;
35470     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35471     +END;
MPRINT(EM_DIAGRAM):   END;
35472     +ELSE IF _ARBFMT_2 IN ('28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,
35473     +'33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('28' ,'21' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' , '33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
35474     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35475     +END;
MPRINT(EM_DIAGRAM):   END;
35476     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35477     +IF 15304.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 15304.5 <= PER_CAPITA_INCOME THEN DO;
35478     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35479     +END;
MPRINT(EM_DIAGRAM):   END;
35480     +ELSE IF PER_CAPITA_INCOME < 15304.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 15304.5 THEN DO;
35481     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35482     +END;
MPRINT(EM_DIAGRAM):   END;
35483     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35484     +END;
MPRINT(EM_DIAGRAM):   END;
35485     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35486     +IF 720.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 720.5 <= MEDIAN_HOME_VALUE THEN DO;
35487     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35488     +END;
MPRINT(EM_DIAGRAM):   END;
35489     +ELSE IF MEDIAN_HOME_VALUE < 720.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 720.5 THEN DO;
35490     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35491     +END;
MPRINT(EM_DIAGRAM):   END;
35492     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35493     +END;
MPRINT(EM_DIAGRAM):   END;
35494     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35495     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35496     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35497     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35498     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35499     +IF _ARBFMT_2 IN ('28' ,'44' ,'29' ,'05' ,'17' ,'39' ,'47' ,'06' )
35500     +THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('28' ,'44' ,'29' ,'05' ,'17' ,'39' ,'47' ,'06' ) THEN DO;
35501     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35502     +END;
MPRINT(EM_DIAGRAM):   END;
35503     +ELSE IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ,'10' ) THEN DO;
35504     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35505     +END;
MPRINT(EM_DIAGRAM):   END;
35506     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35507     +IF 10141.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 10141.5 <= PER_CAPITA_INCOME THEN DO;
35508     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35509     +END;
MPRINT(EM_DIAGRAM):   END;
35510     +ELSE IF PER_CAPITA_INCOME < 10141.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 10141.5 THEN DO;
35511     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35512     +END;
MPRINT(EM_DIAGRAM):   END;
35513     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35514     +END;
MPRINT(EM_DIAGRAM):   END;
35515     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35516     +IF 238.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 238.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35517     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35518     +END;
MPRINT(EM_DIAGRAM):   END;
35519     +ELSE IF MEDIAN_HOUSEHOLD_INCOME < 238.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOUSEHOLD_INCOME < 238.5 THEN DO;
35520     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35521     +END;
MPRINT(EM_DIAGRAM):   END;
35522     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35523     +END;
MPRINT(EM_DIAGRAM):   END;
35524     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35525     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35526     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35527     +_ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
35528     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35529     +IF _ARBFMT_4 IN ('R' ,'S' ,'C' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('R' ,'S' ,'C' ) THEN DO;
35530     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35531     +END;
MPRINT(EM_DIAGRAM):   END;
35532     +ELSE IF _ARBFMT_4 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('U' ) THEN DO;
35533     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35534     +END;
MPRINT(EM_DIAGRAM):   END;
35535     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
35536     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35537     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35538     +IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('21' ,'51' ,'33' ,'32' ,'52' ) THEN DO;
35539     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35540     +END;
MPRINT(EM_DIAGRAM):   END;
35541     +ELSE IF _ARBFMT_2 IN ('10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('10' ) THEN DO;
35542     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35543     +END;
MPRINT(EM_DIAGRAM):   END;
35544     +END;
MPRINT(EM_DIAGRAM):   END;
35545     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
35546     +IF 39.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 39.5 <= PCT_OWNER_OCCUPIED THEN DO;
35547     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35548     +END;
MPRINT(EM_DIAGRAM):   END;
35549     +ELSE IF PCT_OWNER_OCCUPIED < 39.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 39.5 THEN DO;
35550     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35551     +END;
MPRINT(EM_DIAGRAM):   END;
35552     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35553     +END;
MPRINT(EM_DIAGRAM):   END;
35554     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35555     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35556     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
35557     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
35558     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
35559     +P_REP_SES4 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 1;
35560     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
35561     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
35562     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
35563     +Q_REP_SES4 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 1;
35564     +I_REP_SES = '4';
MPRINT(EM_DIAGRAM):   I_REP_SES = '4';
35565     +U_REP_SES = '4';
MPRINT(EM_DIAGRAM):   U_REP_SES = '4';
35566     +END;
MPRINT(EM_DIAGRAM):   END;
35567     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35568     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
35569     +P_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 1;
35570     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
35571     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
35572     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
35573     +Q_REP_SES3 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 1;
35574     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
35575     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
35576     +I_REP_SES = '3';
MPRINT(EM_DIAGRAM):   I_REP_SES = '3';
35577     +U_REP_SES = '3';
MPRINT(EM_DIAGRAM):   U_REP_SES = '3';
35578     +END;
MPRINT(EM_DIAGRAM):   END;
35579     +END;
MPRINT(EM_DIAGRAM):   END;
35580     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35581     +P_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 1;
35582     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
35583     +P_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 0;
35584     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
35585     +Q_REP_SES2 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 1;
35586     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
35587     +Q_REP_SES1 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 0;
35588     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
35589     +I_REP_SES = '2';
MPRINT(EM_DIAGRAM):   I_REP_SES = '2';
35590     +U_REP_SES = '2';
MPRINT(EM_DIAGRAM):   U_REP_SES = '2';
35591     +END;
MPRINT(EM_DIAGRAM):   END;
35592     +END;
MPRINT(EM_DIAGRAM):   END;
35593     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35594     +P_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES2 = 0;
35595     +P_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES3 = 0;
35596     +P_REP_SES1 = 1;
MPRINT(EM_DIAGRAM):   P_REP_SES1 = 1;
35597     +P_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   P_REP_SES4 = 0;
35598     +Q_REP_SES2 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES2 = 0;
35599     +Q_REP_SES3 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES3 = 0;
35600     +Q_REP_SES1 = 1;
MPRINT(EM_DIAGRAM):   Q_REP_SES1 = 1;
35601     +Q_REP_SES4 = 0;
MPRINT(EM_DIAGRAM):   Q_REP_SES4 = 0;
35602     +I_REP_SES = '1';
MPRINT(EM_DIAGRAM):   I_REP_SES = '1';
35603     +U_REP_SES = '1';
MPRINT(EM_DIAGRAM):   U_REP_SES = '1';
35604     +END;
MPRINT(EM_DIAGRAM):   END;
35605     +END;
MPRINT(EM_DIAGRAM):   END;
35606     +END;
MPRINT(EM_DIAGRAM):   END;
35607     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35608     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
35609     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35610     +*;
MPRINT(EM_DIAGRAM):   *;
35611     +* ASSIGN VALUE TO: REP_SES;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_SES;
35612     +*;
MPRINT(EM_DIAGRAM):   *;
35613     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
35614     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
35615     +_format200 = strip(I_REP_SES);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_REP_SES);
35616     +if _format200="4" then IMP_REP_SES = "4   ";
MPRINT(EM_DIAGRAM):   if _format200="4" then IMP_REP_SES = "4   ";
35617     +else
35618     +if _format200="3" then IMP_REP_SES = "3   ";
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_REP_SES = "3   ";
35619     +else
35620     +if _format200="2" then IMP_REP_SES = "2   ";
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_REP_SES = "2   ";
35621     +else
35622     +if _format200="1" then IMP_REP_SES = "1   ";
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_REP_SES = "1   ";
35623     +END;
MPRINT(EM_DIAGRAM):   END;
35624     +*;
MPRINT(EM_DIAGRAM):   *;
35625     +* IMPUTE VARIABLE: REP_URBANICITY;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REP_URBANICITY;
35626     +*;
MPRINT(EM_DIAGRAM):   *;
35627     +length IMP_REP_URBANICITY $4;
MPRINT(EM_DIAGRAM):   length IMP_REP_URBANICITY $4;
35628     +label IMP_REP_URBANICITY = 'Imputed: Replacement: URBANICITY';
MPRINT(EM_DIAGRAM):   label IMP_REP_URBANICITY = 'Imputed: Replacement: URBANICITY';
35629     +IMP_REP_URBANICITY = REP_URBANICITY;
MPRINT(EM_DIAGRAM):   IMP_REP_URBANICITY = REP_URBANICITY;
NOTE: Numeric value converted to character.
35630     +if IMP_REP_URBANICITY eq '' then do;
MPRINT(EM_DIAGRAM):   if IMP_REP_URBANICITY eq '' then do;
35631     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35632     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
35633     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
35634     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
35635     +LENGTH I_REP_URBANICITY $ 4;
MPRINT(EM_DIAGRAM):   LENGTH I_REP_URBANICITY $ 4;
35636     +LENGTH U_REP_URBANICITY $ 4;
MPRINT(EM_DIAGRAM):   LENGTH U_REP_URBANICITY $ 4;
35637     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
35638     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
35639     +label P_REP_URBANICITYU = 'Predicted: REP_URBANICITY=U';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYU = 'Predicted: REP_URBANICITY=U';
35640     +label P_REP_URBANICITYR = 'Predicted: REP_URBANICITY=R';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYR = 'Predicted: REP_URBANICITY=R';
35641     +label P_REP_URBANICITYS = 'Predicted: REP_URBANICITY=S';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYS = 'Predicted: REP_URBANICITY=S';
35642     +label P_REP_URBANICITYC = 'Predicted: REP_URBANICITY=C';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYC = 'Predicted: REP_URBANICITY=C';
35643     +label P_REP_URBANICITYT = 'Predicted: REP_URBANICITY=T';
MPRINT(EM_DIAGRAM):   label P_REP_URBANICITYT = 'Predicted: REP_URBANICITY=T';
35644     +label Q_REP_URBANICITYU = 'Unadjusted P: REP_URBANICITY=U';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYU = 'Unadjusted P: REP_URBANICITY=U';
35645     +label Q_REP_URBANICITYR = 'Unadjusted P: REP_URBANICITY=R';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYR = 'Unadjusted P: REP_URBANICITY=R';
35646     +label Q_REP_URBANICITYS = 'Unadjusted P: REP_URBANICITY=S';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYS = 'Unadjusted P: REP_URBANICITY=S';
35647     +label Q_REP_URBANICITYC = 'Unadjusted P: REP_URBANICITY=C';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYC = 'Unadjusted P: REP_URBANICITY=C';
35648     +label Q_REP_URBANICITYT = 'Unadjusted P: REP_URBANICITY=T';
MPRINT(EM_DIAGRAM):   label Q_REP_URBANICITYT = 'Unadjusted P: REP_URBANICITY=T';
35649     +label I_REP_URBANICITY = 'Into: REP_URBANICITY';
MPRINT(EM_DIAGRAM):   label I_REP_URBANICITY = 'Into: REP_URBANICITY';
35650     +label U_REP_URBANICITY = 'Unnormalized Into: REP_URBANICITY';
MPRINT(EM_DIAGRAM):   label U_REP_URBANICITY = 'Unnormalized Into: REP_URBANICITY';
35651     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
35652     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
35653     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
35654     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
35655     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
35656     +/* Initialize to avoid warning. */
35657     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
35658     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
35659     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
35660     +/* Initialize to avoid warning. */
35661     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
35662     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
35663     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35664     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35665     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35666     +IF _ARBFMT_2 IN ('04' ,'20' ,'16' ,'07' ,'34' ,'01' ,'09' ,'02' ,'41' ,
35667     +'37' ,'15' ,'38' ,'18' ,'36' ,'08' ,'12' ,'35' ,'19' ,'27' ,'40' ,'13' ,
35668     +'26' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,
35669     +'47' ,'22' ,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'20' ,'16' ,'07' ,'34' ,'01' ,'09' ,'02' ,'41' , '37' ,'15' ,'38' ,'18' ,'36' ,'08' ,'12' ,'35' ,'19' ,'27' ,'40' ,'13' , '26' ,'28' ,'21' ,'14' ,'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' , '47' ,'22'
,'06' ,'32' ,'03' ,'52' ,'10' ) THEN DO;
35670     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35671     +END;
MPRINT(EM_DIAGRAM):   END;
35672     +ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'30' ,'23' ,
35673     +'25' ,'48' ,'24' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'30' ,'23' , '25' ,'48' ,'24' ,'31' ) THEN DO;
35674     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35675     +END;
MPRINT(EM_DIAGRAM):   END;
35676     +IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LAST_GIFT_AMT ) THEN DO;
35677     +IF LAST_GIFT_AMT < 215 THEN DO;
MPRINT(EM_DIAGRAM):   IF LAST_GIFT_AMT < 215 THEN DO;
35678     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35679     +END;
MPRINT(EM_DIAGRAM):   END;
35680     +ELSE IF 215 <= LAST_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 215 <= LAST_GIFT_AMT THEN DO;
35681     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35682     +END;
MPRINT(EM_DIAGRAM):   END;
35683     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35684     +END;
MPRINT(EM_DIAGRAM):   END;
35685     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
35686     +IF LIFETIME_MAX_GIFT_AMT < 215 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MAX_GIFT_AMT < 215 THEN DO;
35687     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35688     +END;
MPRINT(EM_DIAGRAM):   END;
35689     +ELSE IF 215 <= LIFETIME_MAX_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 215 <= LIFETIME_MAX_GIFT_AMT THEN DO;
35690     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35691     +END;
MPRINT(EM_DIAGRAM):   END;
35692     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35693     +END;
MPRINT(EM_DIAGRAM):   END;
35694     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35695     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35696     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35697     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35698     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35699     +IF _ARBFMT_2 IN ('30' ,'23' ,'25' ,'24' ,'31' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('30' ,'23' ,'25' ,'24' ,'31' ) THEN DO;
35700     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35701     +END;
MPRINT(EM_DIAGRAM):   END;
35702     +ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'48' )
35703     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,'48' ) THEN DO;
35704     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35705     +END;
MPRINT(EM_DIAGRAM):   END;
35706     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
35707     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35708     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35709     +IF _ARBFMT_4 IN ('3' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ,'1' ) THEN DO;
35710     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35711     +END;
MPRINT(EM_DIAGRAM):   END;
35712     +ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
35713     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35714     +END;
MPRINT(EM_DIAGRAM):   END;
35715     +END;
MPRINT(EM_DIAGRAM):   END;
35716     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35717     +IF 15609 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF 15609 <= PER_CAPITA_INCOME THEN DO;
35718     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35719     +END;
MPRINT(EM_DIAGRAM):   END;
35720     +ELSE IF PER_CAPITA_INCOME < 15609 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PER_CAPITA_INCOME < 15609 THEN DO;
35721     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35722     +END;
MPRINT(EM_DIAGRAM):   END;
35723     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35724     +END;
MPRINT(EM_DIAGRAM):   END;
35725     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35726     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35727     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35728     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35729     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35730     +P_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 1;
35731     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35732     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35733     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35734     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35735     +Q_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 1;
35736     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35737     +I_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'C';
35738     +U_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'C';
35739     +END;
MPRINT(EM_DIAGRAM):   END;
35740     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35741     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35742     +P_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 1;
35743     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35744     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35745     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35746     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35747     +Q_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 1;
35748     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35749     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35750     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35751     +I_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'R';
35752     +U_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'R';
35753     +END;
MPRINT(EM_DIAGRAM):   END;
35754     +END;
MPRINT(EM_DIAGRAM):   END;
35755     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35756     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35757     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35758     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35759     +IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'27' ,'26' ,'28' ,
35760     +'51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' ,
35761     +'03' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'27' ,'26' ,'28' , '51' ,'44' ,'29' ,'05' ,'17' ,'39' ,'11' ,'33' ,'47' ,'22' ,'06' ,'32' , '03' ,'52' ,'10' ) THEN DO;
35762     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35763     +END;
MPRINT(EM_DIAGRAM):   END;
35764     +ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'34' ,'41' ,'37' ,'15' ,'38' ,'18' ,
35765     +'36' ,'12' ,'35' ,'19' ,'40' ,'13' ,'21' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'34' ,'41' ,'37' ,'15' ,'38' ,'18' , '36' ,'12' ,'35' ,'19' ,'40' ,'13' ,'21' ,'14' ) THEN DO;
35766     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35767     +END;
MPRINT(EM_DIAGRAM):   END;
35768     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
35769     +IF PCT_OWNER_OCCUPIED < 65.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 65.5 THEN DO;
35770     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35771     +END;
MPRINT(EM_DIAGRAM):   END;
35772     +ELSE IF 65.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 65.5 <= PCT_OWNER_OCCUPIED THEN DO;
35773     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35774     +END;
MPRINT(EM_DIAGRAM):   END;
35775     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35776     +END;
MPRINT(EM_DIAGRAM):   END;
35777     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35778     +IF MEDIAN_HOUSEHOLD_INCOME < 354.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 354.5 THEN DO;
35779     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35780     +END;
MPRINT(EM_DIAGRAM):   END;
35781     +ELSE IF 354.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 354.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35782     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35783     +END;
MPRINT(EM_DIAGRAM):   END;
35784     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35785     +END;
MPRINT(EM_DIAGRAM):   END;
35786     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35787     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35788     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35789     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35790     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35791     +IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'39' ,'06' ,
35792     +'03' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'39' ,'06' , '03' ,'10' ) THEN DO;
35793     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35794     +END;
MPRINT(EM_DIAGRAM):   END;
35795     +ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'17' ,'11' ,
35796     +'33' ,'47' ,'22' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'17' ,'11' , '33' ,'47' ,'22' ,'32' ,'52' ) THEN DO;
35797     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35798     +END;
MPRINT(EM_DIAGRAM):   END;
35799     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35800     +IF 1440 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 1440 <= MEDIAN_HOME_VALUE THEN DO;
35801     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35802     +END;
MPRINT(EM_DIAGRAM):   END;
35803     +ELSE IF MEDIAN_HOME_VALUE < 1440 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1440 THEN DO;
35804     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35805     +END;
MPRINT(EM_DIAGRAM):   END;
35806     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35807     +END;
MPRINT(EM_DIAGRAM):   END;
35808     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
35809     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35810     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35811     +IF _ARBFMT_4 IN ('1' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('1' ,'4' ) THEN DO;
35812     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35813     +END;
MPRINT(EM_DIAGRAM):   END;
35814     +ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
35815     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35816     +END;
MPRINT(EM_DIAGRAM):   END;
35817     +END;
MPRINT(EM_DIAGRAM):   END;
35818     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35819     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35820     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35821     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35822     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35823     +IF _ARBFMT_2 IN ('39' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('39' ) THEN DO;
35824     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35825     +END;
MPRINT(EM_DIAGRAM):   END;
35826     +ELSE IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'06' ,
35827     +'03' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('04' ,'07' ,'01' ,'09' ,'02' ,'08' ,'05' ,'06' , '03' ,'10' ) THEN DO;
35828     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35829     +END;
MPRINT(EM_DIAGRAM):   END;
35830     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE1 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE1 ) THEN DO;
35831     +IF 6.5 <= PCT_ATTRIBUTE1 THEN DO;
MPRINT(EM_DIAGRAM):   IF 6.5 <= PCT_ATTRIBUTE1 THEN DO;
35832     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35833     +END;
MPRINT(EM_DIAGRAM):   END;
35834     +ELSE IF PCT_ATTRIBUTE1 < 6.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_ATTRIBUTE1 < 6.5 THEN DO;
35835     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35836     +END;
MPRINT(EM_DIAGRAM):   END;
35837     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
35838     +END;
MPRINT(EM_DIAGRAM):   END;
35839     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35840     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35841     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35842     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35843     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35844     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35845     +P_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 1;
35846     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35847     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35848     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35849     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35850     +Q_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 1;
35851     +I_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'T';
35852     +U_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'T';
35853     +END;
MPRINT(EM_DIAGRAM):   END;
35854     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35855     +P_REP_URBANICITYU = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 1;
35856     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35857     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35858     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35859     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35860     +Q_REP_URBANICITYU = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 1;
35861     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35862     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35863     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35864     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35865     +I_REP_URBANICITY = 'U';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'U';
35866     +U_REP_URBANICITY = 'U';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'U';
35867     +END;
MPRINT(EM_DIAGRAM):   END;
35868     +END;
MPRINT(EM_DIAGRAM):   END;
35869     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35870     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35871     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35872     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35873     +IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'33' ,'47' ,
35874     +'22' ,'32' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'51' ,'44' ,'29' ,'33' ,'47' , '22' ,'32' ,'52' ) THEN DO;
35875     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35876     +END;
MPRINT(EM_DIAGRAM):   END;
35877     +ELSE IF _ARBFMT_2 IN ('17' ,'11' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('17' ,'11' ) THEN DO;
35878     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35879     +END;
MPRINT(EM_DIAGRAM):   END;
35880     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
35881     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
35882     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35883     +IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ) THEN DO;
35884     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35885     +END;
MPRINT(EM_DIAGRAM):   END;
35886     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
35887     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35888     +END;
MPRINT(EM_DIAGRAM):   END;
35889     +END;
MPRINT(EM_DIAGRAM):   END;
35890     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35891     +IF MEDIAN_HOME_VALUE < 1970.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1970.5 THEN DO;
35892     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35893     +END;
MPRINT(EM_DIAGRAM):   END;
35894     +ELSE IF 1970.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1970.5 <= MEDIAN_HOME_VALUE THEN DO;
35895     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35896     +END;
MPRINT(EM_DIAGRAM):   END;
35897     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35898     +END;
MPRINT(EM_DIAGRAM):   END;
35899     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
35900     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
35901     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35902     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35903     +P_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 1;
35904     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35905     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35906     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35907     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35908     +Q_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 1;
35909     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35910     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35911     +I_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'S';
35912     +U_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'S';
35913     +END;
MPRINT(EM_DIAGRAM):   END;
35914     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35915     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35916     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35917     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35918     +IF _ARBFMT_2 IN ('51' ,'44' ,'47' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('51' ,'44' ,'47' ,'52' ) THEN DO;
35919     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35920     +END;
MPRINT(EM_DIAGRAM):   END;
35921     +ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'29' ,'33' ,'22' ,'32' )
35922     +THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('27' ,'26' ,'28' ,'29' ,'33' ,'22' ,'32' ) THEN DO;
35923     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35924     +END;
MPRINT(EM_DIAGRAM):   END;
35925     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
35926     +IF PER_CAPITA_INCOME < 11036.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11036.5 THEN DO;
35927     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35928     +END;
MPRINT(EM_DIAGRAM):   END;
35929     +ELSE IF 11036.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11036.5 <= PER_CAPITA_INCOME THEN DO;
35930     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35931     +END;
MPRINT(EM_DIAGRAM):   END;
35932     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35933     +END;
MPRINT(EM_DIAGRAM):   END;
35934     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35935     +IF MEDIAN_HOME_VALUE < 455 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 455 THEN DO;
35936     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35937     +END;
MPRINT(EM_DIAGRAM):   END;
35938     +ELSE IF 455 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 455 <= MEDIAN_HOME_VALUE THEN DO;
35939     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35940     +END;
MPRINT(EM_DIAGRAM):   END;
35941     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35942     +END;
MPRINT(EM_DIAGRAM):   END;
35943     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
35944     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
35945     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35946     +P_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 1;
35947     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35948     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
35949     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35950     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35951     +Q_REP_URBANICITYR = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 1;
35952     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35953     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
35954     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35955     +I_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'R';
35956     +U_REP_URBANICITY = 'R';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'R';
35957     +END;
MPRINT(EM_DIAGRAM):   END;
35958     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35959     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
35960     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
35961     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
35962     +P_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 1;
35963     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
35964     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
35965     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
35966     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
35967     +Q_REP_URBANICITYC = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 1;
35968     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
35969     +I_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'C';
35970     +U_REP_URBANICITY = 'C';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'C';
35971     +END;
MPRINT(EM_DIAGRAM):   END;
35972     +END;
MPRINT(EM_DIAGRAM):   END;
35973     +END;
MPRINT(EM_DIAGRAM):   END;
35974     +END;
MPRINT(EM_DIAGRAM):   END;
35975     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
35976     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
35977     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
35978     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
35979     +IF _ARBFMT_2 IN ('34' ,'41' ,'37' ,'38' ,'36' ,'35' ,'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('34' ,'41' ,'37' ,'38' ,'36' ,'35' ,'40' ) THEN DO;
35980     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35981     +END;
MPRINT(EM_DIAGRAM):   END;
35982     +ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'15' ,'18' ,'12' ,'19' ,'13' ,'21' ,
35983     +'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'15' ,'18' ,'12' ,'19' ,'13' ,'21' , '14' ) THEN DO;
35984     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35985     +END;
MPRINT(EM_DIAGRAM):   END;
35986     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
35987     +IF MEDIAN_HOUSEHOLD_INCOME < 302.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 302.5 THEN DO;
35988     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35989     +END;
MPRINT(EM_DIAGRAM):   END;
35990     +ELSE IF 302.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 302.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
35991     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
35992     +END;
MPRINT(EM_DIAGRAM):   END;
35993     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
35994     +END;
MPRINT(EM_DIAGRAM):   END;
35995     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
35996     +IF MEDIAN_HOME_VALUE < 797.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 797.5 THEN DO;
35997     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
35998     +END;
MPRINT(EM_DIAGRAM):   END;
35999     +ELSE IF 797.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 797.5 <= MEDIAN_HOME_VALUE THEN DO;
36000     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36001     +END;
MPRINT(EM_DIAGRAM):   END;
36002     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36003     +END;
MPRINT(EM_DIAGRAM):   END;
36004     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36005     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36006     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
36007     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
36008     +P_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 0;
36009     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
36010     +P_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 1;
36011     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
36012     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
36013     +Q_REP_URBANICITYS = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 0;
36014     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
36015     +Q_REP_URBANICITYT = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 1;
36016     +I_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'T';
36017     +U_REP_URBANICITY = 'T';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'T';
36018     +END;
MPRINT(EM_DIAGRAM):   END;
36019     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36020     +P_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYU = 0;
36021     +P_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYR = 0;
36022     +P_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYS = 1;
36023     +P_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYC = 0;
36024     +P_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   P_REP_URBANICITYT = 0;
36025     +Q_REP_URBANICITYU = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYU = 0;
36026     +Q_REP_URBANICITYR = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYR = 0;
36027     +Q_REP_URBANICITYS = 1;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYS = 1;
36028     +Q_REP_URBANICITYC = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYC = 0;
36029     +Q_REP_URBANICITYT = 0;
MPRINT(EM_DIAGRAM):   Q_REP_URBANICITYT = 0;
36030     +I_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   I_REP_URBANICITY = 'S';
36031     +U_REP_URBANICITY = 'S';
MPRINT(EM_DIAGRAM):   U_REP_URBANICITY = 'S';
36032     +END;
MPRINT(EM_DIAGRAM):   END;
36033     +END;
MPRINT(EM_DIAGRAM):   END;
36034     +END;
MPRINT(EM_DIAGRAM):   END;
36035     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
36036     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
36037     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
36038     +*;
MPRINT(EM_DIAGRAM):   *;
36039     +* ASSIGN VALUE TO: REP_URBANICITY;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: REP_URBANICITY;
36040     +*;
MPRINT(EM_DIAGRAM):   *;
36041     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
36042     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
36043     +_format200 = strip(I_REP_URBANICITY);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_REP_URBANICITY);
36044     +if _format200="U" then IMP_REP_URBANICITY = "U   ";
MPRINT(EM_DIAGRAM):   if _format200="U" then IMP_REP_URBANICITY = "U   ";
36045     +else
36046     +if _format200="T" then IMP_REP_URBANICITY = "T   ";
MPRINT(EM_DIAGRAM):   else if _format200="T" then IMP_REP_URBANICITY = "T   ";
36047     +else
36048     +if _format200="S" then IMP_REP_URBANICITY = "S   ";
MPRINT(EM_DIAGRAM):   else if _format200="S" then IMP_REP_URBANICITY = "S   ";
36049     +else
36050     +if _format200="R" then IMP_REP_URBANICITY = "R   ";
MPRINT(EM_DIAGRAM):   else if _format200="R" then IMP_REP_URBANICITY = "R   ";
36051     +else
36052     +if _format200="C" then IMP_REP_URBANICITY = "C   ";
MPRINT(EM_DIAGRAM):   else if _format200="C" then IMP_REP_URBANICITY = "C   ";
36053     +END;
MPRINT(EM_DIAGRAM):   END;
36054     +*;
MPRINT(EM_DIAGRAM):   *;
36055     +* IMPUTE VARIABLE: WEALTH_RATING;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: WEALTH_RATING;
36056     +*;
MPRINT(EM_DIAGRAM):   *;
36057     +label IMP_WEALTH_RATING = 'Imputed WEALTH_RATING';
MPRINT(EM_DIAGRAM):   label IMP_WEALTH_RATING = 'Imputed WEALTH_RATING';
36058     +IMP_WEALTH_RATING = WEALTH_RATING;
MPRINT(EM_DIAGRAM):   IMP_WEALTH_RATING = WEALTH_RATING;
36059     +if missing(IMP_WEALTH_RATING) then do;
MPRINT(EM_DIAGRAM):   if missing(IMP_WEALTH_RATING) then do;
36060     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
36061     +****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
36062     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
36063     +****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
36064     +LENGTH I_WEALTH_RATING $ 12;
MPRINT(EM_DIAGRAM):   LENGTH I_WEALTH_RATING $ 12;
36065     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
36066     +****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
36067     +label P_WEALTH_RATING4 = 'Predicted: WEALTH_RATING=4';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING4 = 'Predicted: WEALTH_RATING=4';
36068     +label P_WEALTH_RATING5 = 'Predicted: WEALTH_RATING=5';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING5 = 'Predicted: WEALTH_RATING=5';
36069     +label P_WEALTH_RATING7 = 'Predicted: WEALTH_RATING=7';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING7 = 'Predicted: WEALTH_RATING=7';
36070     +label P_WEALTH_RATING2 = 'Predicted: WEALTH_RATING=2';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING2 = 'Predicted: WEALTH_RATING=2';
36071     +label P_WEALTH_RATING1 = 'Predicted: WEALTH_RATING=1';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING1 = 'Predicted: WEALTH_RATING=1';
36072     +label P_WEALTH_RATING3 = 'Predicted: WEALTH_RATING=3';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING3 = 'Predicted: WEALTH_RATING=3';
36073     +label P_WEALTH_RATING6 = 'Predicted: WEALTH_RATING=6';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING6 = 'Predicted: WEALTH_RATING=6';
36074     +label P_WEALTH_RATING9 = 'Predicted: WEALTH_RATING=9';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING9 = 'Predicted: WEALTH_RATING=9';
36075     +label P_WEALTH_RATING8 = 'Predicted: WEALTH_RATING=8';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING8 = 'Predicted: WEALTH_RATING=8';
36076     +label P_WEALTH_RATING0 = 'Predicted: WEALTH_RATING=0';
MPRINT(EM_DIAGRAM):   label P_WEALTH_RATING0 = 'Predicted: WEALTH_RATING=0';
36077     +label Q_WEALTH_RATING4 = 'Unadjusted P: WEALTH_RATING=4';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING4 = 'Unadjusted P: WEALTH_RATING=4';
36078     +label Q_WEALTH_RATING5 = 'Unadjusted P: WEALTH_RATING=5';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING5 = 'Unadjusted P: WEALTH_RATING=5';
36079     +label Q_WEALTH_RATING7 = 'Unadjusted P: WEALTH_RATING=7';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING7 = 'Unadjusted P: WEALTH_RATING=7';
36080     +label Q_WEALTH_RATING2 = 'Unadjusted P: WEALTH_RATING=2';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING2 = 'Unadjusted P: WEALTH_RATING=2';
36081     +label Q_WEALTH_RATING1 = 'Unadjusted P: WEALTH_RATING=1';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING1 = 'Unadjusted P: WEALTH_RATING=1';
36082     +label Q_WEALTH_RATING3 = 'Unadjusted P: WEALTH_RATING=3';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING3 = 'Unadjusted P: WEALTH_RATING=3';
36083     +label Q_WEALTH_RATING6 = 'Unadjusted P: WEALTH_RATING=6';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING6 = 'Unadjusted P: WEALTH_RATING=6';
36084     +label Q_WEALTH_RATING9 = 'Unadjusted P: WEALTH_RATING=9';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING9 = 'Unadjusted P: WEALTH_RATING=9';
36085     +label Q_WEALTH_RATING8 = 'Unadjusted P: WEALTH_RATING=8';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING8 = 'Unadjusted P: WEALTH_RATING=8';
36086     +label Q_WEALTH_RATING0 = 'Unadjusted P: WEALTH_RATING=0';
MPRINT(EM_DIAGRAM):   label Q_WEALTH_RATING0 = 'Unadjusted P: WEALTH_RATING=0';
36087     +label I_WEALTH_RATING = 'Into: WEALTH_RATING';
MPRINT(EM_DIAGRAM):   label I_WEALTH_RATING = 'Into: WEALTH_RATING';
36088     +label U_WEALTH_RATING = 'Unnormalized Into: WEALTH_RATING';
MPRINT(EM_DIAGRAM):   label U_WEALTH_RATING = 'Unnormalized Into: WEALTH_RATING';
36089     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
36090     +****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
36091     +LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
36092     +DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
36093     +_ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
36094     +/* Initialize to avoid warning. */
36095     +LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_2 $ 2;
36096     +DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
36097     +_ARBFMT_2 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
36098     +/* Initialize to avoid warning. */
36099     +LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_4 $ 4;
36100     +DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
36101     +_ARBFMT_4 = ' ';
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
36102     +/* Initialize to avoid warning. */
36103     +****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
36104     +DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
36105     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36106     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
36107     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36108     +IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
36109     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36110     +END;
MPRINT(EM_DIAGRAM):   END;
36111     +ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
36112     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36113     +END;
MPRINT(EM_DIAGRAM):   END;
36114     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36115     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36116     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36117     +IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'07' ,
36118     +'41' ,'37' ,'18' ,'36' ,'48' ,'08' ,'31' ,'19' ,'27' ,'46' ,'26' ,'28' ,
36119     +'21' ,'51' ,'44' ,'05' ,'17' ,'39' ,'25' ,'33' ,'38' ,'09' ,'29' ,'53' ,
36120     +'40' ,'32' ,'47' ,'10' ,'52' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'50' ,'43' ,'45' ,'20' ,'16' ,'30' ,'07' , '41' ,'37' ,'18' ,'36' ,'48' ,'08' ,'31' ,'19' ,'27' ,'46' ,'26' ,'28' , '21' ,'51' ,'44' ,'05' ,'17' ,'39' ,'25' ,'33' ,'38' ,'09' ,'29' ,'53' , '40' ,'32'
,'47' ,'10' ,'52' ,'06' ) THEN DO;
36121     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36122     +END;
MPRINT(EM_DIAGRAM):   END;
36123     +ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'13' ,'42' ,
36124     +'14' ,'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'13' ,'42' , '14' ,'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
36125     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36126     +END;
MPRINT(EM_DIAGRAM):   END;
36127     +END;
MPRINT(EM_DIAGRAM):   END;
36128     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36129     +IF PER_CAPITA_INCOME < 17151 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 17151 THEN DO;
36130     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36131     +END;
MPRINT(EM_DIAGRAM):   END;
36132     +ELSE IF 17151 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17151 <= PER_CAPITA_INCOME THEN DO;
36133     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36134     +END;
MPRINT(EM_DIAGRAM):   END;
36135     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36136     +END;
MPRINT(EM_DIAGRAM):   END;
36137     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36138     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36139     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36140     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36141     +MEDIAN_HOUSEHOLD_INCOME < 583.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 583.5 THEN DO;
36142     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36143     +END;
MPRINT(EM_DIAGRAM):   END;
36144     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36145     +583.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 583.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36146     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36147     +END;
MPRINT(EM_DIAGRAM):   END;
36148     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36149     +IF PER_CAPITA_INCOME < 32356.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 32356.5 THEN DO;
36150     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36151     +END;
MPRINT(EM_DIAGRAM):   END;
36152     +ELSE IF 32356.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 32356.5 <= PER_CAPITA_INCOME THEN DO;
36153     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36154     +END;
MPRINT(EM_DIAGRAM):   END;
36155     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36156     +END;
MPRINT(EM_DIAGRAM):   END;
36157     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36158     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36159     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36160     +IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'42' ,'24' ,
36161     +'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'01' ,'02' ,'15' ,'35' ,'42' ,'24' , '12' ,'11' ,'22' ,'03' ) THEN DO;
36162     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36163     +END;
MPRINT(EM_DIAGRAM):   END;
36164     +ELSE IF _ARBFMT_2 IN ('13' ,'14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('13' ,'14' ) THEN DO;
36165     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36166     +END;
MPRINT(EM_DIAGRAM):   END;
36167     +END;
MPRINT(EM_DIAGRAM):   END;
36168     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36169     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36170     +_ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( INCOME_GROUP , BEST12.);
36171     +%DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36172     +IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
36173     +P_WEALTH_RATING4 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.2;
36174     +P_WEALTH_RATING5 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.2;
36175     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36176     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36177     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36178     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36179     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36180     +P_WEALTH_RATING9 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.4;
36181     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36182     +P_WEALTH_RATING0 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.2;
36183     +Q_WEALTH_RATING4 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.2;
36184     +Q_WEALTH_RATING5 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.2;
36185     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36186     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36187     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36188     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36189     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36190     +Q_WEALTH_RATING9 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.4;
36191     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36192     +Q_WEALTH_RATING0 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.2;
36193     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36194     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36195     +END;
MPRINT(EM_DIAGRAM):   END;
36196     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36197     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36198     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
36199     +PER_CAPITA_INCOME < 22479.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 22479.5 THEN DO;
36200     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36201     +END;
MPRINT(EM_DIAGRAM):   END;
36202     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
36203     +22479.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 22479.5 <= PER_CAPITA_INCOME THEN DO;
36204     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36205     +END;
MPRINT(EM_DIAGRAM):   END;
36206     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
36207     +IF MEDIAN_HOME_VALUE < 1038 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1038 THEN DO;
36208     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36209     +END;
MPRINT(EM_DIAGRAM):   END;
36210     +ELSE IF 1038 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1038 <= MEDIAN_HOME_VALUE THEN DO;
36211     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36212     +END;
MPRINT(EM_DIAGRAM):   END;
36213     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36214     +END;
MPRINT(EM_DIAGRAM):   END;
36215     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
36216     +IF MEDIAN_HOUSEHOLD_INCOME < 594.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 594.5 THEN DO;
36217     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36218     +END;
MPRINT(EM_DIAGRAM):   END;
36219     +ELSE IF 594.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 594.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36220     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36221     +END;
MPRINT(EM_DIAGRAM):   END;
36222     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36223     +END;
MPRINT(EM_DIAGRAM):   END;
36224     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36225     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36226     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36227     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36228     +MEDIAN_HOME_VALUE < 1753 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1753 THEN DO;
36229     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36230     +END;
MPRINT(EM_DIAGRAM):   END;
36231     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36232     +1753 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1753 <= MEDIAN_HOME_VALUE THEN DO;
36233     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36234     +END;
MPRINT(EM_DIAGRAM):   END;
36235     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
36236     +IF 89.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 89.5 <= PCT_OWNER_OCCUPIED THEN DO;
36237     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36238     +END;
MPRINT(EM_DIAGRAM):   END;
36239     +ELSE IF PCT_OWNER_OCCUPIED < 89.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 89.5 THEN DO;
36240     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36241     +END;
MPRINT(EM_DIAGRAM):   END;
36242     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
36243     +END;
MPRINT(EM_DIAGRAM):   END;
36244     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
36245     +IF MEDIAN_HOUSEHOLD_INCOME < 612.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 612.5 THEN DO;
36246     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36247     +END;
MPRINT(EM_DIAGRAM):   END;
36248     +ELSE IF 612.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 612.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36249     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36250     +END;
MPRINT(EM_DIAGRAM):   END;
36251     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36252     +END;
MPRINT(EM_DIAGRAM):   END;
36253     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36254     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36255     +P_WEALTH_RATING4 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.03333333333333;
36256     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36257     +P_WEALTH_RATING7 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.06666666666666;
36258     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36259     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36260     +P_WEALTH_RATING3 = 0.1;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.1;
36261     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36262     +P_WEALTH_RATING9 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.16666666666666;
36263     +P_WEALTH_RATING8 = 0.63333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.63333333333333;
36264     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36265     +Q_WEALTH_RATING4 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.03333333333333;
36266     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36267     +Q_WEALTH_RATING7 = 0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.06666666666666;
36268     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36269     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36270     +Q_WEALTH_RATING3 = 0.1;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.1;
36271     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36272     +Q_WEALTH_RATING9 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.16666666666666;
36273     +Q_WEALTH_RATING8 = 0.63333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.63333333333333;
36274     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36275     +I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
36276     +U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
36277     +END;
MPRINT(EM_DIAGRAM):   END;
36278     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36279     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36280     +P_WEALTH_RATING5 = 0.02631578947368;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.02631578947368;
36281     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36282     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36283     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36284     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36285     +P_WEALTH_RATING6 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.05263157894736;
36286     +P_WEALTH_RATING9 = 0.78947368421052;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.78947368421052;
36287     +P_WEALTH_RATING8 = 0.13157894736842;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.13157894736842;
36288     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36289     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36290     +Q_WEALTH_RATING5 = 0.02631578947368;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.02631578947368;
36291     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36292     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36293     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36294     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36295     +Q_WEALTH_RATING6 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.05263157894736;
36296     +Q_WEALTH_RATING9 = 0.78947368421052;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.78947368421052;
36297     +Q_WEALTH_RATING8 = 0.13157894736842;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.13157894736842;
36298     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36299     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36300     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36301     +END;
MPRINT(EM_DIAGRAM):   END;
36302     +END;
MPRINT(EM_DIAGRAM):   END;
36303     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36304     +P_WEALTH_RATING4 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.01212121212121;
36305     +P_WEALTH_RATING5 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.0030303030303;
36306     +P_WEALTH_RATING7 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.01212121212121;
36307     +P_WEALTH_RATING2 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0030303030303;
36308     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36309     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36310     +P_WEALTH_RATING6 = 0.01818181818181;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.01818181818181;
36311     +P_WEALTH_RATING9 = 0.84848484848484;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.84848484848484;
36312     +P_WEALTH_RATING8 = 0.09696969696969;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.09696969696969;
36313     +P_WEALTH_RATING0 = 0.0060606060606;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0060606060606;
36314     +Q_WEALTH_RATING4 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.01212121212121;
36315     +Q_WEALTH_RATING5 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.0030303030303;
36316     +Q_WEALTH_RATING7 = 0.01212121212121;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.01212121212121;
36317     +Q_WEALTH_RATING2 = 0.0030303030303;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0030303030303;
36318     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36319     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36320     +Q_WEALTH_RATING6 = 0.01818181818181;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.01818181818181;
36321     +Q_WEALTH_RATING9 = 0.84848484848484;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.84848484848484;
36322     +Q_WEALTH_RATING8 = 0.09696969696969;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.09696969696969;
36323     +Q_WEALTH_RATING0 = 0.0060606060606;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0060606060606;
36324     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36325     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36326     +END;
MPRINT(EM_DIAGRAM):   END;
36327     +END;
MPRINT(EM_DIAGRAM):   END;
36328     +END;
MPRINT(EM_DIAGRAM):   END;
36329     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36330     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36331     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36332     +MEDIAN_HOUSEHOLD_INCOME < 383.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 383.5 THEN DO;
36333     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36334     +END;
MPRINT(EM_DIAGRAM):   END;
36335     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36336     +383.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 383.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36337     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36338     +END;
MPRINT(EM_DIAGRAM):   END;
36339     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
36340     +IF PCT_OWNER_OCCUPIED < 61.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 61.5 THEN DO;
36341     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36342     +END;
MPRINT(EM_DIAGRAM):   END;
36343     +ELSE IF 61.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 61.5 <= PCT_OWNER_OCCUPIED THEN DO;
36344     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36345     +END;
MPRINT(EM_DIAGRAM):   END;
36346     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36347     +END;
MPRINT(EM_DIAGRAM):   END;
36348     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36349     +IF PER_CAPITA_INCOME < 15622.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 15622.5 THEN DO;
36350     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36351     +END;
MPRINT(EM_DIAGRAM):   END;
36352     +ELSE IF 15622.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 15622.5 <= PER_CAPITA_INCOME THEN DO;
36353     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36354     +END;
MPRINT(EM_DIAGRAM):   END;
36355     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36356     +END;
MPRINT(EM_DIAGRAM):   END;
36357     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36358     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36359     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36360     +_ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
36361     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36362     +IF _ARBFMT_4 IN ('U' ,'R' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('U' ,'R' ) THEN DO;
36363     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36364     +END;
MPRINT(EM_DIAGRAM):   END;
36365     +ELSE IF _ARBFMT_4 IN ('S' ,'C' ,'T' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('S' ,'C' ,'T' ) THEN DO;
36366     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36367     +END;
MPRINT(EM_DIAGRAM):   END;
36368     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36369     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36370     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36371     +IF _ARBFMT_2 IN ('01' ,'02' ,'42' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('01' ,'02' ,'42' ,'03' ) THEN DO;
36372     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36373     +END;
MPRINT(EM_DIAGRAM):   END;
36374     +ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'15' ,'35' ,'13' ,'14' ,'24' ,
36375     +'12' ,'11' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'15' ,'35' ,'13' ,'14' ,'24' , '12' ,'11' ,'22' ) THEN DO;
36376     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36377     +END;
MPRINT(EM_DIAGRAM):   END;
36378     +END;
MPRINT(EM_DIAGRAM):   END;
36379     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
36380     +IF 1733 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   IF 1733 <= MEDIAN_HOME_VALUE THEN DO;
36381     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36382     +END;
MPRINT(EM_DIAGRAM):   END;
36383     +ELSE IF MEDIAN_HOME_VALUE < 1733 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MEDIAN_HOME_VALUE < 1733 THEN DO;
36384     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36385     +END;
MPRINT(EM_DIAGRAM):   END;
36386     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
36387     +END;
MPRINT(EM_DIAGRAM):   END;
36388     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36389     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36390     +P_WEALTH_RATING4 = 0.05070422535211;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.05070422535211;
36391     +P_WEALTH_RATING5 = 0.08169014084507;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.08169014084507;
36392     +P_WEALTH_RATING7 = 0.19718309859154;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.19718309859154;
36393     +P_WEALTH_RATING2 = 0.04507042253521;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.04507042253521;
36394     +P_WEALTH_RATING1 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0112676056338;
36395     +P_WEALTH_RATING3 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.0281690140845;
36396     +P_WEALTH_RATING6 = 0.14647887323943;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.14647887323943;
36397     +P_WEALTH_RATING9 = 0.19436619718309;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.19436619718309;
36398     +P_WEALTH_RATING8 = 0.2338028169014;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.2338028169014;
36399     +P_WEALTH_RATING0 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0112676056338;
36400     +Q_WEALTH_RATING4 = 0.05070422535211;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.05070422535211;
36401     +Q_WEALTH_RATING5 = 0.08169014084507;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.08169014084507;
36402     +Q_WEALTH_RATING7 = 0.19718309859154;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.19718309859154;
36403     +Q_WEALTH_RATING2 = 0.04507042253521;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.04507042253521;
36404     +Q_WEALTH_RATING1 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0112676056338;
36405     +Q_WEALTH_RATING3 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.0281690140845;
36406     +Q_WEALTH_RATING6 = 0.14647887323943;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.14647887323943;
36407     +Q_WEALTH_RATING9 = 0.19436619718309;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.19436619718309;
36408     +Q_WEALTH_RATING8 = 0.2338028169014;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.2338028169014;
36409     +Q_WEALTH_RATING0 = 0.0112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0112676056338;
36410     +I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
36411     +U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
36412     +END;
MPRINT(EM_DIAGRAM):   END;
36413     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36414     +P_WEALTH_RATING4 = 0.17222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.17222222222222;
36415     +P_WEALTH_RATING5 = 0.09444444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09444444444444;
36416     +P_WEALTH_RATING7 = 0.12222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.12222222222222;
36417     +P_WEALTH_RATING2 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.03333333333333;
36418     +P_WEALTH_RATING1 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.02222222222222;
36419     +P_WEALTH_RATING3 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.11666666666666;
36420     +P_WEALTH_RATING6 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.18333333333333;
36421     +P_WEALTH_RATING9 = 0.10555555555555;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.10555555555555;
36422     +P_WEALTH_RATING8 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.11666666666666;
36423     +P_WEALTH_RATING0 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.03333333333333;
36424     +Q_WEALTH_RATING4 = 0.17222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.17222222222222;
36425     +Q_WEALTH_RATING5 = 0.09444444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09444444444444;
36426     +Q_WEALTH_RATING7 = 0.12222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.12222222222222;
36427     +Q_WEALTH_RATING2 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.03333333333333;
36428     +Q_WEALTH_RATING1 = 0.02222222222222;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.02222222222222;
36429     +Q_WEALTH_RATING3 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.11666666666666;
36430     +Q_WEALTH_RATING6 = 0.18333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.18333333333333;
36431     +Q_WEALTH_RATING9 = 0.10555555555555;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.10555555555555;
36432     +Q_WEALTH_RATING8 = 0.11666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.11666666666666;
36433     +Q_WEALTH_RATING0 = 0.03333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.03333333333333;
36434     +I_WEALTH_RATING = '6';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '6';
36435     +U_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 6;
36436     +END;
MPRINT(EM_DIAGRAM):   END;
36437     +END;
MPRINT(EM_DIAGRAM):   END;
36438     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36439     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36440     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36441     +MEDIAN_HOME_VALUE < 1628 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 1628 THEN DO;
36442     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36443     +END;
MPRINT(EM_DIAGRAM):   END;
36444     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36445     +1628 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 1628 <= MEDIAN_HOME_VALUE THEN DO;
36446     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36447     +END;
MPRINT(EM_DIAGRAM):   END;
36448     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36449     +IF PER_CAPITA_INCOME < 25807.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 25807.5 THEN DO;
36450     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36451     +END;
MPRINT(EM_DIAGRAM):   END;
36452     +ELSE IF 25807.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 25807.5 <= PER_CAPITA_INCOME THEN DO;
36453     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36454     +END;
MPRINT(EM_DIAGRAM):   END;
36455     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36456     +END;
MPRINT(EM_DIAGRAM):   END;
36457     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36458     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36459     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36460     +IF _ARBFMT_2 IN ('.' ,'34' ,'35' ,'13' ,'42' ,'14' ,'24' ,'12' ,
36461     +'11' ,'22' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'35' ,'13' ,'42' ,'14' ,'24' ,'12' , '11' ,'22' ) THEN DO;
36462     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36463     +END;
MPRINT(EM_DIAGRAM):   END;
36464     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'02' ,'15' ,'03' ) THEN DO;
36465     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36466     +END;
MPRINT(EM_DIAGRAM):   END;
36467     +END;
MPRINT(EM_DIAGRAM):   END;
36468     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36469     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36470     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36471     +IF NOT MISSING(LIFETIME_CARD_PROM ) AND
36472     +LIFETIME_CARD_PROM < 34.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_CARD_PROM ) AND LIFETIME_CARD_PROM < 34.5 THEN DO;
36473     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36474     +END;
MPRINT(EM_DIAGRAM):   END;
36475     +ELSE IF NOT MISSING(LIFETIME_CARD_PROM ) AND
36476     +34.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_CARD_PROM ) AND 34.5 <= LIFETIME_CARD_PROM THEN DO;
36477     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36478     +END;
MPRINT(EM_DIAGRAM):   END;
36479     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
36480     +IF FILE_CARD_GIFT < 21.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_CARD_GIFT < 21.5 THEN DO;
36481     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36482     +END;
MPRINT(EM_DIAGRAM):   END;
36483     +ELSE IF 21.5 <= FILE_CARD_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 21.5 <= FILE_CARD_GIFT THEN DO;
36484     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36485     +END;
MPRINT(EM_DIAGRAM):   END;
36486     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36487     +END;
MPRINT(EM_DIAGRAM):   END;
36488     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
36489     +IF LIFETIME_PROM < 101.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 101.5 THEN DO;
36490     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36491     +END;
MPRINT(EM_DIAGRAM):   END;
36492     +ELSE IF 101.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 101.5 <= LIFETIME_PROM THEN DO;
36493     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36494     +END;
MPRINT(EM_DIAGRAM):   END;
36495     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36496     +END;
MPRINT(EM_DIAGRAM):   END;
36497     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36498     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36499     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36500     +P_WEALTH_RATING5 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.25;
36501     +P_WEALTH_RATING7 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.25;
36502     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36503     +P_WEALTH_RATING1 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.25;
36504     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36505     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36506     +P_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.125;
36507     +P_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.125;
36508     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36509     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36510     +Q_WEALTH_RATING5 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.25;
36511     +Q_WEALTH_RATING7 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.25;
36512     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36513     +Q_WEALTH_RATING1 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.25;
36514     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36515     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36516     +Q_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.125;
36517     +Q_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.125;
36518     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36519     +I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
36520     +U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
36521     +END;
MPRINT(EM_DIAGRAM):   END;
36522     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36523     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36524     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
36525     +PER_CAPITA_INCOME < 28361.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 28361.5 THEN DO;
36526     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36527     +END;
MPRINT(EM_DIAGRAM):   END;
36528     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
36529     +28361.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 28361.5 <= PER_CAPITA_INCOME THEN DO;
36530     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36531     +END;
MPRINT(EM_DIAGRAM):   END;
36532     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
36533     +IF MEDIAN_HOME_VALUE < 3997 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 3997 THEN DO;
36534     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36535     +END;
MPRINT(EM_DIAGRAM):   END;
36536     +ELSE IF 3997 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 3997 <= MEDIAN_HOME_VALUE THEN DO;
36537     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36538     +END;
MPRINT(EM_DIAGRAM):   END;
36539     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36540     +END;
MPRINT(EM_DIAGRAM):   END;
36541     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36542     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36543     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36544     +IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'35' ,'13' ,'14' ,'24' ,'12' ,
36545     +'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'35' ,'13' ,'14' ,'24' ,'12' , '11' ,'22' ,'03' ) THEN DO;
36546     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36547     +END;
MPRINT(EM_DIAGRAM):   END;
36548     +ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'15' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ,'01' ,'15' ) THEN DO;
36549     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36550     +END;
MPRINT(EM_DIAGRAM):   END;
36551     +END;
MPRINT(EM_DIAGRAM):   END;
36552     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36553     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36554     +P_WEALTH_RATING4 = 0.03296703296703;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.03296703296703;
36555     +P_WEALTH_RATING5 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01098901098901;
36556     +P_WEALTH_RATING7 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.09890109890109;
36557     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36558     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36559     +P_WEALTH_RATING3 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01098901098901;
36560     +P_WEALTH_RATING6 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09890109890109;
36561     +P_WEALTH_RATING9 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.53846153846153;
36562     +P_WEALTH_RATING8 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.19780219780219;
36563     +P_WEALTH_RATING0 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01098901098901;
36564     +Q_WEALTH_RATING4 = 0.03296703296703;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.03296703296703;
36565     +Q_WEALTH_RATING5 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01098901098901;
36566     +Q_WEALTH_RATING7 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.09890109890109;
36567     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36568     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36569     +Q_WEALTH_RATING3 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01098901098901;
36570     +Q_WEALTH_RATING6 = 0.09890109890109;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09890109890109;
36571     +Q_WEALTH_RATING9 = 0.53846153846153;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.53846153846153;
36572     +Q_WEALTH_RATING8 = 0.19780219780219;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.19780219780219;
36573     +Q_WEALTH_RATING0 = 0.01098901098901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01098901098901;
36574     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36575     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36576     +END;
MPRINT(EM_DIAGRAM):   END;
36577     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36578     +P_WEALTH_RATING4 = 0.02597402597402;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.02597402597402;
36579     +P_WEALTH_RATING5 = 0.06493506493506;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.06493506493506;
36580     +P_WEALTH_RATING7 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.29437229437229;
36581     +P_WEALTH_RATING2 = 0.02164502164502;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.02164502164502;
36582     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36583     +P_WEALTH_RATING3 = 0.01298701298701;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01298701298701;
36584     +P_WEALTH_RATING6 = 0.17748917748917;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.17748917748917;
36585     +P_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.09090909090909;
36586     +P_WEALTH_RATING8 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.29437229437229;
36587     +P_WEALTH_RATING0 = 0.01731601731601;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01731601731601;
36588     +Q_WEALTH_RATING4 = 0.02597402597402;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.02597402597402;
36589     +Q_WEALTH_RATING5 = 0.06493506493506;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.06493506493506;
36590     +Q_WEALTH_RATING7 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.29437229437229;
36591     +Q_WEALTH_RATING2 = 0.02164502164502;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.02164502164502;
36592     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36593     +Q_WEALTH_RATING3 = 0.01298701298701;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01298701298701;
36594     +Q_WEALTH_RATING6 = 0.17748917748917;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.17748917748917;
36595     +Q_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.09090909090909;
36596     +Q_WEALTH_RATING8 = 0.29437229437229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.29437229437229;
36597     +Q_WEALTH_RATING0 = 0.01731601731601;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01731601731601;
36598     +I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
36599     +U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
36600     +END;
MPRINT(EM_DIAGRAM):   END;
36601     +END;
MPRINT(EM_DIAGRAM):   END;
36602     +END;
MPRINT(EM_DIAGRAM):   END;
36603     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36604     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36605     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36606     +MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 504.5 THEN DO;
36607     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36608     +END;
MPRINT(EM_DIAGRAM):   END;
36609     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36610     +504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 504.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36611     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36612     +END;
MPRINT(EM_DIAGRAM):   END;
36613     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
36614     +IF PCT_OWNER_OCCUPIED < 94.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_OWNER_OCCUPIED < 94.5 THEN DO;
36615     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36616     +END;
MPRINT(EM_DIAGRAM):   END;
36617     +ELSE IF 94.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 94.5 <= PCT_OWNER_OCCUPIED THEN DO;
36618     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36619     +END;
MPRINT(EM_DIAGRAM):   END;
36620     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36621     +END;
MPRINT(EM_DIAGRAM):   END;
36622     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36623     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36624     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36625     +IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'02' ,'15' ,'35' ,'13' ,'42' ,
36626     +'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'23' ,'02' ,'15' ,'35' ,'13' ,'42' , '24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
36627     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36628     +END;
MPRINT(EM_DIAGRAM):   END;
36629     +ELSE IF _ARBFMT_2 IN ('14' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('14' ) THEN DO;
36630     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36631     +END;
MPRINT(EM_DIAGRAM):   END;
36632     +END;
MPRINT(EM_DIAGRAM):   END;
36633     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36634     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36635     +P_WEALTH_RATING4 = 0.00636942675159;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.00636942675159;
36636     +P_WEALTH_RATING5 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01273885350318;
36637     +P_WEALTH_RATING7 = 0.08917197452229;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08917197452229;
36638     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36639     +P_WEALTH_RATING1 = 0.01910828025477;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.01910828025477;
36640     +P_WEALTH_RATING3 = 0.02547770700636;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.02547770700636;
36641     +P_WEALTH_RATING6 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.01273885350318;
36642     +P_WEALTH_RATING9 = 0.61783439490445;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.61783439490445;
36643     +P_WEALTH_RATING8 = 0.20382165605095;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.20382165605095;
36644     +P_WEALTH_RATING0 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01273885350318;
36645     +Q_WEALTH_RATING4 = 0.00636942675159;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.00636942675159;
36646     +Q_WEALTH_RATING5 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01273885350318;
36647     +Q_WEALTH_RATING7 = 0.08917197452229;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08917197452229;
36648     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36649     +Q_WEALTH_RATING1 = 0.01910828025477;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.01910828025477;
36650     +Q_WEALTH_RATING3 = 0.02547770700636;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.02547770700636;
36651     +Q_WEALTH_RATING6 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.01273885350318;
36652     +Q_WEALTH_RATING9 = 0.61783439490445;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.61783439490445;
36653     +Q_WEALTH_RATING8 = 0.20382165605095;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.20382165605095;
36654     +Q_WEALTH_RATING0 = 0.01273885350318;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01273885350318;
36655     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36656     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36657     +END;
MPRINT(EM_DIAGRAM):   END;
36658     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36659     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36660     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
36661     +PER_CAPITA_INCOME < 22879 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 22879 THEN DO;
36662     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36663     +END;
MPRINT(EM_DIAGRAM):   END;
36664     +ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND
36665     +22879 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 22879 <= PER_CAPITA_INCOME THEN DO;
36666     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36667     +END;
MPRINT(EM_DIAGRAM):   END;
36668     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36669     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36670     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36671     +IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'15' ,'35' ,'13' ,'42' ,'14' ,
36672     +'24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'34' ,'02' ,'15' ,'35' ,'13' ,'42' ,'14' , '24' ,'12' ,'11' ,'22' ,'03' ) THEN DO;
36673     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36674     +END;
MPRINT(EM_DIAGRAM):   END;
36675     +ELSE IF _ARBFMT_2 IN ('23' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('23' ) THEN DO;
36676     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36677     +END;
MPRINT(EM_DIAGRAM):   END;
36678     +END;
MPRINT(EM_DIAGRAM):   END;
36679     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
36680     +IF MEDIAN_HOME_VALUE < 1587 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1587 THEN DO;
36681     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36682     +END;
MPRINT(EM_DIAGRAM):   END;
36683     +ELSE IF 1587 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1587 <= MEDIAN_HOME_VALUE THEN DO;
36684     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36685     +END;
MPRINT(EM_DIAGRAM):   END;
36686     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36687     +END;
MPRINT(EM_DIAGRAM):   END;
36688     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36689     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36690     +P_WEALTH_RATING4 = 0.02777777777777;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.02777777777777;
36691     +P_WEALTH_RATING5 = 0.01388888888888;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.01388888888888;
36692     +P_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08333333333333;
36693     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36694     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36695     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36696     +P_WEALTH_RATING6 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.05555555555555;
36697     +P_WEALTH_RATING9 = 0.56944444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.56944444444444;
36698     +P_WEALTH_RATING8 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.25;
36699     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36700     +Q_WEALTH_RATING4 = 0.02777777777777;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.02777777777777;
36701     +Q_WEALTH_RATING5 = 0.01388888888888;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.01388888888888;
36702     +Q_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08333333333333;
36703     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36704     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36705     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36706     +Q_WEALTH_RATING6 = 0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.05555555555555;
36707     +Q_WEALTH_RATING9 = 0.56944444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.56944444444444;
36708     +Q_WEALTH_RATING8 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.25;
36709     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36710     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
36711     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
36712     +END;
MPRINT(EM_DIAGRAM):   END;
36713     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36714     +P_WEALTH_RATING4 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.01699716713881;
36715     +P_WEALTH_RATING5 = 0.03116147308781;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.03116147308781;
36716     +P_WEALTH_RATING7 = 0.18413597733711;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.18413597733711;
36717     +P_WEALTH_RATING2 = 0.0084985835694;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0084985835694;
36718     +P_WEALTH_RATING1 = 0.0113314447592;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0113314447592;
36719     +P_WEALTH_RATING3 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.01699716713881;
36720     +P_WEALTH_RATING6 = 0.08215297450424;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.08215297450424;
36721     +P_WEALTH_RATING9 = 0.22379603399433;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.22379603399433;
36722     +P_WEALTH_RATING8 = 0.42492917847025;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.42492917847025;
36723     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36724     +Q_WEALTH_RATING4 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.01699716713881;
36725     +Q_WEALTH_RATING5 = 0.03116147308781;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.03116147308781;
36726     +Q_WEALTH_RATING7 = 0.18413597733711;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.18413597733711;
36727     +Q_WEALTH_RATING2 = 0.0084985835694;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0084985835694;
36728     +Q_WEALTH_RATING1 = 0.0113314447592;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0113314447592;
36729     +Q_WEALTH_RATING3 = 0.01699716713881;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.01699716713881;
36730     +Q_WEALTH_RATING6 = 0.08215297450424;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.08215297450424;
36731     +Q_WEALTH_RATING9 = 0.22379603399433;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.22379603399433;
36732     +Q_WEALTH_RATING8 = 0.42492917847025;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.42492917847025;
36733     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36734     +I_WEALTH_RATING = '8';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '8';
36735     +U_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 8;
36736     +END;
MPRINT(EM_DIAGRAM):   END;
36737     +END;
MPRINT(EM_DIAGRAM):   END;
36738     +END;
MPRINT(EM_DIAGRAM):   END;
36739     +END;
MPRINT(EM_DIAGRAM):   END;
36740     +END;
MPRINT(EM_DIAGRAM):   END;
36741     +END;
MPRINT(EM_DIAGRAM):   END;
36742     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36743     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36744     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36745     +MEDIAN_HOUSEHOLD_INCOME < 268.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 268.5 THEN DO;
36746     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36747     +END;
MPRINT(EM_DIAGRAM):   END;
36748     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36749     +268.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 268.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36750     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36751     +END;
MPRINT(EM_DIAGRAM):   END;
36752     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36753     +IF PER_CAPITA_INCOME < 11745.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11745.5 THEN DO;
36754     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36755     +END;
MPRINT(EM_DIAGRAM):   END;
36756     +ELSE IF 11745.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11745.5 <= PER_CAPITA_INCOME THEN DO;
36757     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36758     +END;
MPRINT(EM_DIAGRAM):   END;
36759     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36760     +END;
MPRINT(EM_DIAGRAM):   END;
36761     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36762     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36763     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36764     +IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' ,'36' ,
36765     +'48' ,'31' ,'46' ,'26' ,'51' ,'25' ,'33' ,'38' ,'09' ,'53' ,'32' ,'47' ,
36766     +'10' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' ,'36' , '48' ,'31' ,'46' ,'26' ,'51' ,'25' ,'33' ,'38' ,'09' ,'53' ,'32' ,'47' , '10' ,'52' ) THEN DO;
36767     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36768     +END;
MPRINT(EM_DIAGRAM):   END;
36769     +ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'18' ,'08' ,'19' ,'27' ,
36770     +'28' ,'21' ,'44' ,'05' ,'17' ,'39' ,'29' ,'40' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'18' ,'08' ,'19' ,'27' , '28' ,'21' ,'44' ,'05' ,'17' ,'39' ,'29' ,'40' ,'06' ) THEN DO;
36771     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36772     +END;
MPRINT(EM_DIAGRAM):   END;
36773     +END;
MPRINT(EM_DIAGRAM):   END;
36774     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36775     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36776     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36777     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36778     +MEDIAN_HOUSEHOLD_INCOME < 330.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 330.5 THEN DO;
36779     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36780     +END;
MPRINT(EM_DIAGRAM):   END;
36781     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
36782     +330.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 330.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
36783     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36784     +END;
MPRINT(EM_DIAGRAM):   END;
36785     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36786     +IF PER_CAPITA_INCOME < 13147.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 13147.5 THEN DO;
36787     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36788     +END;
MPRINT(EM_DIAGRAM):   END;
36789     +ELSE IF 13147.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 13147.5 <= PER_CAPITA_INCOME THEN DO;
36790     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36791     +END;
MPRINT(EM_DIAGRAM):   END;
36792     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36793     +END;
MPRINT(EM_DIAGRAM):   END;
36794     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
36795     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
36796     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
36797     +IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'45' ,'30' ,'07' ,'41' ,'37' ,
36798     +'36' ,'08' ,'31' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' ,
36799     +'09' ,'29' ,'47' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'49' ,'43' ,'45' ,'30' ,'07' ,'41' ,'37' , '36' ,'08' ,'31' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' , '09' ,'29' ,'47' ,'10' ) THEN DO;
36800     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36801     +END;
MPRINT(EM_DIAGRAM):   END;
36802     +ELSE IF _ARBFMT_2 IN ('20' ,'.' ,'16' ,'18' ,'48' ,'19' ,'27' ,'28' ,
36803     +'44' ,'05' ,'33' ,'40' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'.' ,'16' ,'18' ,'48' ,'19' ,'27' ,'28' , '44' ,'05' ,'33' ,'40' ,'06' ) THEN DO;
36804     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36805     +END;
MPRINT(EM_DIAGRAM):   END;
36806     +END;
MPRINT(EM_DIAGRAM):   END;
36807     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36808     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36809     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36810     +IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36811     +RECENT_AVG_GIFT_AMT < 48.335 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 48.335 THEN DO;
36812     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36813     +END;
MPRINT(EM_DIAGRAM):   END;
36814     +ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36815     +48.335 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 48.335 <= RECENT_AVG_GIFT_AMT THEN DO;
36816     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36817     +END;
MPRINT(EM_DIAGRAM):   END;
36818     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
36819     +IF LIFETIME_MIN_GIFT_AMT < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MIN_GIFT_AMT < 37.5 THEN DO;
36820     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36821     +END;
MPRINT(EM_DIAGRAM):   END;
36822     +ELSE IF 37.5 <= LIFETIME_MIN_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 37.5 <= LIFETIME_MIN_GIFT_AMT THEN DO;
36823     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36824     +END;
MPRINT(EM_DIAGRAM):   END;
36825     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36826     +END;
MPRINT(EM_DIAGRAM):   END;
36827     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_CARD_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_CARD_GIFT_AMT ) THEN DO;
36828     +IF RECENT_AVG_CARD_GIFT_AMT < 45.625 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_CARD_GIFT_AMT < 45.625 THEN DO;
36829     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36830     +END;
MPRINT(EM_DIAGRAM):   END;
36831     +ELSE IF 45.625 <= RECENT_AVG_CARD_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 45.625 <= RECENT_AVG_CARD_GIFT_AMT THEN DO;
36832     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36833     +END;
MPRINT(EM_DIAGRAM):   END;
36834     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36835     +END;
MPRINT(EM_DIAGRAM):   END;
36836     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36837     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36838     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36839     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
36840     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36841     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
36842     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36843     +P_WEALTH_RATING3 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.33333333333333;
36844     +P_WEALTH_RATING6 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.33333333333333;
36845     +P_WEALTH_RATING9 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.33333333333333;
36846     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36847     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
36848     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36849     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
36850     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36851     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
36852     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36853     +Q_WEALTH_RATING3 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.33333333333333;
36854     +Q_WEALTH_RATING6 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.33333333333333;
36855     +Q_WEALTH_RATING9 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.33333333333333;
36856     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36857     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
36858     +I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
36859     +U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
36860     +END;
MPRINT(EM_DIAGRAM):   END;
36861     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36862     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36863     +IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36864     +MEDIAN_HOME_VALUE < 970.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOME_VALUE ) AND MEDIAN_HOME_VALUE < 970.5 THEN DO;
36865     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36866     +END;
MPRINT(EM_DIAGRAM):   END;
36867     +ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND
36868     +970.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOME_VALUE ) AND 970.5 <= MEDIAN_HOME_VALUE THEN DO;
36869     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36870     +END;
MPRINT(EM_DIAGRAM):   END;
36871     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_OWNER_OCCUPIED ) THEN DO;
36872     +IF 27.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   IF 27.5 <= PCT_OWNER_OCCUPIED THEN DO;
36873     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36874     +END;
MPRINT(EM_DIAGRAM):   END;
36875     +ELSE IF PCT_OWNER_OCCUPIED < 27.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF PCT_OWNER_OCCUPIED < 27.5 THEN DO;
36876     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36877     +END;
MPRINT(EM_DIAGRAM):   END;
36878     +ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
36879     +END;
MPRINT(EM_DIAGRAM):   END;
36880     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
36881     +IF PER_CAPITA_INCOME < 18997.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 18997.5 THEN DO;
36882     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36883     +END;
MPRINT(EM_DIAGRAM):   END;
36884     +ELSE IF 18997.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 18997.5 <= PER_CAPITA_INCOME THEN DO;
36885     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36886     +END;
MPRINT(EM_DIAGRAM):   END;
36887     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36888     +END;
MPRINT(EM_DIAGRAM):   END;
36889     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36890     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36891     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36892     +IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36893     +RECENT_AVG_GIFT_AMT < 4.25 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND RECENT_AVG_GIFT_AMT < 4.25 THEN DO;
36894     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36895     +END;
MPRINT(EM_DIAGRAM):   END;
36896     +ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND
36897     +4.25 <= RECENT_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(RECENT_AVG_GIFT_AMT ) AND 4.25 <= RECENT_AVG_GIFT_AMT THEN DO;
36898     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36899     +END;
MPRINT(EM_DIAGRAM):   END;
36900     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
36901     +IF RECENT_RESPONSE_PROP < 0.024 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.024 THEN DO;
36902     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36903     +END;
MPRINT(EM_DIAGRAM):   END;
36904     +ELSE IF 0.024 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.024 <= RECENT_RESPONSE_PROP THEN DO;
36905     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36906     +END;
MPRINT(EM_DIAGRAM):   END;
36907     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36908     +END;
MPRINT(EM_DIAGRAM):   END;
36909     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
36910     +IF FILE_AVG_GIFT < 3.605 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 3.605 THEN DO;
36911     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36912     +END;
MPRINT(EM_DIAGRAM):   END;
36913     +ELSE IF 3.605 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 3.605 <= FILE_AVG_GIFT THEN DO;
36914     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36915     +END;
MPRINT(EM_DIAGRAM):   END;
36916     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36917     +END;
MPRINT(EM_DIAGRAM):   END;
36918     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
36919     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
36920     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36921     +P_WEALTH_RATING5 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.4;
36922     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
36923     +P_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2;
36924     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
36925     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
36926     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
36927     +P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
36928     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
36929     +P_WEALTH_RATING0 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.4;
36930     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
36931     +Q_WEALTH_RATING5 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.4;
36932     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
36933     +Q_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2;
36934     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
36935     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
36936     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
36937     +Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
36938     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
36939     +Q_WEALTH_RATING0 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.4;
36940     +I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
36941     +U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
36942     +END;
MPRINT(EM_DIAGRAM):   END;
36943     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36944     +P_WEALTH_RATING4 = 0.19565217391304;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.19565217391304;
36945     +P_WEALTH_RATING5 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09420289855072;
36946     +P_WEALTH_RATING7 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.04347826086956;
36947     +P_WEALTH_RATING2 = 0.15942028985507;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.15942028985507;
36948     +P_WEALTH_RATING1 = 0.05072463768115;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.05072463768115;
36949     +P_WEALTH_RATING3 = 0.31884057971014;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.31884057971014;
36950     +P_WEALTH_RATING6 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09420289855072;
36951     +P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
36952     +P_WEALTH_RATING8 = 0.03623188405797;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.03623188405797;
36953     +P_WEALTH_RATING0 = 0.00724637681159;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.00724637681159;
36954     +Q_WEALTH_RATING4 = 0.19565217391304;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.19565217391304;
36955     +Q_WEALTH_RATING5 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09420289855072;
36956     +Q_WEALTH_RATING7 = 0.04347826086956;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.04347826086956;
36957     +Q_WEALTH_RATING2 = 0.15942028985507;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.15942028985507;
36958     +Q_WEALTH_RATING1 = 0.05072463768115;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.05072463768115;
36959     +Q_WEALTH_RATING3 = 0.31884057971014;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.31884057971014;
36960     +Q_WEALTH_RATING6 = 0.09420289855072;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09420289855072;
36961     +Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
36962     +Q_WEALTH_RATING8 = 0.03623188405797;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.03623188405797;
36963     +Q_WEALTH_RATING0 = 0.00724637681159;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.00724637681159;
36964     +I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
36965     +U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
36966     +END;
MPRINT(EM_DIAGRAM):   END;
36967     +END;
MPRINT(EM_DIAGRAM):   END;
36968     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
36969     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
36970     +IF NOT MISSING(LIFETIME_PROM ) AND
36971     +LIFETIME_PROM < 100.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_PROM ) AND LIFETIME_PROM < 100.5 THEN DO;
36972     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36973     +END;
MPRINT(EM_DIAGRAM):   END;
36974     +ELSE IF NOT MISSING(LIFETIME_PROM ) AND
36975     +100.5 <= LIFETIME_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_PROM ) AND 100.5 <= LIFETIME_PROM THEN DO;
36976     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36977     +END;
MPRINT(EM_DIAGRAM):   END;
36978     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_CARD_PROM ) THEN DO;
36979     +IF LIFETIME_CARD_PROM < 37.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_CARD_PROM < 37.5 THEN DO;
36980     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36981     +END;
MPRINT(EM_DIAGRAM):   END;
36982     +ELSE IF 37.5 <= LIFETIME_CARD_PROM THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 37.5 <= LIFETIME_CARD_PROM THEN DO;
36983     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36984     +END;
MPRINT(EM_DIAGRAM):   END;
36985     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36986     +END;
MPRINT(EM_DIAGRAM):   END;
36987     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
36988     +IF LIFETIME_GIFT_COUNT < 71.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_GIFT_COUNT < 71.5 THEN DO;
36989     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
36990     +END;
MPRINT(EM_DIAGRAM):   END;
36991     +ELSE IF 71.5 <= LIFETIME_GIFT_COUNT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 71.5 <= LIFETIME_GIFT_COUNT THEN DO;
36992     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
36993     +END;
MPRINT(EM_DIAGRAM):   END;
36994     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
36995     +END;
MPRINT(EM_DIAGRAM):   END;
36996     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
36997     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
36998     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
36999     +P_WEALTH_RATING5 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.11111111111111;
37000     +P_WEALTH_RATING7 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.11111111111111;
37001     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
37002     +P_WEALTH_RATING1 = 0.44444444444444;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.44444444444444;
37003     +P_WEALTH_RATING3 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.11111111111111;
37004     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
37005     +P_WEALTH_RATING9 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.11111111111111;
37006     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
37007     +P_WEALTH_RATING0 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.11111111111111;
37008     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
37009     +Q_WEALTH_RATING5 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.11111111111111;
37010     +Q_WEALTH_RATING7 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.11111111111111;
37011     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
37012     +Q_WEALTH_RATING1 = 0.44444444444444;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.44444444444444;
37013     +Q_WEALTH_RATING3 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.11111111111111;
37014     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
37015     +Q_WEALTH_RATING9 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.11111111111111;
37016     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
37017     +Q_WEALTH_RATING0 = 0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.11111111111111;
37018     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
37019     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
37020     +END;
MPRINT(EM_DIAGRAM):   END;
37021     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37022     +P_WEALTH_RATING4 = 0.15745856353591;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.15745856353591;
37023     +P_WEALTH_RATING5 = 0.23204419889502;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.23204419889502;
37024     +P_WEALTH_RATING7 = 0.08839779005524;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08839779005524;
37025     +P_WEALTH_RATING2 = 0.0732044198895;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.0732044198895;
37026     +P_WEALTH_RATING1 = 0.03591160220994;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.03591160220994;
37027     +P_WEALTH_RATING3 = 0.14779005524861;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.14779005524861;
37028     +P_WEALTH_RATING6 = 0.17403314917127;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.17403314917127;
37029     +P_WEALTH_RATING9 = 0.00966850828729;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00966850828729;
37030     +P_WEALTH_RATING8 = 0.04419889502762;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.04419889502762;
37031     +P_WEALTH_RATING0 = 0.03729281767955;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.03729281767955;
37032     +Q_WEALTH_RATING4 = 0.15745856353591;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.15745856353591;
37033     +Q_WEALTH_RATING5 = 0.23204419889502;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.23204419889502;
37034     +Q_WEALTH_RATING7 = 0.08839779005524;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08839779005524;
37035     +Q_WEALTH_RATING2 = 0.0732044198895;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.0732044198895;
37036     +Q_WEALTH_RATING1 = 0.03591160220994;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.03591160220994;
37037     +Q_WEALTH_RATING3 = 0.14779005524861;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.14779005524861;
37038     +Q_WEALTH_RATING6 = 0.17403314917127;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.17403314917127;
37039     +Q_WEALTH_RATING9 = 0.00966850828729;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00966850828729;
37040     +Q_WEALTH_RATING8 = 0.04419889502762;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.04419889502762;
37041     +Q_WEALTH_RATING0 = 0.03729281767955;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.03729281767955;
37042     +I_WEALTH_RATING = '5';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '5';
37043     +U_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 5;
37044     +END;
MPRINT(EM_DIAGRAM):   END;
37045     +END;
MPRINT(EM_DIAGRAM):   END;
37046     +END;
MPRINT(EM_DIAGRAM):   END;
37047     +END;
MPRINT(EM_DIAGRAM):   END;
37048     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37049     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37050     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37051     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37052     +IF _ARBFMT_2 IN ('49' ,'45' ,'.' ,'30' ,'07' ,'41' ,'37' ,'36' ,'48' ,
37053     +'08' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' ,'29' ,'06' )
37054     +THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'45' ,'.' ,'30' ,'07' ,'41' ,'37' ,'36' ,'48' , '08' ,'46' ,'26' ,'21' ,'51' ,'17' ,'39' ,'25' ,'38' ,'29' ,'06' ) THEN DO;
37055     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37056     +END;
MPRINT(EM_DIAGRAM):   END;
37057     +ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' ,
37058     +'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' , '40' ) THEN DO;
37059     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37060     +END;
MPRINT(EM_DIAGRAM):   END;
37061     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
37062     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
37063     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37064     +IF _ARBFMT_4 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ) THEN DO;
37065     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37066     +END;
MPRINT(EM_DIAGRAM):   END;
37067     +ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
37068     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37069     +END;
MPRINT(EM_DIAGRAM):   END;
37070     +END;
MPRINT(EM_DIAGRAM):   END;
37071     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE2 ) THEN DO;
37072     +IF PCT_ATTRIBUTE2 < 17.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_ATTRIBUTE2 < 17.5 THEN DO;
37073     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37074     +END;
MPRINT(EM_DIAGRAM):   END;
37075     +ELSE IF 17.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 17.5 <= PCT_ATTRIBUTE2 THEN DO;
37076     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37077     +END;
MPRINT(EM_DIAGRAM):   END;
37078     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37079     +END;
MPRINT(EM_DIAGRAM):   END;
37080     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
37081     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
37082     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37083     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37084     +IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' ,
37085     +'40' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('20' ,'16' ,'18' ,'19' ,'27' ,'28' ,'44' ,'05' , '40' ) THEN DO;
37086     +P_WEALTH_RATING4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.06896551724137;
37087     +P_WEALTH_RATING5 = 0.16413793103448;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.16413793103448;
37088     +P_WEALTH_RATING7 = 0.26482758620689;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.26482758620689;
37089     +P_WEALTH_RATING2 = 0.02068965517241;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.02068965517241;
37090     +P_WEALTH_RATING1 = 0.00689655172413;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.00689655172413;
37091     +P_WEALTH_RATING3 = 0.03172413793103;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.03172413793103;
37092     +P_WEALTH_RATING6 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.20689655172413;
37093     +P_WEALTH_RATING9 = 0.04413793103448;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.04413793103448;
37094     +P_WEALTH_RATING8 = 0.17931034482758;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.17931034482758;
37095     +P_WEALTH_RATING0 = 0.01241379310344;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.01241379310344;
37096     +Q_WEALTH_RATING4 = 0.06896551724137;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.06896551724137;
37097     +Q_WEALTH_RATING5 = 0.16413793103448;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.16413793103448;
37098     +Q_WEALTH_RATING7 = 0.26482758620689;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.26482758620689;
37099     +Q_WEALTH_RATING2 = 0.02068965517241;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.02068965517241;
37100     +Q_WEALTH_RATING1 = 0.00689655172413;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.00689655172413;
37101     +Q_WEALTH_RATING3 = 0.03172413793103;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.03172413793103;
37102     +Q_WEALTH_RATING6 = 0.20689655172413;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.20689655172413;
37103     +Q_WEALTH_RATING9 = 0.04413793103448;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.04413793103448;
37104     +Q_WEALTH_RATING8 = 0.17931034482758;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.17931034482758;
37105     +Q_WEALTH_RATING0 = 0.01241379310344;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.01241379310344;
37106     +I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
37107     +U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
37108     +END;
MPRINT(EM_DIAGRAM):   END;
37109     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37110     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
37111     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
37112     +P_WEALTH_RATING7 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.09090909090909;
37113     +P_WEALTH_RATING2 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.18181818181818;
37114     +P_WEALTH_RATING1 = 0.36363636363636;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.36363636363636;
37115     +P_WEALTH_RATING3 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.18181818181818;
37116     +P_WEALTH_RATING6 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09090909090909;
37117     +P_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0;
37118     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
37119     +P_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.09090909090909;
37120     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
37121     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
37122     +Q_WEALTH_RATING7 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.09090909090909;
37123     +Q_WEALTH_RATING2 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.18181818181818;
37124     +Q_WEALTH_RATING1 = 0.36363636363636;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.36363636363636;
37125     +Q_WEALTH_RATING3 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.18181818181818;
37126     +Q_WEALTH_RATING6 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09090909090909;
37127     +Q_WEALTH_RATING9 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0;
37128     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
37129     +Q_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.09090909090909;
37130     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
37131     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
37132     +END;
MPRINT(EM_DIAGRAM):   END;
37133     +END;
MPRINT(EM_DIAGRAM):   END;
37134     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37135     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37136     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37137     +IF _ARBFMT_2 IN ('49' ,'.' ,'07' ,'08' ,'46' ,'26' ,'21' ,'51' ,'17' ,
37138     +'39' ,'38' ,'29' ,'06' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('49' ,'.' ,'07' ,'08' ,'46' ,'26' ,'21' ,'51' ,'17' , '39' ,'38' ,'29' ,'06' ) THEN DO;
37139     +P_WEALTH_RATING4 = 0.14117647058823;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.14117647058823;
37140     +P_WEALTH_RATING5 = 0.20392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.20392156862745;
37141     +P_WEALTH_RATING7 = 0.13725490196078;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.13725490196078;
37142     +P_WEALTH_RATING2 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.05882352941176;
37143     +P_WEALTH_RATING1 = 0.0392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.0392156862745;
37144     +P_WEALTH_RATING3 = 0.09411764705882;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09411764705882;
37145     +P_WEALTH_RATING6 = 0.2078431372549;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.2078431372549;
37146     +P_WEALTH_RATING9 = 0.04313725490196;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.04313725490196;
37147     +P_WEALTH_RATING8 = 0.07058823529411;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.07058823529411;
37148     +P_WEALTH_RATING0 = 0.00392156862745;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.00392156862745;
37149     +Q_WEALTH_RATING4 = 0.14117647058823;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.14117647058823;
37150     +Q_WEALTH_RATING5 = 0.20392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.20392156862745;
37151     +Q_WEALTH_RATING7 = 0.13725490196078;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.13725490196078;
37152     +Q_WEALTH_RATING2 = 0.05882352941176;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.05882352941176;
37153     +Q_WEALTH_RATING1 = 0.0392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.0392156862745;
37154     +Q_WEALTH_RATING3 = 0.09411764705882;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09411764705882;
37155     +Q_WEALTH_RATING6 = 0.2078431372549;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.2078431372549;
37156     +Q_WEALTH_RATING9 = 0.04313725490196;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.04313725490196;
37157     +Q_WEALTH_RATING8 = 0.07058823529411;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.07058823529411;
37158     +Q_WEALTH_RATING0 = 0.00392156862745;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.00392156862745;
37159     +I_WEALTH_RATING = '6';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '6';
37160     +U_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 6;
37161     +END;
MPRINT(EM_DIAGRAM):   END;
37162     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37163     +P_WEALTH_RATING4 = 0.15492957746478;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.15492957746478;
37164     +P_WEALTH_RATING5 = 0.05633802816901;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.05633802816901;
37165     +P_WEALTH_RATING7 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.0281690140845;
37166     +P_WEALTH_RATING2 = 0.2112676056338;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2112676056338;
37167     +P_WEALTH_RATING1 = 0.16901408450704;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.16901408450704;
37168     +P_WEALTH_RATING3 = 0.12676056338028;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.12676056338028;
37169     +P_WEALTH_RATING6 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.11267605633802;
37170     +P_WEALTH_RATING9 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.0281690140845;
37171     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
37172     +P_WEALTH_RATING0 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.11267605633802;
37173     +Q_WEALTH_RATING4 = 0.15492957746478;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.15492957746478;
37174     +Q_WEALTH_RATING5 = 0.05633802816901;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.05633802816901;
37175     +Q_WEALTH_RATING7 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.0281690140845;
37176     +Q_WEALTH_RATING2 = 0.2112676056338;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2112676056338;
37177     +Q_WEALTH_RATING1 = 0.16901408450704;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.16901408450704;
37178     +Q_WEALTH_RATING3 = 0.12676056338028;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.12676056338028;
37179     +Q_WEALTH_RATING6 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.11267605633802;
37180     +Q_WEALTH_RATING9 = 0.0281690140845;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.0281690140845;
37181     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
37182     +Q_WEALTH_RATING0 = 0.11267605633802;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.11267605633802;
37183     +I_WEALTH_RATING = '2';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '2';
37184     +U_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 2;
37185     +END;
MPRINT(EM_DIAGRAM):   END;
37186     +END;
MPRINT(EM_DIAGRAM):   END;
37187     +END;
MPRINT(EM_DIAGRAM):   END;
37188     +END;
MPRINT(EM_DIAGRAM):   END;
37189     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37190     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37191     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
37192     +MEDIAN_HOUSEHOLD_INCOME < 186.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 186.5 THEN DO;
37193     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37194     +END;
MPRINT(EM_DIAGRAM):   END;
37195     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
37196     +186.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 186.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
37197     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37198     +END;
MPRINT(EM_DIAGRAM):   END;
37199     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
37200     +IF PER_CAPITA_INCOME < 8800 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 8800 THEN DO;
37201     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37202     +END;
MPRINT(EM_DIAGRAM):   END;
37203     +ELSE IF 8800 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 8800 <= PER_CAPITA_INCOME THEN DO;
37204     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37205     +END;
MPRINT(EM_DIAGRAM):   END;
37206     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37207     +END;
MPRINT(EM_DIAGRAM):   END;
37208     +IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
37209     +IF MEDIAN_HOME_VALUE < 335.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 335.5 THEN DO;
37210     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37211     +END;
MPRINT(EM_DIAGRAM):   END;
37212     +ELSE IF 335.5 <= MEDIAN_HOME_VALUE THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 335.5 <= MEDIAN_HOME_VALUE THEN DO;
37213     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37214     +END;
MPRINT(EM_DIAGRAM):   END;
37215     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37216     +END;
MPRINT(EM_DIAGRAM):   END;
37217     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
37218     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
37219     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37220     +IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND
37221     +PCT_OWNER_OCCUPIED < 90.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND PCT_OWNER_OCCUPIED < 90.5 THEN DO;
37222     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37223     +END;
MPRINT(EM_DIAGRAM):   END;
37224     +ELSE IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND
37225     +90.5 <= PCT_OWNER_OCCUPIED THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PCT_OWNER_OCCUPIED ) AND 90.5 <= PCT_OWNER_OCCUPIED THEN DO;
37226     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37227     +END;
MPRINT(EM_DIAGRAM):   END;
37228     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_CARD_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_CARD_RESPONSE_PROP ) THEN DO;
37229     +IF RECENT_CARD_RESPONSE_PROP < 0.909 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_CARD_RESPONSE_PROP < 0.909 THEN DO;
37230     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37231     +END;
MPRINT(EM_DIAGRAM):   END;
37232     +ELSE IF 0.909 <= RECENT_CARD_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.909 <= RECENT_CARD_RESPONSE_PROP THEN DO;
37233     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37234     +END;
MPRINT(EM_DIAGRAM):   END;
37235     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37236     +END;
MPRINT(EM_DIAGRAM):   END;
37237     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
37238     +IF RECENT_RESPONSE_PROP < 0.771 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_RESPONSE_PROP < 0.771 THEN DO;
37239     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37240     +END;
MPRINT(EM_DIAGRAM):   END;
37241     +ELSE IF 0.771 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 0.771 <= RECENT_RESPONSE_PROP THEN DO;
37242     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37243     +END;
MPRINT(EM_DIAGRAM):   END;
37244     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37245     +END;
MPRINT(EM_DIAGRAM):   END;
37246     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
37247     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
37248     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
37249     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
37250     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
37251     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
37252     +P_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0;
37253     +P_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0;
37254     +P_WEALTH_RATING6 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.16666666666666;
37255     +P_WEALTH_RATING9 = 0.5;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.5;
37256     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
37257     +P_WEALTH_RATING0 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.33333333333333;
37258     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
37259     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
37260     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
37261     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
37262     +Q_WEALTH_RATING1 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0;
37263     +Q_WEALTH_RATING3 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0;
37264     +Q_WEALTH_RATING6 = 0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.16666666666666;
37265     +Q_WEALTH_RATING9 = 0.5;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.5;
37266     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
37267     +Q_WEALTH_RATING0 = 0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.33333333333333;
37268     +I_WEALTH_RATING = '9';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '9';
37269     +U_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 9;
37270     +END;
MPRINT(EM_DIAGRAM):   END;
37271     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37272     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37273     +IF NOT MISSING(PCT_ATTRIBUTE2 ) AND
37274     +PCT_ATTRIBUTE2 < 1.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE2 ) AND PCT_ATTRIBUTE2 < 1.5 THEN DO;
37275     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37276     +END;
MPRINT(EM_DIAGRAM):   END;
37277     +ELSE IF NOT MISSING(PCT_ATTRIBUTE2 ) AND
37278     +1.5 <= PCT_ATTRIBUTE2 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PCT_ATTRIBUTE2 ) AND 1.5 <= PCT_ATTRIBUTE2 THEN DO;
37279     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37280     +END;
MPRINT(EM_DIAGRAM):   END;
37281     +IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE4 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PCT_ATTRIBUTE4 ) THEN DO;
37282     +IF PCT_ATTRIBUTE4 < 3 THEN DO;
MPRINT(EM_DIAGRAM):   IF PCT_ATTRIBUTE4 < 3 THEN DO;
37283     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37284     +END;
MPRINT(EM_DIAGRAM):   END;
37285     +ELSE IF 3 <= PCT_ATTRIBUTE4 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 3 <= PCT_ATTRIBUTE4 THEN DO;
37286     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37287     +END;
MPRINT(EM_DIAGRAM):   END;
37288     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37289     +END;
MPRINT(EM_DIAGRAM):   END;
37290     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
37291     +IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
37292     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
37293     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
37294     +P_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.08333333333333;
37295     +P_WEALTH_RATING2 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.125;
37296     +P_WEALTH_RATING1 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.08333333333333;
37297     +P_WEALTH_RATING3 = 0.04166666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.04166666666666;
37298     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
37299     +P_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.125;
37300     +P_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.125;
37301     +P_WEALTH_RATING0 = 0.41666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.41666666666666;
37302     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
37303     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
37304     +Q_WEALTH_RATING7 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.08333333333333;
37305     +Q_WEALTH_RATING2 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.125;
37306     +Q_WEALTH_RATING1 = 0.08333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.08333333333333;
37307     +Q_WEALTH_RATING3 = 0.04166666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.04166666666666;
37308     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
37309     +Q_WEALTH_RATING9 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.125;
37310     +Q_WEALTH_RATING8 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.125;
37311     +Q_WEALTH_RATING0 = 0.41666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.41666666666666;
37312     +I_WEALTH_RATING = '0';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '0';
37313     +U_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 0;
37314     +END;
MPRINT(EM_DIAGRAM):   END;
37315     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37316     +IF NOT MISSING(PER_CAPITA_INCOME ) AND
37317     +15462.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND 15462.5 <= PER_CAPITA_INCOME THEN DO;
37318     +P_WEALTH_RATING4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.18181818181818;
37319     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
37320     +P_WEALTH_RATING7 = 0.27272727272727;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.27272727272727;
37321     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
37322     +P_WEALTH_RATING1 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.09090909090909;
37323     +P_WEALTH_RATING3 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09090909090909;
37324     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
37325     +P_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.09090909090909;
37326     +P_WEALTH_RATING8 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.18181818181818;
37327     +P_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.09090909090909;
37328     +Q_WEALTH_RATING4 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.18181818181818;
37329     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
37330     +Q_WEALTH_RATING7 = 0.27272727272727;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.27272727272727;
37331     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
37332     +Q_WEALTH_RATING1 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.09090909090909;
37333     +Q_WEALTH_RATING3 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09090909090909;
37334     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
37335     +Q_WEALTH_RATING9 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.09090909090909;
37336     +Q_WEALTH_RATING8 = 0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.18181818181818;
37337     +Q_WEALTH_RATING0 = 0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.09090909090909;
37338     +I_WEALTH_RATING = '7';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '7';
37339     +U_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 7;
37340     +END;
MPRINT(EM_DIAGRAM):   END;
37341     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37342     +P_WEALTH_RATING4 = 0.06273062730627;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.06273062730627;
37343     +P_WEALTH_RATING5 = 0.04059040590405;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.04059040590405;
37344     +P_WEALTH_RATING7 = 0.02398523985239;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.02398523985239;
37345     +P_WEALTH_RATING2 = 0.14575645756457;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.14575645756457;
37346     +P_WEALTH_RATING1 = 0.25830258302583;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.25830258302583;
37347     +P_WEALTH_RATING3 = 0.09778597785977;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.09778597785977;
37348     +P_WEALTH_RATING6 = 0.03136531365313;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.03136531365313;
37349     +P_WEALTH_RATING9 = 0.00184501845018;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00184501845018;
37350     +P_WEALTH_RATING8 = 0.00922509225092;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.00922509225092;
37351     +P_WEALTH_RATING0 = 0.32841328413284;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.32841328413284;
37352     +Q_WEALTH_RATING4 = 0.06273062730627;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.06273062730627;
37353     +Q_WEALTH_RATING5 = 0.04059040590405;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.04059040590405;
37354     +Q_WEALTH_RATING7 = 0.02398523985239;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.02398523985239;
37355     +Q_WEALTH_RATING2 = 0.14575645756457;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.14575645756457;
37356     +Q_WEALTH_RATING1 = 0.25830258302583;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.25830258302583;
37357     +Q_WEALTH_RATING3 = 0.09778597785977;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.09778597785977;
37358     +Q_WEALTH_RATING6 = 0.03136531365313;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.03136531365313;
37359     +Q_WEALTH_RATING9 = 0.00184501845018;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00184501845018;
37360     +Q_WEALTH_RATING8 = 0.00922509225092;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.00922509225092;
37361     +Q_WEALTH_RATING0 = 0.32841328413284;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.32841328413284;
37362     +I_WEALTH_RATING = '0';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '0';
37363     +U_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 0;
37364     +END;
MPRINT(EM_DIAGRAM):   END;
37365     +END;
MPRINT(EM_DIAGRAM):   END;
37366     +END;
MPRINT(EM_DIAGRAM):   END;
37367     +END;
MPRINT(EM_DIAGRAM):   END;
37368     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37369     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37370     +IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
37371     +MEDIAN_HOUSEHOLD_INCOME < 236.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND MEDIAN_HOUSEHOLD_INCOME < 236.5 THEN DO;
37372     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37373     +END;
MPRINT(EM_DIAGRAM):   END;
37374     +ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND
37375     +236.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) AND 236.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
37376     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37377     +END;
MPRINT(EM_DIAGRAM):   END;
37378     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
37379     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37380     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37381     +IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' ,
37382     +'18' ,'36' ,'48' ,'31' ,'46' ,'51' ,'25' ,'33' ,'38' ,'53' ,'40' ,
37383     +'32' ,'47' ,'10' ,'52' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('04' ,'50' ,'43' ,'45' ,'.' ,'30' ,'41' ,'37' , '18' ,'36' ,'48' ,'31' ,'46' ,'51' ,'25' ,'33' ,'38' ,'53' ,'40' , '32' ,'47' ,'10' ,'52' ) THEN DO;
37384     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37385     +END;
MPRINT(EM_DIAGRAM):   END;
37386     +ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'08' ,'19' ,'27' ,
37387     +'26' ,'28' ,'21' ,'44' ,'17' ,'39' ,'09' ,'29' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'20' ,'16' ,'07' ,'08' ,'19' ,'27' , '26' ,'28' ,'21' ,'44' ,'17' ,'39' ,'09' ,'29' ) THEN DO;
37388     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37389     +END;
MPRINT(EM_DIAGRAM):   END;
37390     +END;
MPRINT(EM_DIAGRAM):   END;
37391     +IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(PER_CAPITA_INCOME ) THEN DO;
37392     +IF PER_CAPITA_INCOME < 11155.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF PER_CAPITA_INCOME < 11155.5 THEN DO;
37393     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37394     +END;
MPRINT(EM_DIAGRAM):   END;
37395     +ELSE IF 11155.5 <= PER_CAPITA_INCOME THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 11155.5 <= PER_CAPITA_INCOME THEN DO;
37396     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37397     +END;
MPRINT(EM_DIAGRAM):   END;
37398     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37399     +END;
MPRINT(EM_DIAGRAM):   END;
37400     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
37401     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
37402     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37403     +_ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
37404     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37405     +IF _ARBFMT_4 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('3' ,'4' ) THEN DO;
37406     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37407     +END;
MPRINT(EM_DIAGRAM):   END;
37408     +ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('2' ) THEN DO;
37409     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37410     +END;
MPRINT(EM_DIAGRAM):   END;
37411     +IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
37412     +_ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
37413     +%DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37414     +IF _ARBFMT_2 IN ('30' ,'41' ,'08' ,'21' ,'51' ,'09' ,'10' ) THEN
37415     +DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('30' ,'41' ,'08' ,'21' ,'51' ,'09' ,'10' ) THEN DO;
37416     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37417     +END;
MPRINT(EM_DIAGRAM):   END;
37418     +ELSE IF _ARBFMT_2 IN ('49' ,'43' ,'45' ,'20' ,'16' ,'07' ,'37' ,
37419     +'36' ,'48' ,'27' ,'46' ,'26' ,'28' ,'44' ,'17' ,'39' ,'25' ,'38' ,
37420     +'29' ,'40' ,'47' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('49' ,'43' ,'45' ,'20' ,'16' ,'07' ,'37' , '36' ,'48' ,'27' ,'46' ,'26' ,'28' ,'44' ,'17' ,'39' ,'25' ,'38' , '29' ,'40' ,'47' ) THEN DO;
37421     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37422     +END;
MPRINT(EM_DIAGRAM):   END;
37423     +END;
MPRINT(EM_DIAGRAM):   END;
37424     +IF _BRANCH_ LT 0 AND NOT MISSING(REP_URBANICITY ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_URBANICITY ) THEN DO;
37425     +_ARBFMT_4 = PUT( REP_URBANICITY , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_URBANICITY , $4.);
37426     +%DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37427     +IF _ARBFMT_4 IN ('U' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('U' ) THEN DO;
37428     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37429     +END;
MPRINT(EM_DIAGRAM):   END;
37430     +ELSE IF _ARBFMT_4 IN ('R' ,'S' ,'C' ,'T' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('R' ,'S' ,'C' ,'T' ) THEN DO;
37431     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37432     +END;
MPRINT(EM_DIAGRAM):   END;
37433     +END;
MPRINT(EM_DIAGRAM):   END;
37434     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
37435     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
37436     +P_WEALTH_RATING4 = 0.20537897310513;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.20537897310513;
37437     +P_WEALTH_RATING5 = 0.17359413202933;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.17359413202933;
37438     +P_WEALTH_RATING7 = 0.06356968215158;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.06356968215158;
37439     +P_WEALTH_RATING2 = 0.14180929095354;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.14180929095354;
37440     +P_WEALTH_RATING1 = 0.07579462102689;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.07579462102689;
37441     +P_WEALTH_RATING3 = 0.1760391198044;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.1760391198044;
37442     +P_WEALTH_RATING6 = 0.09046454767726;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.09046454767726;
37443     +P_WEALTH_RATING9 = 0.00244498777506;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00244498777506;
37444     +P_WEALTH_RATING8 = 0.02689486552567;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.02689486552567;
37445     +P_WEALTH_RATING0 = 0.0440097799511;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.0440097799511;
37446     +Q_WEALTH_RATING4 = 0.20537897310513;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.20537897310513;
37447     +Q_WEALTH_RATING5 = 0.17359413202933;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.17359413202933;
37448     +Q_WEALTH_RATING7 = 0.06356968215158;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.06356968215158;
37449     +Q_WEALTH_RATING2 = 0.14180929095354;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.14180929095354;
37450     +Q_WEALTH_RATING1 = 0.07579462102689;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.07579462102689;
37451     +Q_WEALTH_RATING3 = 0.1760391198044;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.1760391198044;
37452     +Q_WEALTH_RATING6 = 0.09046454767726;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.09046454767726;
37453     +Q_WEALTH_RATING9 = 0.00244498777506;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00244498777506;
37454     +Q_WEALTH_RATING8 = 0.02689486552567;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.02689486552567;
37455     +Q_WEALTH_RATING0 = 0.0440097799511;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.0440097799511;
37456     +I_WEALTH_RATING = '4';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '4';
37457     +U_WEALTH_RATING = 4;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 4;
37458     +END;
MPRINT(EM_DIAGRAM):   END;
37459     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37460     +P_WEALTH_RATING4 = 0.1;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.1;
37461     +P_WEALTH_RATING5 = 0.09333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.09333333333333;
37462     +P_WEALTH_RATING7 = 0.04;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.04;
37463     +P_WEALTH_RATING2 = 0.21333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.21333333333333;
37464     +P_WEALTH_RATING1 = 0.17333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.17333333333333;
37465     +P_WEALTH_RATING3 = 0.23333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.23333333333333;
37466     +P_WEALTH_RATING6 = 0.04666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.04666666666666;
37467     +P_WEALTH_RATING9 = 0.02;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.02;
37468     +P_WEALTH_RATING8 = 0.00666666666666;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.00666666666666;
37469     +P_WEALTH_RATING0 = 0.07333333333333;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.07333333333333;
37470     +Q_WEALTH_RATING4 = 0.1;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.1;
37471     +Q_WEALTH_RATING5 = 0.09333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.09333333333333;
37472     +Q_WEALTH_RATING7 = 0.04;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.04;
37473     +Q_WEALTH_RATING2 = 0.21333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.21333333333333;
37474     +Q_WEALTH_RATING1 = 0.17333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.17333333333333;
37475     +Q_WEALTH_RATING3 = 0.23333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.23333333333333;
37476     +Q_WEALTH_RATING6 = 0.04666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.04666666666666;
37477     +Q_WEALTH_RATING9 = 0.02;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.02;
37478     +Q_WEALTH_RATING8 = 0.00666666666666;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.00666666666666;
37479     +Q_WEALTH_RATING0 = 0.07333333333333;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.07333333333333;
37480     +I_WEALTH_RATING = '3';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '3';
37481     +U_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 3;
37482     +END;
MPRINT(EM_DIAGRAM):   END;
37483     +END;
MPRINT(EM_DIAGRAM):   END;
37484     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37485     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
37486     +IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND
37487     +LIFETIME_MIN_GIFT_AMT < 19 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND LIFETIME_MIN_GIFT_AMT < 19 THEN DO;
37488     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37489     +END;
MPRINT(EM_DIAGRAM):   END;
37490     +ELSE IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND
37491     +19 <= LIFETIME_MIN_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(LIFETIME_MIN_GIFT_AMT ) AND 19 <= LIFETIME_MIN_GIFT_AMT THEN DO;
37492     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37493     +END;
MPRINT(EM_DIAGRAM):   END;
37494     +IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_AVG_GIFT ) THEN DO;
37495     +IF FILE_AVG_GIFT < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF FILE_AVG_GIFT < 30.5 THEN DO;
37496     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37497     +END;
MPRINT(EM_DIAGRAM):   END;
37498     +ELSE IF 30.5 <= FILE_AVG_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= FILE_AVG_GIFT THEN DO;
37499     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37500     +END;
MPRINT(EM_DIAGRAM):   END;
37501     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37502     +END;
MPRINT(EM_DIAGRAM):   END;
37503     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
37504     +IF LIFETIME_AVG_GIFT_AMT < 30.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 30.5 THEN DO;
37505     +_BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
37506     +END;
MPRINT(EM_DIAGRAM):   END;
37507     +ELSE IF 30.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 30.5 <= LIFETIME_AVG_GIFT_AMT THEN DO;
37508     +_BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
37509     +END;
MPRINT(EM_DIAGRAM):   END;
37510     +ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
37511     +END;
MPRINT(EM_DIAGRAM):   END;
37512     +IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
37513     +IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
37514     +P_WEALTH_RATING4 = 0.125;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.125;
37515     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
37516     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
37517     +P_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0;
37518     +P_WEALTH_RATING1 = 0.375;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.375;
37519     +P_WEALTH_RATING3 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.25;
37520     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
37521     +P_WEALTH_RATING9 = 0.25;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.25;
37522     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
37523     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
37524     +Q_WEALTH_RATING4 = 0.125;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.125;
37525     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
37526     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
37527     +Q_WEALTH_RATING2 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0;
37528     +Q_WEALTH_RATING1 = 0.375;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.375;
37529     +Q_WEALTH_RATING3 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.25;
37530     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
37531     +Q_WEALTH_RATING9 = 0.25;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.25;
37532     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
37533     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
37534     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
37535     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
37536     +END;
MPRINT(EM_DIAGRAM):   END;
37537     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37538     +IF NOT MISSING(PCT_ATTRIBUTE3 ) AND
37539     +61.5 <= PCT_ATTRIBUTE3 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE3 ) AND 61.5 <= PCT_ATTRIBUTE3 THEN DO;
37540     +P_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0;
37541     +P_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0;
37542     +P_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0;
37543     +P_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.2;
37544     +P_WEALTH_RATING1 = 0.4;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.4;
37545     +P_WEALTH_RATING3 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.2;
37546     +P_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0;
37547     +P_WEALTH_RATING9 = 0.2;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.2;
37548     +P_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0;
37549     +P_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0;
37550     +Q_WEALTH_RATING4 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0;
37551     +Q_WEALTH_RATING5 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0;
37552     +Q_WEALTH_RATING7 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0;
37553     +Q_WEALTH_RATING2 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.2;
37554     +Q_WEALTH_RATING1 = 0.4;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.4;
37555     +Q_WEALTH_RATING3 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.2;
37556     +Q_WEALTH_RATING6 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0;
37557     +Q_WEALTH_RATING9 = 0.2;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.2;
37558     +Q_WEALTH_RATING8 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0;
37559     +Q_WEALTH_RATING0 = 0;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0;
37560     +I_WEALTH_RATING = '1';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '1';
37561     +U_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 1;
37562     +END;
MPRINT(EM_DIAGRAM):   END;
37563     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37564     +P_WEALTH_RATING4 = 0.11469534050179;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING4 = 0.11469534050179;
37565     +P_WEALTH_RATING5 = 0.07048984468339;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING5 = 0.07048984468339;
37566     +P_WEALTH_RATING7 = 0.02986857825567;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING7 = 0.02986857825567;
37567     +P_WEALTH_RATING2 = 0.24731182795698;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING2 = 0.24731182795698;
37568     +P_WEALTH_RATING1 = 0.22341696535244;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING1 = 0.22341696535244;
37569     +P_WEALTH_RATING3 = 0.16009557945041;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING3 = 0.16009557945041;
37570     +P_WEALTH_RATING6 = 0.04659498207885;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING6 = 0.04659498207885;
37571     +P_WEALTH_RATING9 = 0.00358422939068;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING9 = 0.00358422939068;
37572     +P_WEALTH_RATING8 = 0.0179211469534;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING8 = 0.0179211469534;
37573     +P_WEALTH_RATING0 = 0.08602150537634;
MPRINT(EM_DIAGRAM):   P_WEALTH_RATING0 = 0.08602150537634;
37574     +Q_WEALTH_RATING4 = 0.11469534050179;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING4 = 0.11469534050179;
37575     +Q_WEALTH_RATING5 = 0.07048984468339;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING5 = 0.07048984468339;
37576     +Q_WEALTH_RATING7 = 0.02986857825567;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING7 = 0.02986857825567;
37577     +Q_WEALTH_RATING2 = 0.24731182795698;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING2 = 0.24731182795698;
37578     +Q_WEALTH_RATING1 = 0.22341696535244;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING1 = 0.22341696535244;
37579     +Q_WEALTH_RATING3 = 0.16009557945041;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING3 = 0.16009557945041;
37580     +Q_WEALTH_RATING6 = 0.04659498207885;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING6 = 0.04659498207885;
37581     +Q_WEALTH_RATING9 = 0.00358422939068;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING9 = 0.00358422939068;
37582     +Q_WEALTH_RATING8 = 0.0179211469534;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING8 = 0.0179211469534;
37583     +Q_WEALTH_RATING0 = 0.08602150537634;
MPRINT(EM_DIAGRAM):   Q_WEALTH_RATING0 = 0.08602150537634;
37584     +I_WEALTH_RATING = '2';
MPRINT(EM_DIAGRAM):   I_WEALTH_RATING = '2';
37585     +U_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   U_WEALTH_RATING = 2;
37586     +END;
MPRINT(EM_DIAGRAM):   END;
37587     +END;
MPRINT(EM_DIAGRAM):   END;
37588     +END;
MPRINT(EM_DIAGRAM):   END;
37589     +END;
MPRINT(EM_DIAGRAM):   END;
37590     +END;
MPRINT(EM_DIAGRAM):   END;
37591     +END;
MPRINT(EM_DIAGRAM):   END;
37592     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37593     +****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
37594     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37595     +*;
MPRINT(EM_DIAGRAM):   *;
37596     +* ASSIGN VALUE TO: WEALTH_RATING;
MPRINT(EM_DIAGRAM):   * ASSIGN VALUE TO: WEALTH_RATING;
37597     +*;
MPRINT(EM_DIAGRAM):   *;
37598     +length _format200 $200;
MPRINT(EM_DIAGRAM):   length _format200 $200;
37599     +drop _format200;
MPRINT(EM_DIAGRAM):   drop _format200;
37600     +_format200 = strip(I_WEALTH_RATING);
MPRINT(EM_DIAGRAM):   _format200 = strip(I_WEALTH_RATING);
37601     +if _format200="9" then IMP_WEALTH_RATING = 9;
MPRINT(EM_DIAGRAM):   if _format200="9" then IMP_WEALTH_RATING = 9;
37602     +else
37603     +if _format200="8" then IMP_WEALTH_RATING = 8;
MPRINT(EM_DIAGRAM):   else if _format200="8" then IMP_WEALTH_RATING = 8;
37604     +else
37605     +if _format200="7" then IMP_WEALTH_RATING = 7;
MPRINT(EM_DIAGRAM):   else if _format200="7" then IMP_WEALTH_RATING = 7;
37606     +else
37607     +if _format200="6" then IMP_WEALTH_RATING = 6;
MPRINT(EM_DIAGRAM):   else if _format200="6" then IMP_WEALTH_RATING = 6;
37608     +else
37609     +if _format200="5" then IMP_WEALTH_RATING = 5;
MPRINT(EM_DIAGRAM):   else if _format200="5" then IMP_WEALTH_RATING = 5;
37610     +else
37611     +if _format200="4" then IMP_WEALTH_RATING = 4;
MPRINT(EM_DIAGRAM):   else if _format200="4" then IMP_WEALTH_RATING = 4;
37612     +else
37613     +if _format200="3" then IMP_WEALTH_RATING = 3;
MPRINT(EM_DIAGRAM):   else if _format200="3" then IMP_WEALTH_RATING = 3;
37614     +else
37615     +if _format200="2" then IMP_WEALTH_RATING = 2;
MPRINT(EM_DIAGRAM):   else if _format200="2" then IMP_WEALTH_RATING = 2;
37616     +else
37617     +if _format200="1" then IMP_WEALTH_RATING = 1;
MPRINT(EM_DIAGRAM):   else if _format200="1" then IMP_WEALTH_RATING = 1;
37618     +else
37619     +if _format200="0" then IMP_WEALTH_RATING = 0;
MPRINT(EM_DIAGRAM):   else if _format200="0" then IMP_WEALTH_RATING = 0;
37620     +END;
MPRINT(EM_DIAGRAM):   END;
37621     +*;
MPRINT(EM_DIAGRAM):   *;
37622     +* Drop prediction variables since they are for INPUTS not TARGETS;
MPRINT(EM_DIAGRAM):   * Drop prediction variables since they are for INPUTS not TARGETS;
37623     +* Replace _NODE_ by _XODE_ so it can be safely dropped;
MPRINT(EM_DIAGRAM):   * Replace _NODE_ by _XODE_ so it can be safely dropped;
37624     +*;
MPRINT(EM_DIAGRAM):   *;
37625     +drop
37626     +P_INCOME_GROUP7
37627     +P_INCOME_GROUP1
37628     +P_INCOME_GROUP3
37629     +P_INCOME_GROUP4
37630     +P_INCOME_GROUP5
37631     +P_INCOME_GROUP6
37632     +P_INCOME_GROUP2
37633     +I_INCOME_GROUP
37634     +U_INCOME_GROUP
37635     +Q_INCOME_GROUP7
37636     +Q_INCOME_GROUP1
37637     +Q_INCOME_GROUP3
37638     +Q_INCOME_GROUP4
37639     +Q_INCOME_GROUP5
37640     +Q_INCOME_GROUP6
37641     +Q_INCOME_GROUP2
37642     +P_REP_SES4
37643     +P_REP_SES1
37644     +P_REP_SES3
37645     +P_REP_SES2
37646     +I_REP_SES
37647     +U_REP_SES
37648     +Q_REP_SES4
37649     +Q_REP_SES1
37650     +Q_REP_SES3
37651     +Q_REP_SES2
37652     +P_REP_URBANICITYT
37653     +P_REP_URBANICITYC
37654     +P_REP_URBANICITYS
37655     +P_REP_URBANICITYR
37656     +P_REP_URBANICITYU
37657     +I_REP_URBANICITY
37658     +U_REP_URBANICITY
37659     +Q_REP_URBANICITYT
37660     +Q_REP_URBANICITYC
37661     +Q_REP_URBANICITYS
37662     +Q_REP_URBANICITYR
37663     +Q_REP_URBANICITYU
37664     +P_WEALTH_RATING0
37665     +P_WEALTH_RATING8
37666     +P_WEALTH_RATING9
37667     +P_WEALTH_RATING6
37668     +P_WEALTH_RATING3
37669     +P_WEALTH_RATING1
37670     +P_WEALTH_RATING2
37671     +P_WEALTH_RATING7
37672     +P_WEALTH_RATING5
37673     +P_WEALTH_RATING4
37674     +I_WEALTH_RATING
37675     +U_WEALTH_RATING
37676     +Q_WEALTH_RATING0
37677     +Q_WEALTH_RATING8
37678     +Q_WEALTH_RATING9
37679     +Q_WEALTH_RATING6
37680     +Q_WEALTH_RATING3
37681     +Q_WEALTH_RATING1
37682     +Q_WEALTH_RATING2
37683     +Q_WEALTH_RATING7
37684     +Q_WEALTH_RATING5
37685     +Q_WEALTH_RATING4
37686     +;
MPRINT(EM_DIAGRAM):   drop P_INCOME_GROUP7 P_INCOME_GROUP1 P_INCOME_GROUP3 P_INCOME_GROUP4 P_INCOME_GROUP5 P_INCOME_GROUP6 P_INCOME_GROUP2 I_INCOME_GROUP U_INCOME_GROUP Q_INCOME_GROUP7 Q_INCOME_GROUP1 Q_INCOME_GROUP3 Q_INCOME_GROUP4 Q_INCOME_GROUP5
Q_INCOME_GROUP6 Q_INCOME_GROUP2 P_REP_SES4 P_REP_SES1 P_REP_SES3 P_REP_SES2 I_REP_SES U_REP_SES Q_REP_SES4 Q_REP_SES1 Q_REP_SES3 Q_REP_SES2 P_REP_URBANICITYT P_REP_URBANICITYC P_REP_URBANICITYS P_REP_URBANICITYR P_REP_URBANICITYU I_REP_URBANICITY
U_REP_URBANICITY Q_REP_URBANICITYT Q_REP_URBANICITYC Q_REP_URBANICITYS Q_REP_URBANICITYR Q_REP_URBANICITYU P_WEALTH_RATING0 P_WEALTH_RATING8 P_WEALTH_RATING9 P_WEALTH_RATING6 P_WEALTH_RATING3 P_WEALTH_RATING1 P_WEALTH_RATING2 P_WEALTH_RATING7
P_WEALTH_RATING5 P_WEALTH_RATING4 I_WEALTH_RATING U_WEALTH_RATING Q_WEALTH_RATING0 Q_WEALTH_RATING8 Q_WEALTH_RATING9 Q_WEALTH_RATING6 Q_WEALTH_RATING3 Q_WEALTH_RATING1 Q_WEALTH_RATING2 Q_WEALTH_RATING7 Q_WEALTH_RATING5 Q_WEALTH_RATING4 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
37687      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
 
 
37688      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
37689      quit;
37690      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
37691      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
37692      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
37693      retain ID 5 Node "Impt";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Impt";
37694      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
37695      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3623 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3623 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
37696      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
37697      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37698      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3623 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3623 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37699      proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
37700      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37701      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS1.REPL_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
37702      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37703      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
37704      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
37705      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37706      proc contents data=EMWS1.Impt_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Impt_train out=_meta(keep=NAME) noprint;
37707      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
37708      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
37709      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37710      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 61 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37711      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37712      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
37713      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37714      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 61 observations read from the data set WORK._META.
NOTE: There were 53 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 61 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37715      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
37716      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2842 rows and 5 columns.
 
37717      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
37718      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
37719      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 2842 observations read from the data set WORK._TEMPX.
NOTE: 2842 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 2935 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
37720      filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\EMPUBLISHSCORE.sas";
37721      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
37722      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
37723      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\EMPUBLISHSCORE.sas.
37724     +
37725     +* ;
MPRINT(EM_DIAGRAM):   * ;
37726     +* Defining New Variables;
MPRINT(EM_DIAGRAM):   * Defining New Variables;
37727     +* ;
MPRINT(EM_DIAGRAM):   * ;
37728     +Length REP_DONOR_GENDER $9;
MPRINT(EM_DIAGRAM):   Length REP_DONOR_GENDER $9;
37729     +Label REP_DONOR_GENDER='Replacement: DONOR_GENDER';
MPRINT(EM_DIAGRAM):   Label REP_DONOR_GENDER='Replacement: DONOR_GENDER';
37730     +REP_DONOR_GENDER= DONOR_GENDER;
MPRINT(EM_DIAGRAM):   REP_DONOR_GENDER= DONOR_GENDER;
37731     +Length REP_SES $4;
MPRINT(EM_DIAGRAM):   Length REP_SES $4;
37732     +Label REP_SES='Replacement: SES';
MPRINT(EM_DIAGRAM):   Label REP_SES='Replacement: SES';
37733     +REP_SES= SES;
MPRINT(EM_DIAGRAM):   REP_SES= SES;
37734     +Length REP_URBANICITY $4;
MPRINT(EM_DIAGRAM):   Length REP_URBANICITY $4;
37735     +Label REP_URBANICITY='Replacement: URBANICITY';
MPRINT(EM_DIAGRAM):   Label REP_URBANICITY='Replacement: URBANICITY';
37736     +REP_URBANICITY= URBANICITY;
MPRINT(EM_DIAGRAM):   REP_URBANICITY= URBANICITY;
37737     +
37738     +* ;
MPRINT(EM_DIAGRAM):   * ;
37739     +* Replace Specific Class Levels ;
MPRINT(EM_DIAGRAM):   * Replace Specific Class Levels ;
37740     +* ;
MPRINT(EM_DIAGRAM):   * ;
37741     +length _UFormat200 $200;
MPRINT(EM_DIAGRAM):   length _UFormat200 $200;
37742     +drop   _UFORMAT200;
MPRINT(EM_DIAGRAM):   drop _UFORMAT200;
37743     +_UFORMAT200 = " ";
MPRINT(EM_DIAGRAM):   _UFORMAT200 = " ";
37744     +* ;
MPRINT(EM_DIAGRAM):   * ;
37745     +* Variable: DONOR_GENDER;
MPRINT(EM_DIAGRAM):   * Variable: DONOR_GENDER;
37746     +* ;
MPRINT(EM_DIAGRAM):   * ;
37747     +_UFORMAT200 = strip(DONOR_GENDER);
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(DONOR_GENDER);
37748     +if _UFORMAT200 =  "A" then
37749     +REP_DONOR_GENDER="_UNKNOWN_";
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "A" then REP_DONOR_GENDER="_UNKNOWN_";
37750     +* ;
MPRINT(EM_DIAGRAM):   * ;
37751     +* Variable: SES;
MPRINT(EM_DIAGRAM):   * Variable: SES;
37752     +* ;
MPRINT(EM_DIAGRAM):   * ;
37753     +_UFORMAT200 = strip(SES);
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(SES);
37754     +if _UFORMAT200 =  "?" then
37755     +REP_SES="";
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "?" then REP_SES="";
37756     +* ;
MPRINT(EM_DIAGRAM):   * ;
37757     +* Variable: URBANICITY;
MPRINT(EM_DIAGRAM):   * Variable: URBANICITY;
37758     +* ;
MPRINT(EM_DIAGRAM):   * ;
37759     +_UFORMAT200 = strip(URBANICITY);
MPRINT(EM_DIAGRAM):   _UFORMAT200 = strip(URBANICITY);
37760     +if _UFORMAT200 =  "?" then
37761     +REP_URBANICITY="";
MPRINT(EM_DIAGRAM):   if _UFORMAT200 = "?" then REP_URBANICITY="";
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
37762      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
37763      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
37764      quit;
37765      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
37766      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
37767      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
37768      retain ID 6 Node "Repl";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "Repl";
37769      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
37770      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37771      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
37772      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37773      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37774      proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
37775      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37776      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS1.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 50 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
37777      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37778      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
37779      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
37780      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 50 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
37781      proc contents data=EMWS1.Repl_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Repl_train out=_meta(keep=NAME) noprint;
37782      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
37783      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
37784      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37785      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
37786      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
37787      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
37788      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
37789      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
37790      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
37791      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 12 rows and 5 columns.
 
37792      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
37793      proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
37794      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 12 observations read from the data set WORK._TEMPX.
NOTE: 12 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 2947 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
37795      %macro varDept(fcmpdata=,id=);
37796      %global nobs&id scoreFlag&id;
37797      %let scoreFlag&id = 0;
37798      %if &id=1 or ^&fcmpStart %then %do;
37799      proc sort data=&fcmpdata out=_temp&id nodupkey;
37800      by NAME;
37801      %if EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY ne %then %do;
37802      where id=&id and (LHS in( %let j=1;
37803      %do %while(%scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j) ne );
37804      %let var = %scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j);
37805      "&var" %let j = %eval(&j+1);
37806      %end;
37807      ) or substr(LHS, 1, 3)='EM_');
37808      %end;
37809      %else %do;
37810      where id=&id and substr(LHS, 1, 3)='EM_';
37811      %end;
37812      run;
37813      %let dsid = %sysfunc(open(_temp&id));
37814      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37815      %let dsid = %sysfunc(close(&dsid));
37816      %if &&nobs&id %then %do;
37817      %let scoreFlag&id = 1;
37818      %let fcmpStart = 1;
37819      %end;
37820      %else %let fcmpStart = 0;
37821      %end;
37822      %else %do;
37823      proc sort data=&fcmpdata out=_tempid;
37824      where id=&id;
37825      by LHS;
37826      run;
37827      %let dsid = %sysfunc(open(_tempid));
37828      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37829      %let dsid = %sysfunc(close(&dsid));
37830      %if ^&&nobs&id %then %do;
37831      proc datasets lib=work nolist;
37832      delete _tempid;
37833      run;
37834      quit;
37835      %end;
37836      %else %do;
37837      data _tempAll;
37838      set %let j=%eval(&id-1);
37839      %do x=1 %to &j;
37840      %if &&nobs&x %then %do;
37841      _temp&x %end;
37842      %end;
37843      ;
37844      run;
37845      proc sql;
37846      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
37847      quit;
37848      data _temp&id;
37849      set _temp&id;
37850      where LHS ne '' and NAME ne '' and Node ne '';
37851      run;
37852      proc datasets lib=work nolist;
37853      delete _tempAll;
37854      run;
37855      %let dsid = %sysfunc(open(_temp&id));
37856      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37857      %let dsid = %sysfunc(close(&dsid));
37858      %if ^&&nobs&id %then %do;
37859      proc datasets lib=work nolist;
37860      delete _temp&id;
37861      run;
37862      quit;
37863      %end;
37864      %else %do;
37865      %let scoreFlag&id = 1;
37866      data _temp&id;
37867      set _temp&id;
37868      where LHS ne NAME and node ne '';
37869      run;
37870      %let dsid = %sysfunc(open(_temp&id));
37871      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
37872      %let dsid = %sysfunc(close(&dsid));
37873      %if ^&&nobs&id %then %do;
37874      proc datasets lib=work nolist;
37875      delete _temp&id;
37876      run;
37877      quit;
37878      %end;
37879      %else %do;
37880      proc sort data=_temp&id nodupkey;
37881      by LHS NAME;
37882      run;
37883      %end;
37884      %end;
37885      %end;
37886      %end;
37887      %mend varDept;
37888      %macro optCode(outdata=);
37889      %global fcmpStart;
37890      %let fcmpStart = 0;
37891      %let outputVars = EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY;
37892      %let NumNodes=9;
37893      %do k=1 %to &NumNodes;
37894      %vardept(fcmpdata=&outdata, id=&k);
37895      %end;
37896      %mend optCode;
37897      %optcode(outData=EMWS1.Score_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_CLASSIFICATION" "EM_PROBABILITY" "EM_EVENTPROBABILITY" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE (id=1) and (LHS in ('EM_CLASSIFICATION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp2 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 74 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 19 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 19 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 19 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP3.
NOTE: 3 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 16 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: There were 16 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp4 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP4 created, with 5 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP4 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP4 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp4 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP4.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP4 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2842 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 2842 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 _temp4 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: There were 16 observations read from the data set WORK._TEMP3.
NOTE: There were 1 observations read from the data set WORK._TEMP4.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 _temp4 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: There were 16 observations read from the data set WORK._TEMP3.
NOTE: There were 1 observations read from the data set WORK._TEMP4.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
37898      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
37899      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
37900      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
37901      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
37902      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
37903      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
37904      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
37905      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
37906      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
37907      create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._CODEVAR6 created, with 1 rows and 3 columns.
 
37908      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
37909      data _CodeVar6;
MPRINT(EM_DIAGRAM):   data _CodeVar6;
37910      set _all_ _CodeVar6 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar6 _postall_;
37911      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR6.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR6 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.1;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M3P062415;
MPRINT(EM_DIAGRAM):   * Host: COB-MBA045;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: J:\JMMORR01\CIS 445\Tutorial 1;
MPRINT(EM_DIAGRAM):   * Project Name: Charity;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Donations;
MPRINT(EM_DIAGRAM):   * Generated by: jmmorr01;
MPRINT(EM_DIAGRAM):   * Date: 20OCT2018:16:48:17;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Repl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Imputation;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Impt;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOME_VALUE $36;
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE < 676.5) then OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE >= 676.5) then OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_TARGET_B $ 12;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   if missing( FREQUENCY_STATUS_97NK ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   drop _11_0 ;
MPRINT(EM_DIAGRAM):   if missing( OPT_MEDIAN_HOME_VALUE ) then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_MEDIAN_HOME_VALUE,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = '02:676.5-HIGH, MISSING' then do;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-676.5' then do;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PEP_STAR ;
MPRINT(EM_DIAGRAM):   drop _17_0 ;
MPRINT(EM_DIAGRAM):   if missing( PEP_STAR ) then do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PEP_STAR , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.2500469307;
MPRINT(EM_DIAGRAM):   _P1 = 0.7499530693;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.3556861257867) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13171370881188) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16318592168351) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14135126079011) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   *** Effect: PEP_STAR ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17905481873096) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   _TEMP = -1.03523114674562 + _LP0;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   REGDR1: *** Update Posterior Probabilities;
MPRINT(EM_DIAGRAM):   _P0 = _P0 * 0.05 / 0.25004693073024;
MPRINT(EM_DIAGRAM):   _P1 = _P1 * 0.95 / 0.74995306926975;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 + _P1 ;
MPRINT(EM_DIAGRAM):   if _sum > 4.135903E-25 then do;
MPRINT(EM_DIAGRAM):   _P0 = _P0 / _sum;
MPRINT(EM_DIAGRAM):   _P1 = _P1 / _sum;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 * 0 + _P1 * 0;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_TARGET_B = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_TARGET_B = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop _temp_;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   LENGTH EM_DECISION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_DECISION= "Recommended Decision for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_DECISION = D_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_PROFIT= "Expected Profit for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_PROFIT = EP_TARGET_B;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
38274      %let validvarany = 0;
38275      data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
38276      set EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS1.Score_EMINPUTVARS;
38277      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
38278      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
38279      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 50 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
38280      proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
38281      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
38282      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 50 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
38283      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
38284      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
38285      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
38286      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
38287      length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
38288      label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
38289      SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
38290      if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
38291      else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
38292      if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
38293      if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
38294      call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
38295      end;
MPRINT(EM_DIAGRAM):   end;
38296      output;
MPRINT(EM_DIAGRAM):   output;
38297      end;
MPRINT(EM_DIAGRAM):   end;
38298      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._TEMP2.
NOTE: There were 32 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38299      proc sort data=_temp2 out=EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS1.Score_EMINPUTVARS;
38300      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38301      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=DONOR.DONOR_RAW_DATA noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD9868_COB-MBA045_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD9868_COB-MBA045_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('DONOR.DONOR_RAW_DATA');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set DONOR.DONOR_RAW_DATA;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.1;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M3P062415;
MPRINT(EM_DIAGRAM):   * Host: COB-MBA045;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: J:\JMMORR01\CIS 445\Tutorial 1;
MPRINT(EM_DIAGRAM):   * Project Name: Charity;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Donations;
MPRINT(EM_DIAGRAM):   * Generated by: jmmorr01;
MPRINT(EM_DIAGRAM):   * Date: 20OCT2018:16:48:17;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Repl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Imputation;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Impt;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_MEDIAN_HOME_VALUE = 'Transformed MEDIAN_HOME_VALUE';
MPRINT(EM_DIAGRAM):   length OPT_MEDIAN_HOME_VALUE $36;
MPRINT(EM_DIAGRAM):   if (MEDIAN_HOME_VALUE eq .) then OPT_MEDIAN_HOME_VALUE="02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE < 676.5) then OPT_MEDIAN_HOME_VALUE = "01:low-676.5";
MPRINT(EM_DIAGRAM):   else if (MEDIAN_HOME_VALUE >= 676.5) then OPT_MEDIAN_HOME_VALUE = "02:676.5-high, MISSING";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_TARGET_B $ 12;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   if missing( FREQUENCY_STATUS_97NK ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( FREQUENCY_STATUS_97NK , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   drop _11_0 ;
MPRINT(EM_DIAGRAM):   if missing( OPT_MEDIAN_HOME_VALUE ) then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_MEDIAN_HOME_VALUE,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = '02:676.5-HIGH, MISSING' then do;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-676.5' then do;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PEP_STAR ;
MPRINT(EM_DIAGRAM):   drop _17_0 ;
MPRINT(EM_DIAGRAM):   if missing( PEP_STAR ) then do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PEP_STAR , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.2500469307;
MPRINT(EM_DIAGRAM):   _P1 = 0.7499530693;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: FREQUENCY_STATUS_97NK ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.3556861257867) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13171370881188) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16318592168351) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_MEDIAN_HOME_VALUE ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14135126079011) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   *** Effect: PEP_STAR ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17905481873096) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   _TEMP = -1.03523114674562 + _LP0;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   REGDR1: *** Update Posterior Probabilities;
MPRINT(EM_DIAGRAM):   _P0 = _P0 * 0.05 / 0.25004693073024;
MPRINT(EM_DIAGRAM):   _P1 = _P1 * 0.95 / 0.74995306926975;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 + _P1 ;
MPRINT(EM_DIAGRAM):   if _sum > 4.135903E-25 then do;
MPRINT(EM_DIAGRAM):   _P0 = _P0 / _sum;
MPRINT(EM_DIAGRAM):   _P1 = _P1 / _sum;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _P0 * 14.5 + _P1 * -0.5;
MPRINT(EM_DIAGRAM):   drop _sum;
MPRINT(EM_DIAGRAM):   _sum = _P0 * 0 + _P1 * 0;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_TARGET_B = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_TARGET_B = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop _temp_;
MPRINT(EM_DIAGRAM):   if (P_TARGET_B1 ge 0.09650392136737) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.08334701982093) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.07450995410575) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06413874301704) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.06341049257326) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05975847538898) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 6;
MPRINT(EM_DIAGRAM):   end;
The SAS System
 
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.05133961631106) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04855344944745) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.04518616684771) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(10 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03919242423951) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.0364494773849) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(13 + 4*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_TARGET_B1 ge 0.03444205040038) then do;
MPRINT(EM_DIAGRAM):   b_TARGET_B = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_TARGET_B = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of TARGET_B';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_TARGET_B1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_TARGET_B1 , P_TARGET_B0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_TARGET_B;
MPRINT(EM_DIAGRAM):   LENGTH EM_DECISION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_DECISION= "Recommended Decision for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_DECISION = D_TARGET_B;
MPRINT(EM_DIAGRAM):   LABEL EM_PROFIT= "Expected Profit for TARGET_B";
MPRINT(EM_DIAGRAM):   EM_PROFIT = EP_TARGET_B;
MPRINT(EM_DIAGRAM):   drop 'CARD_PROM_12'n 'CLUSTER_CODE'n 'CONTROL_NUMBER'n 'DONOR_AGE'n 'DONOR_GENDER'n 'FILE_AVG_GIFT'n 'FILE_CARD_GIFT'n 'FREQUENCY_STATUS_97NK'n 'HOME_OWNER'n 'INCOME_GROUP'n 'IN_HOUSE'n 'LAST_GIFT_AMT'n 'LIFETIME_AVG_GIFT_AMT'n
'LIFETIME_CARD_PROM'n 'LIFETIME_GIFT_AMOUNT'n 'LIFETIME_GIFT_COUNT'n 'LIFETIME_GIFT_RANGE'n 'LIFETIME_MAX_GIFT_AMT'n 'LIFETIME_MIN_GIFT_AMT'n 'LIFETIME_PROM'n 'MEDIAN_HOME_VALUE'n 'MEDIAN_HOUSEHOLD_INCOME'n 'MONTHS_SINCE_FIRST_GIFT'n
'MONTHS_SINCE_LAST_GIFT'n 'MONTHS_SINCE_LAST_PROM_RESP'n 'MONTHS_SINCE_ORIGIN'n 'MOR_HIT_RATE'n 'NUMBER_PROM_12'n 'OVERLAY_SOURCE'n 'PCT_ATTRIBUTE1'n 'PCT_ATTRIBUTE2'n 'PCT_ATTRIBUTE3'n 'PCT_ATTRIBUTE4'n 'PCT_OWNER_OCCUPIED'n 'PEP_STAR'n
'PER_CAPITA_INCOME'n 'PUBLISHED_PHONE'n 'RECENCY_STATUS_96NK'n 'RECENT_AVG_CARD_GIFT_AMT'n 'RECENT_AVG_GIFT_AMT'n 'RECENT_CARD_RESPONSE_COUNT'n 'RECENT_CARD_RESPONSE_PROP'n 'RECENT_RESPONSE_COUNT'n 'RECENT_RESPONSE_PROP'n 'RECENT_STAR_STATUS'n 'SES'n
'TARGET_B'n 'TARGET_D'n 'URBANICITY'n 'WEALTH_RATING'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS1.Score_EMOUTPUTVARS noprint out=EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
38750      data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS1.Score_EMOUTPUTVARS;
38751      set EMWS1.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS1.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
38752      length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
38753      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
38754      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
38755      drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
38756      if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
38757      else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
38758      else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
38759      else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
38760      else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
38761      ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
38762      else do;
MPRINT(EM_DIAGRAM):   else do;
38763      name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
38764      if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
38765      else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
38766      else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
38767      else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
38768      else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
38769      else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
38770      end;
MPRINT(EM_DIAGRAM):   end;
38771      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.04 seconds
 
 
38772      proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
38773      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38774      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK.META has 66 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
38775      proc sort data=EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score_EMOUTPUTVARS;
38776      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 15 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.01 seconds
 
 
38778      data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_EMOUTPUTVARS;
38779      merge WORK.META EMWS1.Score_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS1.Score_EMOUTPUTVARS(in=_a);
38780      label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
38781      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38782      if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
38783      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
38784      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set WORK.META.
NOTE: There were 15 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.03 seconds
 
 
38785      %let _cn = %sysfunc(getoption(CENTER));
38786      %let _nb = %sysfunc(getoption(NUMBER));
38787      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
38788      title;
MPRINT(EM_DIAGRAM):   title;
38789      proc print data=EMWS1.Score_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score_EMINPUTVARS noobs label;
38790      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
38791      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38792      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
38793      run;
 
NOTE: There were 4 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
38794      title10;
MPRINT(EM_DIAGRAM):   title10;
38795      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
38796      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
38797      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38798      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
38799      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
38800      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
38801      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38802      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
38803      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38804      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
38805      create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._CODEVAR6 created, with 1 rows and 3 columns.
 
38806      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
38807      data _CodeVar6;
MPRINT(EM_DIAGRAM):   data _CodeVar6;
38808      set _all_ _CodeVar6 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar6 _postall_;
38809      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR6.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR6 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38810      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
38811      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38812      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
38813      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
38814      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
38815      set EMWS1.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Trans_EMSCOREVAR;
38816      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
38817      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
38818      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
38819      create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar6 as select p.lhs, p2.formula, p2.file from _temp4 p, EMWS1.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._CODEVAR6 created, with 1 rows and 3 columns.
 
38820      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
38821      data _CodeVar6;
MPRINT(EM_DIAGRAM):   data _CodeVar6;
38822      set _all_ _CodeVar6 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar6 _postall_;
38823      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR6.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR6 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38824      %let _cn = %sysfunc(getoption(CENTER));
38825      %let _nb = %sysfunc(getoption(NUMBER));
38826      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
38827      title;
MPRINT(EM_DIAGRAM):   title;
38828      proc print data=EMWS1.Score_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score_EMOUTPUTVARS noobs label;
38829      var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
38830      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
38831         "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
38832      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38833      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
38834      run;
 
NOTE: There were 15 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
38835      title10;
MPRINT(EM_DIAGRAM):   title10;
38836      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
38837      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
38838      * Score: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for TRAIN data;
38839      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Score_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Score_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Score_TRAIN out=WORK.M3EPA03U noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3EPA03U;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3EPA03U(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3EPA03U;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3EPA03U;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NB61C4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NB61C4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NB61C4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1O152UI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NB61C4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NB61C4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NB61C4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NB61C4;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NB61C4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "D_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EP_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "I_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B0" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B1" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.15 seconds
 
NOTE: View EMWS1.SCORE_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
39191      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
39192      * Score: Computing metadata for SCORE data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for SCORE data;
39193      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for SCORE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Score_SCORE out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Score_SCORE');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Score_SCORE out=WORK.M1W4TKE8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1W4TKE8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1W4TKE8(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1W4TKE8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1W4TKE8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2RO93_H NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RO93_H;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RO93_H;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MUXQ2V(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RO93_H;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RO93_H;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RO93_H;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RO93_H;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RO93_H;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Ids2_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids2_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_CMeta_SCORE;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "D_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EP_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "I_TARGET_B" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B0" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_TARGET_B1" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 20, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:22" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                October 20, 2018
Time:                16:48:22
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2872S8S "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Score\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2872S8S new;
MPRINT(EM_DIAGRAM):   run;
39568      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
39569      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
39570      NAME="D_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="D_TARGET_B";
39571      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39572      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39573      TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
39574      output;
MPRINT(EM_DIAGRAM):   output;
39575      NAME="I_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="I_TARGET_B";
39576      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39577      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39578      TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
39579      output;
MPRINT(EM_DIAGRAM):   output;
39580      NAME="b_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="b_TARGET_B";
39581      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39582      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39583      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39584      output;
MPRINT(EM_DIAGRAM):   output;
39585      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
39586      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
39587      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
39588      NAME="P_TARGET_B1";
MPRINT(EM_DIAGRAM):   NAME="P_TARGET_B1";
39589      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39590      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39591      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39592      output;
MPRINT(EM_DIAGRAM):   output;
39593      NAME="P_TARGET_B0";
MPRINT(EM_DIAGRAM):   NAME="P_TARGET_B0";
39594      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39595      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39596      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39597      output;
MPRINT(EM_DIAGRAM):   output;
39598      NAME="EP_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="EP_TARGET_B";
39599      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39600      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39601      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39602      output;
MPRINT(EM_DIAGRAM):   output;
39603      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
39604      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
39605      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
39606      proc freq data = EMWS1.MdlComp_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.MdlComp_TRAIN order=formatted addnames;
39607      table D_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table D_TARGET_B / missing;
39608      table I_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table I_TARGET_B / missing;
39609      table b_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table b_TARGET_B / missing;
39610      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.21 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.REG_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 23 observations and 12 variables.
NOTE: There were 10654 observations read from the data set EMWS1.MDLCOMP_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.32 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
39611      quit;
39612      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
39613      data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
39614      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
39615         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
39616      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
39617      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
39618      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
39619      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
39620      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
39621      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
39622      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
39623      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
39624      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
39625      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
39626      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
39627      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
39628      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
39629      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
39630      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
39631      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
39632      output;
MPRINT(EM_DIAGRAM):   output;
39633      end;
MPRINT(EM_DIAGRAM):   end;
39634      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
39635      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE_BAR has 23 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
39636      proc sort data=WORK.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score_BAR NOTHREADS;
39637      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
39638      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39639      proc sort data=WORK.M0GPOSJL;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M0GPOSJL;
39640      by Name;
MPRINT(EM_DIAGRAM):   by Name;
39641      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.M0GPOSJL.
NOTE: The data set WORK.M0GPOSJL has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
39642      data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score_BAR;
39643      merge WORK.Score_BAR(in=_a) WORK.M0GPOSJL(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score_BAR(in=_a) WORK.M0GPOSJL(keep=Name Role rename=(Name=_Variable_));
39644      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
39645      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
39646      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
39647      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: There were 3 observations read from the data set WORK.M0GPOSJL.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39648      data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR;
39649      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39650      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
39651      set WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score_BAR;
39652      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39653      proc append base=EMWS1.Score_BAR data=WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_BAR data=WORK.Score_BAR;
39654      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_BAR to EMWS1.SCORE_BAR.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set EMWS1.SCORE_BAR has 23 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
39655      %var_profile(DATA=EMWS1.MdlComp_TRAIN, OUTPUT=work.Score_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sat, Oct 20, 2018 04:48:23 PM,
      Last Modified=Sat, Oct 20, 2018 04:48:23 PM,
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD9868_COB-MBA045_\Prc2\macros.sas7bcat,
      Release Created=9.0401M3,Host Created=X64_8PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 35.
NOTE: There were 3 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
39656     +%macro _vars;
39657     +P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
39658     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.MdlComp_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10654   Memory used = 511K.
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.REG_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.MDLCOMP_TRAIN.
NOTE: The data set WORK._CLASSOUT has 48 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 48 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 3 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 3 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 48 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 48 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 48 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 3 observations and 17 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT16 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 3 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.MdlComp_TRAIN(keep
MPRINT(VAR_PROFILE):  =P_TARGET_B1 P_TARGET_B0 EP_TARGET_B obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=work.Score_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REG_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.29 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.MDLCOMP_TRAIN.
NOTE: There were 10654 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK.SCORE_SUMDATA has 15 observations and 4 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.35 seconds
      cpu time            0.31 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=work.Score_SUMDATA out=_bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BINDATA has 3 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_bindata;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 3 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   set _bindata;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 3 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   merge _bindata _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 3 observations read from the data set WORK._BINDATA.
NOTE: There were 3 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BINDATA has 3 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _bindata end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sat, Oct 20, 2018 04:48:25 PM,
      Last Modified=Sat, Oct 20, 2018 04:48:25 PM,
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD9868_COB-MBA045_\Prc2\em.sas7bcat,
      Release Created=9.0401M3,Host Created=X64_8PRO
 
NOTE: 59 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 29.
NOTE: There were 3 observations read from the data set WORK._BINDATA.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
39659     +proc format;
MPRINT(VAR_PROFILE):   proc format;
39660     +value F1_
39661     +0 ="0 "
39662     +0.016630756 ="0.016630756 "
39663     +0.0467421608 ="0.0467421608 "
39664     +0.0878863636 ="0.0878863636 "
39665     +0.1777925027 ="0.1777925027 "
39666     +0.1857299868 ="0.1857299868 "
39667     +0.2283017417 ="0.2283017417 "
39668     +0.2700942447 ="0.2700942447 "
39669     +0.2991561682 ="0.2991561682 "
39670     +0.3963771308 ="0.3963771308 "
39671     +0.4511573886 ="0.4511573886 "
39672     +0.4620811453 ="0.4620811453 "
39673     +0.5421096819 ="0.5421096819 "
39674     +0.6176493116 ="0.6176493116 "
39675     +0.7502052973 ="0.7502052973 "
39676     +0.9475588205 ="0.9475588205 "
39677     +;
MPRINT(VAR_PROFILE):   value F1_ 0 ="0 " 0.016630756 ="0.016630756 " 0.0467421608 ="0.0467421608 " 0.0878863636 ="0.0878863636 " 0.1777925027 ="0.1777925027 " 0.1857299868 ="0.1857299868 " 0.2283017417 ="0.2283017417 " 0.2700942447 ="0.2700942447 "
0.2991561682 ="0.2991561682 " 0.3963771308 ="0.3963771308 " 0.4511573886 ="0.4511573886 " 0.4620811453 ="0.4620811453 " 0.5421096819 ="0.5421096819 " 0.6176493116 ="0.6176493116 " 0.7502052973 ="0.7502052973 " 0.9475588205 ="0.9475588205 " ;
NOTE: Format F1_ has been output.
MPRINT(VAR_PROFILE):   ;
39678     +;
39679     +value F2_
39680     +0.9034960786 ="0.9034960786 "
39681     +0.9166529802 ="0.9166529802 "
39682     +0.9254900459 ="0.9254900459 "
39683     +0.9305260212 ="0.9305260212 "
39684     +0.935861257 ="0.935861257 "
39685     +0.9365895074 ="0.9365895074 "
39686     +0.9402415246 ="0.9402415246 "
39687     +0.9467229221 ="0.9467229221 "
39688     +0.9486603837 ="0.9486603837 "
39689     +0.9514465506 ="0.9514465506 "
39690     +0.9542846675 ="0.9542846675 "
39691     +0.9548138332 ="0.9548138332 "
39692     +0.9608075758 ="0.9608075758 "
39693     +0.9635505226 ="0.9635505226 "
39694     +0.9655579496 ="0.9655579496 "
39695     +0.9722775923 ="0.9722775923 "
39696     +;
MPRINT(VAR_PROFILE):   value F2_ 0.9034960786 ="0.9034960786 " 0.9166529802 ="0.9166529802 " 0.9254900459 ="0.9254900459 " 0.9305260212 ="0.9305260212 " 0.935861257 ="0.935861257 " 0.9365895074 ="0.9365895074 " 0.9402415246 ="0.9402415246 " 0.9467229221
="0.9467229221 " 0.9486603837 ="0.9486603837 " 0.9514465506 ="0.9514465506 " 0.9542846675 ="0.9542846675 " 0.9548138332 ="0.9548138332 " 0.9608075758 ="0.9608075758 " 0.9635505226 ="0.9635505226 " 0.9655579496 ="0.9655579496 " 0.9722775923 ="0.9722775923
" ;
NOTE: Format F2_ has been output.
MPRINT(VAR_PROFILE):   ;
39697     +;
39698     +value F3_
39699     +0.0277224077 ="0.0277224077 "
39700     +0.0344420504 ="0.0344420504 "
39701     +0.0364494774 ="0.0364494774 "
39702     +0.0391924242 ="0.0391924242 "
39703     +0.0451861668 ="0.0451861668 "
39704     +0.0457153325 ="0.0457153325 "
39705     +0.0485534494 ="0.0485534494 "
39706     +0.0513396163 ="0.0513396163 "
39707     +0.0532770779 ="0.0532770779 "
39708     +0.0597584754 ="0.0597584754 "
39709     +0.0634104926 ="0.0634104926 "
39710     +0.064138743 ="0.064138743 "
39711     +0.0694739788 ="0.0694739788 "
39712     +0.0745099541 ="0.0745099541 "
39713     +0.0833470198 ="0.0833470198 "
39714     +0.0965039214 ="0.0965039214 "
39715     +;
MPRINT(VAR_PROFILE):   value F3_ 0.0277224077 ="0.0277224077 " 0.0344420504 ="0.0344420504 " 0.0364494774 ="0.0364494774 " 0.0391924242 ="0.0391924242 " 0.0451861668 ="0.0451861668 " 0.0457153325 ="0.0457153325 " 0.0485534494 ="0.0485534494 " 0.0513396163
="0.0513396163 " 0.0532770779 ="0.0532770779 " 0.0597584754 ="0.0597584754 " 0.0634104926 ="0.0634104926 " 0.064138743 ="0.064138743 " 0.0694739788 ="0.0694739788 " 0.0745099541 ="0.0745099541 " 0.0833470198 ="0.0833470198 " 0.0965039214 ="0.0965039214 " ;
NOTE: Format F3_ has been output.
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
39716     +;
39717     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.MdlComp_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format EP_TARGET_B F1_. P_TARGET_B0 F2_. P_TARGET_B1 F3_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.20 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 10654   Memory used = 511K.
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REG_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
 
NOTE: There were 10654 observations read from the data set EMWS1.MDLCOMP_TRAIN.
NOTE: There were 10654 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 48 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.29 seconds
      cpu time            0.28 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE_VARHIST has 48 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
39718      data work.Score_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score_VARHIST;
39719      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39720      retain DATAROLE "TRAIN" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TYPE "";
39721      set work.Score_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score_VARHIST(rename=(VALUE=X));
39722      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_VARHIST has 48 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39723      proc append base=work.Score_HIST data=work.Score_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score_HIST data=work.Score_VARHIST;
39724      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_VARHIST to WORK.SCORE_HIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 48 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_HIST has 48 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39725      proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
39726      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
39727      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
39728      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE_SUMDATA has 3 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
39729      data work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score_SUMDATA;
39730      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39731      retain DATAROLE "TRAIN" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" Type "";
39732      set work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score_SUMDATA;
39733      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORE_SUMDATA has 3 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39734      proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
39735      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_SUMDATA to WORK.SCORESTAT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORESTAT has 3 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
39736      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
39737      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
39738      NAME="D_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="D_TARGET_B";
39739      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39740      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39741      TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
39742      output;
MPRINT(EM_DIAGRAM):   output;
39743      NAME="I_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="I_TARGET_B";
39744      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39745      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39746      TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
39747      output;
MPRINT(EM_DIAGRAM):   output;
39748      NAME="b_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="b_TARGET_B";
39749      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39750      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39751      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39752      output;
MPRINT(EM_DIAGRAM):   output;
39753      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39754      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
39755      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
39756      NAME="P_TARGET_B1";
MPRINT(EM_DIAGRAM):   NAME="P_TARGET_B1";
39757      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39758      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39759      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39760      output;
MPRINT(EM_DIAGRAM):   output;
39761      NAME="P_TARGET_B0";
MPRINT(EM_DIAGRAM):   NAME="P_TARGET_B0";
39762      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39763      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39764      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39765      output;
MPRINT(EM_DIAGRAM):   output;
39766      NAME="EP_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="EP_TARGET_B";
39767      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39768      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39769      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39770      output;
MPRINT(EM_DIAGRAM):   output;
39771      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
 
39772      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
39773      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
39774      proc freq data = EMWS1.MdlComp_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.MdlComp_VALIDATE order=formatted addnames;
39775      table D_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table D_TARGET_B / missing;
39776      table I_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table I_TARGET_B / missing;
39777      table b_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table b_TARGET_B / missing;
39778      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 8718 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.REPL_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.IMPT_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.TRANS_VALIDATE.
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.25 seconds
 
NOTE: There were 8718 observations read from the data set EMWS1.REG_VALIDATE.
NOTE: The data set WORK.TEMPFREQ has 23 observations and 12 variables.
NOTE: There were 8718 observations read from the data set EMWS1.MDLCOMP_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.31 seconds
      cpu time            0.28 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
39779      quit;
39780      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
39781      data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
39782      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
39783         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
39784      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
39785      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
39786      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
39787      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
39788      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
39789      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
39790      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
39791      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
39792      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
39793      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
39794      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
39795      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
39796      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
39797      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
39798      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
39799      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
39800      output;
MPRINT(EM_DIAGRAM):   output;
39801      end;
MPRINT(EM_DIAGRAM):   end;
39802      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
39803      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE_BAR has 23 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
39804      proc sort data=WORK.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score_BAR NOTHREADS;
39805      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
39806      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39807      proc sort data=WORK.M1WJJR3B;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1WJJR3B;
39808      by Name;
MPRINT(EM_DIAGRAM):   by Name;
39809      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.M1WJJR3B.
NOTE: The data set WORK.M1WJJR3B has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39810      data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score_BAR;
39811      merge WORK.Score_BAR(in=_a) WORK.M1WJJR3B(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score_BAR(in=_a) WORK.M1WJJR3B(keep=Name Role rename=(Name=_Variable_));
39812      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
39813      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
39814      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
39815      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: There were 3 observations read from the data set WORK.M1WJJR3B.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
39816      data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR;
39817      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39818      retain DATAROLE "VALIDATE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE";
39819      set WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score_BAR;
39820      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39821      proc append base=EMWS1.Score_BAR data=WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_BAR data=WORK.Score_BAR;
39822      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_BAR to EMWS1.SCORE_BAR.
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: 23 observations added.
NOTE: The data set EMWS1.SCORE_BAR has 46 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
39823      %var_profile(DATA=EMWS1.MdlComp_VALIDATE, OUTPUT=work.Score_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sat, Oct 20, 2018 04:48:23 PM,
      Last Modified=Sat, Oct 20, 2018 04:48:23 PM,
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD9868_COB-MBA045_\Prc2\macros.sas7bcat,
      Release Created=9.0401M3,Host Created=X64_8PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 35.
NOTE: There were 3 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
39824     +%macro _vars;
39825     +P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
39826     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.MdlComp_VALIDATE(obs=1000000);
MPRINT(VAR_PROFILE):   format EP_TARGET_B F1_. P_TARGET_B0 F2_. P_TARGET_B1 F3_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.20 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 8718   Memory used = 511K.
NOTE: There were 8718 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.REPL_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.IMPT_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.TRANS_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.REG_VALIDATE.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
 
NOTE: There were 8718 observations read from the data set EMWS1.MDLCOMP_VALIDATE.
NOTE: There were 8718 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 48 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.31 seconds
      cpu time            0.28 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE_VARHIST has 48 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
39827      data work.Score_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score_VARHIST;
39828      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39829      retain DATAROLE "VALIDATE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" TYPE "";
39830      set work.Score_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score_VARHIST(rename=(VALUE=X));
39831      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_VARHIST has 48 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39832      proc append base=work.Score_HIST data=work.Score_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score_HIST data=work.Score_VARHIST;
39833      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_VARHIST to WORK.SCORE_HIST.
NOTE: There were 48 observations read from the data set WORK.SCORE_VARHIST.
NOTE: 48 observations added.
NOTE: The data set WORK.SCORE_HIST has 96 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39834      proc stdize data=EMWS1.MdlComp_VALIDATE(obs=1000000) outstat=work.Score_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS1.MdlComp_VALIDATE(obs=1000000) outstat=work.Score_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
39835      var
39836      P_TARGET_B1
39837      P_TARGET_B0
39838      ;
MPRINT(EM_DIAGRAM):   var P_TARGET_B1 P_TARGET_B0 ;
39839      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 8718 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.REPL_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.IMPT_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.TRANS_VALIDATE.
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.25 seconds
 
NOTE: There were 8718 observations read from the data set EMWS1.REG_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.MDLCOMP_VALIDATE.
NOTE: The data set WORK.SCORE_SUMDATA has 15 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.31 seconds
      cpu time            0.28 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
39840      quit;
 
39841      proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
39842      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
39843      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
39844      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
39845      data work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score_SUMDATA;
39846      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39847      retain DATAROLE "VALIDATE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" Type "";
39848      set work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score_SUMDATA;
39849      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39850      proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
39851      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_SUMDATA to WORK.SCORESTAT.
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: 2 observations added.
NOTE: The data set WORK.SCORESTAT has 5 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39852      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
39853      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
39854      NAME="D_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="D_TARGET_B";
39855      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39856      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39857      TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
39858      output;
MPRINT(EM_DIAGRAM):   output;
39859      NAME="I_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="I_TARGET_B";
39860      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39861      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39862      TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
39863      output;
MPRINT(EM_DIAGRAM):   output;
39864      NAME="b_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="b_TARGET_B";
39865      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39866      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
39867      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39868      output;
MPRINT(EM_DIAGRAM):   output;
39869      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39870      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
39871      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
39872      NAME="P_TARGET_B1";
MPRINT(EM_DIAGRAM):   NAME="P_TARGET_B1";
39873      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39874      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39875      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39876      output;
MPRINT(EM_DIAGRAM):   output;
39877      NAME="P_TARGET_B0";
MPRINT(EM_DIAGRAM):   NAME="P_TARGET_B0";
39878      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39879      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39880      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39881      output;
MPRINT(EM_DIAGRAM):   output;
39882      NAME="EP_TARGET_B";
MPRINT(EM_DIAGRAM):   NAME="EP_TARGET_B";
39883      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
39884      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
39885      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
39886      output;
MPRINT(EM_DIAGRAM):   output;
39887      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
39888      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
39889      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
39890      proc freq data = EMWS1.Score_SCORE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Score_SCORE order=formatted addnames;
39891      table D_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table D_TARGET_B / missing;
39892      table I_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table I_TARGET_B / missing;
39893      table b_TARGET_B / missing;
MPRINT(EM_DIAGRAM):   table b_TARGET_B / missing;
39894      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2148 observations read from the data set DONOR.DONOR_SCORE_DATA.
NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2148 observations read from the data set EMWS1.IDS2_DATA.
NOTE: The data set WORK.TEMPFREQ has 23 observations and 12 variables.
NOTE: There were 2148 observations read from the data set EMWS1.SCORE_SCORE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.17 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
39895      quit;
39896      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
39897      data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
39898      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
39899         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
39900      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
39901      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
39902      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
39903      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
39904      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
39905      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
39906      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
39907      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
39908      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
39909      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
39910      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
39911      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
39912      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
39913      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
39914      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
39915      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
39916      output;
MPRINT(EM_DIAGRAM):   output;
39917      end;
MPRINT(EM_DIAGRAM):   end;
39918      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
39919      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE_BAR has 23 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
39920      proc sort data=WORK.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score_BAR NOTHREADS;
39921      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
39922      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39923      proc sort data=WORK.M2VK_JC3;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2VK_JC3;
39924      by Name;
MPRINT(EM_DIAGRAM):   by Name;
39925      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.M2VK_JC3.
NOTE: The data set WORK.M2VK_JC3 has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39926      data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score_BAR;
39927      merge WORK.Score_BAR(in=_a) WORK.M2VK_JC3(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score_BAR(in=_a) WORK.M2VK_JC3(keep=Name Role rename=(Name=_Variable_));
39928      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
39929      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
39930      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
39931      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: There were 3 observations read from the data set WORK.M2VK_JC3.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39932      data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR;
39933      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39934      retain DATAROLE "SCORE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE";
39935      set WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score_BAR;
39936      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 23 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39937      proc append base=EMWS1.Score_BAR data=WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_BAR data=WORK.Score_BAR;
39938      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_BAR to EMWS1.SCORE_BAR.
NOTE: There were 23 observations read from the data set WORK.SCORE_BAR.
NOTE: 23 observations added.
NOTE: The data set EMWS1.SCORE_BAR has 69 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
39939      %var_profile(DATA=EMWS1.Score_SCORE, OUTPUT=work.Score_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sat, Oct 20, 2018 04:48:23 PM,
      Last Modified=Sat, Oct 20, 2018 04:48:26 PM,
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD9868_COB-MBA045_\Prc2\macros.sas7bcat,
      Release Created=9.0401M3,Host Created=X64_8PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 35.
NOTE: There were 3 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
39940     +%macro _vars;
39941     +P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
39942     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.Score_SCORE(obs=1000000);
MPRINT(VAR_PROFILE):   format EP_TARGET_B F1_. P_TARGET_B0 F2_. P_TARGET_B1 F3_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.10 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_TARGET_B1 P_TARGET_B0 EP_TARGET_B
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2148   Memory used = 511K.
NOTE: There were 2148 observations read from the data set DONOR.DONOR_SCORE_DATA.
NOTE: There were 2148 observations read from the data set EMWS1.IDS2_DATA.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 2148 observations read from the data set EMWS1.SCORE_SCORE.
NOTE: There were 2148 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 48 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.14 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE_VARHIST has 48 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
39943      data work.Score_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score_VARHIST;
39944      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39945      retain DATAROLE "SCORE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" TYPE "";
39946      set work.Score_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score_VARHIST(rename=(VALUE=X));
39947      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_VARHIST has 48 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39948      proc append base=work.Score_HIST data=work.Score_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score_HIST data=work.Score_VARHIST;
39949      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_VARHIST to WORK.SCORE_HIST.
NOTE: There were 48 observations read from the data set WORK.SCORE_VARHIST.
NOTE: 48 observations added.
NOTE: The data set WORK.SCORE_HIST has 144 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39950      proc stdize data=EMWS1.Score_SCORE(obs=1000000) outstat=work.Score_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS1.Score_SCORE(obs=1000000) outstat=work.Score_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
39951      var
39952      P_TARGET_B1
39953      P_TARGET_B0
39954      ;
MPRINT(EM_DIAGRAM):   var P_TARGET_B1 P_TARGET_B0 ;
39955      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2148 observations read from the data set DONOR.DONOR_SCORE_DATA.
NOTE: View EMWS1.SCORE_SCORE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2148 observations read from the data set EMWS1.IDS2_DATA.
NOTE: There were 2148 observations read from the data set EMWS1.SCORE_SCORE.
NOTE: The data set WORK.SCORE_SUMDATA has 15 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
39956      quit;
 
39957      proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
39958      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
39959      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
39960      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
39961      data work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score_SUMDATA;
39962      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
39963      retain DATAROLE "SCORE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" Type "";
39964      set work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score_SUMDATA;
39965      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39966      proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
39967      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_SUMDATA to WORK.SCORESTAT.
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: 2 observations added.
NOTE: The data set WORK.SCORESTAT has 7 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
39968      data EMWS1.Score_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
MPRINT(EM_DIAGRAM):    data EMWS1.Score_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
39969      set EMWS1.Score_BAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Score_BAR;
39970      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type";
39971      select(_VARIABLE_);
MPRINT(EM_DIAGRAM):   select(_VARIABLE_);
39972      when("I_TARGET_B") TYPE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when("I_TARGET_B") TYPE = 'CLASSIFICATION';
39973      when("D_TARGET_B") TYPE = 'MODELDECISION';
MPRINT(EM_DIAGRAM):   when("D_TARGET_B") TYPE = 'MODELDECISION';
39974      when("b_TARGET_B") TYPE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_TARGET_B") TYPE = 'SEGMENT';
39975      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
39976      end;
MPRINT(EM_DIAGRAM):   end;
39977      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VARIABLE is uninitialized.
NOTE: There were 69 observations read from the data set EMWS1.SCORE_BAR.
NOTE: The data set EMWS1.SCORE_BAR has 69 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
39978      proc sort data = EMWS1.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Score_BAR NOTHREADS;
39979      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
39980      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 69 observations read from the data set EMWS1.SCORE_BAR.
NOTE: The data set EMWS1.SCORE_BAR has 69 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.04 seconds
 
 
39981      %let _cn = %sysfunc(getoption(CENTER));
39982      %let _nb = %sysfunc(getoption(NUMBER));
39983      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
39984      title;
MPRINT(EM_DIAGRAM):   title;
39985      proc print data = EMWS1.Score_BAR noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Score_BAR noobs label;
39986      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
39987      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
39988      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
39989      run;
 
NOTE: There were 69 observations read from the data set EMWS1.SCORE_BAR.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
39990      title10;
MPRINT(EM_DIAGRAM):   title10;
39991      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
39992      data EMWS1.Score_HIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Score_HIST;
39993      set work.Score_HIST(rename=(Percent=Value));
MPRINT(EM_DIAGRAM):   set work.Score_HIST(rename=(Percent=Value));
39994      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,      NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel, NOQUOTE))" X =
39995         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel,   NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))" Value = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type" X = "Numeric Value" COUNT = "Frequency Count" Value = "Percent";
39996      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
39997      when("P_TARGET_B1") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_TARGET_B1") TYPE = 'PROBABILITY';
39998      when("P_TARGET_B0") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_TARGET_B0") TYPE = 'PROBABILITY';
39999      when("EP_TARGET_B") TYPE = 'PROFIT';
MPRINT(EM_DIAGRAM):   when("EP_TARGET_B") TYPE = 'PROFIT';
40000      when("b_TARGET_B") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_TARGET_B") TYPE= 'SEGMENT';
40001      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
40002      end;
MPRINT(EM_DIAGRAM):   end;
40003      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 144 observations read from the data set WORK.SCORE_HIST.
NOTE: The data set EMWS1.SCORE_HIST has 144 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
 
 
40004      data WORK.ScoreSTAT;
MPRINT(EM_DIAGRAM):    data WORK.ScoreSTAT;
40005      set WORK.ScoreSTAT;
MPRINT(EM_DIAGRAM):   set WORK.ScoreSTAT;
40006      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,  NOQUOTE))" N =
40007         "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel,  NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,  NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel,  NOQUOTE))" MAX =
40008         "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel,  NOQUOTE))" MEDIAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel,  NOQUOTE))" P25 = "%sysfunc(sasmsg(sashelp.dmine, rpt_p25_vlabel,  NOQUOTE))" P75 =
40009         "%sysfunc(sasmsg(sashelp.dmine, rpt_p75_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" LABEL = "Label" MEAN = "Mean" N = "Non Missing" STD = "Standard Deviation" MIN = "Minimum" MAX = "Maximum" MEDIAN = "Median" P25 = "25th Percentile" P75 = "75th Percentile";
40010      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
40011      when("P_TARGET_B1") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_TARGET_B1") TYPE = 'PROBABILITY';
40012      when("P_TARGET_B0") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_TARGET_B0") TYPE = 'PROBABILITY';
40013      when("EP_TARGET_B") TYPE = 'PROFIT';
MPRINT(EM_DIAGRAM):   when("EP_TARGET_B") TYPE = 'PROFIT';
40014      when("b_TARGET_B") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_TARGET_B") TYPE= 'SEGMENT';
40015      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
40016      end;
MPRINT(EM_DIAGRAM):   end;
40017      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORESTAT.
NOTE: The data set WORK.SCORESTAT has 7 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
40018      proc sort data = WORK.ScoreSTAT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.ScoreSTAT NOTHREADS;
40019      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
40020      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORESTAT.
NOTE: The data set WORK.SCORESTAT has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
40021      proc transpose data = WORK.ScoreSTAT out=WORK.ScoreSTAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
MPRINT(EM_DIAGRAM):   proc transpose data = WORK.ScoreSTAT out=WORK.ScoreSTAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
40022      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
40023      id DATAROLE;
MPRINT(EM_DIAGRAM):   id DATAROLE;
40024      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORESTAT.
NOTE: The data set WORK.SCORESTAT has 24 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
40025      proc datasets library=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=WORK nolist;
40026      modify ScoreSTAT;
MPRINT(EM_DIAGRAM):   modify ScoreSTAT;
40027      label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel,  NOQUOTE))" VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" TYPE =
MPRINT(EM_DIAGRAM):   label STATISTICS = "Statistics" VARIABLE= "Variable Name" LABEL = "Label" TYPE = "Output Type";
WARNING: Variable TYPE not found in data set WORK.SCORESTAT.
40028         "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
40029      run;
 
NOTE: MODIFY was successful for WORK.SCORESTAT.DATA.
40030      %let _cn = %sysfunc(getoption(CENTER));
40031      %let _nb = %sysfunc(getoption(NUMBER));
40032      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
40033      title;
MPRINT(EM_DIAGRAM):   title;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
40034      proc print data = WORK.ScoreSTAT label noobs;
MPRINT(EM_DIAGRAM):   proc print data = WORK.ScoreSTAT label noobs;
40035      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
40036      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
40037      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
40038      run;
 
NOTE: There were 24 observations read from the data set WORK.SCORESTAT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
40039      title10;
MPRINT(EM_DIAGRAM):   title10;
40040      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
