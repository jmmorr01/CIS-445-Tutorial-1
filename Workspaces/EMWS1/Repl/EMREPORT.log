MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 20, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:53:23" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                October 20, 2018
Time:                15:53:23
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O19ZK9R1 "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O19ZK9R1 new;
MPRINT(EM_DIAGRAM):   run;
24234      %let EMEXCEPTIONSTRING=;
24235      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24236      * REPORT: Repl;
MPRINT(EM_DIAGRAM):   * REPORT: Repl;
24237      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24238      %let EM_ACTION = REPORT;
24239      %let syscc = 0;
24240      filename x CATALOG 'SASHELP.EMUTIL.EM_VARMACRO.SOURCE';
MPRINT(EM_DIAGRAM):     filename x CATALOG 'SASHELP.EMUTIL.EM_VARMACRO.SOURCE';
24241      %inc x;
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
24243     +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
24245     +   filename macFile catalog 'work.emutil.macro.source';
24246     +   %let _METAOBS = 0;
24247     +   %let _maxvar = &maxvar;
24248     +   %if "&_maxvar" eq "" %then %let maxvar = -1;
24250     +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
24251     +                   or (&metadata eq ) %then %do;
24252     +       %put * No metadata data set defined;
24253     +       %goto doend;
24254     +   %end;
24256     +   data _null_;
24257     +      length _STRING_ $80;
24258     +      retain _STRING_ '' maxvar 0;
24259     +      set &metadata end=eof;
24260     +      file macFile;
24261     +      %if %nrbquote(&where) ne %then %do;
24262     +          %let whereClause = where (%nrbquote(&where));
24263     +          %unquote(&whereClause);
24264     +      %end;
24265     +      if _N_=1 then do;
24266     +         string = "%"!!"macro &name;";
24267     +         put string;
24268     +      end;
24269     +      maxvar +1;
24270     +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
24271     +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
24272     +         if eof
24273     +            %if  %sysevalf(&_maxvar > 0) %then %do;
24274     +                or maxvar >= &maxvar
24275     +            %end;
24276     +            then do;
24277     +            put _STRING_;
24278     +            string = "%"!!"mend &name;";
24279     +            put string;
24280     +            string = strip(put(_N_, best.));
24281     +            call symput('_METAOBS', string);
24282     +            %if (&nummacro ne ) %then %do;
24283     +                put "%" "global &nummacro;";
24284     +                put "%" "let &nummacro = " string ";";
24285     +            %end;
24286     +            stop;
24287     +         end;
24288     +      end;
24289     +      else do;
24290     +         put _STRING_;
24291     +         _string_ = TRIM(&key);
24292     +         if eof
24293     +            %if  %sysevalf(&_maxvar > 0) %then %do;
24294     +              or maxvar >= &maxvar
24295     +           %end;
24296     +            then do;
24297     +            put _STRING_;
24298     +            string = "%"!!"mend &name;";
24299     +            put string;
24300     +        end;
24301     +      end;
24302     +      if eof
24303     +         %if  %sysevalf(&_maxvar > 0) %then %do;
24304     +             or maxvar >= &maxvar
24305     +         %end;
24306     +         then do;
24307     +         string = strip(put(_N_, best.));
24308     +         call symput('_METAOBS', string);
24309     +         %if (&nummacro ne ) %then %do;
24310     +             put "%" "global &nummacro;";
24311     +             put "%" "let &nummacro = " string ";";
24312     +         %end;
24313     +         stop;
24314     +      end;
24315     +   run;
24317     +   %doend:
24318     +   %if ^&_METAOBS %then %do;
24319     +       data _null_;
24320     +          file macFile;
24321     +          put "%" "macro &name;";
24322     +          put "%" "mend &name;";
24323     +          %if (&nummacro ne ) %then %do;
24324     +              put "%" "global &nummacro;";
24325     +              put "%" "let &nummacro = 0;";
24326     +          %end;
24327     +      run;
24328     +   %end;
24329     +   %inc macFile;
24330     +   filename macFile;
24331     +%mend em_varMacro;
NOTE: %INCLUDE (level 1) ending.
24332      filename X;
MPRINT(EM_DIAGRAM):   filename X;
NOTE: Fileref X has been deassigned.
24333       %macro main;
24334      
24335         filename temp catalog 'sashelp.emmdfy.Replace_macros.source';
24336         %include temp;
24337         filename temp;
24338      
24339         %if %upcase(&EM_ACTION) = CREATE %then %do;
24340      
24341             filename temp catalog 'sashelp.emmdfy.Replace_create.source';
24342             %include temp;
24343             filename temp;
24344             %create;
24345         %end;
24346         %else
24347         %if %upcase(&EM_ACTION) = TRAIN %then %do;
24348      
24349             filename temp catalog 'sashelp.emmdfy.Replace_train.source';
24350             %include temp;
24351             filename temp;
24352             %train;
24353         %end;
24354         %else
24355         %if %upcase(&EM_ACTION) = SCORE %then %do;
24356      
24357             filename temp catalog 'sashelp.emmdfy.Replace_score.source';
24358             %include temp;
24359             filename temp;
24360             %score;
24361         %end;
24362         %if %upcase(&EM_ACTION) = REPORT %then %do;
24363      
24364             filename temp catalog 'sashelp.emmdfy.Replace_report.source';
24365             %include temp;
24366             filename temp;
24367             %report;
24368         %end;
24369         %if %upcase(&EM_ACTION) = OPENOUTCLASSTABLE %then %do;
24370             filename temp catalog 'sashelp.emmdfy.replace_makeoutclass.source';
24371             %include temp;
24372             filename temp;
24373             %em_replace_openoutclass;
24374         %end;
24375         %if %upcase(&EM_ACTION) = CLOSEOUTCLASSTABLE %then %do;
24376             filename temp catalog 'sashelp.emmdfy.replace_makeoutclass.source';
24377             %include temp;
24378             filename temp;
24379             %em_replace_closeoutclass;
24380         %end;
24381      %mend main;
24382      
24383      %main;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmdfy.Replace_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMDFY.REPLACE_MACROS.SOURCE.
24384     +%macro SetProperties;
24385     +   %em_checkmacro(name=EM_PROPERTY_UNKNOWNLEVEL,    global=Y, value=MODE);
24386     +   %em_checkmacro(name=EM_PROPERTY_CALCMETHOD,      global=Y, value=NONE);
24387     +   %em_checkmacro(name=EM_PROPERTY_PERCENTSCUTOFF,  global=Y, value=0.5);
24388     +   %em_checkmacro(name=EM_PROPERTY_SPACINGSCUTOFF,  global=Y, value=9);
24389     +   %em_checkMacro(name=EM_PROPERTY_MADSCUTOFF,      global=Y, value=9);
24390     +   %em_checkMacro(name=EM_PROPERTY_STDDEVCUTOFF,    global=Y, value=3);
24391     +   %em_checkmacro(name=EM_PROPERTY_REPLACEMETHOD,   global=Y, value=COMPUTED);
24392     +   %em_checkmacro(name=EM_PROPERTY_HIDEVARIABLE,    global=Y, value=N);
24393     +   %em_checkmacro(name=EM_PROPERTY_INTERVALMETHOD,  global=Y, value=NONE);
24394     +   %em_checkmacro(name=EM_PROPERTY_REPORTCOUNT,     global=Y, value=Y);
24395     +
24396     +%mend SetProperties;
24397     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(MAIN):   filename temp catalog 'sashelp.emmdfy.Replace_report.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMDFY.REPLACE_REPORT.SOURCE.
24398     +%macro makeNameDs(namedata=, limitDs=, classname=);
24399     +    %let classnum=0;
24400     +    %let dsid = %sysfunc(open(&classname));
24401     +    %if &dsid>0 %then %do;
24402     +        %let classnum = %sysfunc(attrn(&dsid, NOBS));
24403     +        %let dsid = %sysfunc(close(&dsid));
24404     +    %end;
24405     +
24406     +    %let varnum=0;
24407     +    %let dsid = %sysfunc(open(&LimitDs));
24408     +    %if &dsid>0 %then %do;
24409     +        %let varnum = %sysfunc(attrn(&dsid, NOBS));
24410     +        %let dsid = %sysfunc(close(&dsid));
24411     +    %end;
24412     +    %if ^&varnum and  ^&classnum %then %goto doendmnd;
24413     +
24414     +    data &nameData;
24415     +       set
24416     +       %if &varnum %then %do;
24417     +          &limitDs
24418     +      %end;
24419     +      %if &classnum %then %do;
24420     +          &classname
24421     +      %end;
24422     +    ;
24423     +    run;
24424     +    proc sort data=&nameData;
24425     +       by name;
24426     +    run;
24427     +
24428     +    %doendmnd:
24429     +%mend makeNameDs;
24430     +
24431     +%macro countReplace(FileRef1=, dataRole=, data=, CountData=);
24432     +   %if (^%sysfunc(exist(&data)) and ^%sysfunc(exist(&data, VIEW))) or (&data eq ) %then %goto doendm;
24433     +
24434     +   data _temp;
24435     +      length DataRole $8;
24436     +      DataRole ="&DataRole";
24437     +      array _ReplaceCount{&ReplaceNum} (
24438     +      %do i=1 %to &ReplaceNum;
24439     +          0
24440     +      %end;
24441     +      );
24442     +      array _DIFF{&ReplaceNum};
24443     +      retain _ReplaceCount1 -- _ReplaceCount&ReplaceNum;
24444     +      set &data end=eof;
24445     +      %inc &FileRef1;
24446     +      do i=1 to &ReplaceNum;
24447     +         if _DIFF(i) then _ReplaceCount(i) = _ReplaceCount(i)+1;
24448     +      end;
24449     +      keep DataRole _ReplaceCount:;
24450     +      if eof then
24451     +         output;
24452     +   run;
24453     +   proc append base=&CountData data=_temp;
24454     +   run;
24455     +   proc datasets lib=WORK nolist;
24456     +      delete _temp;
24457     +   run;
24458     +
24459     +   %doendm:
24460     +
24461     +%mend;
24462     +
24463     +%macro makeCountReport(nameData=, outData=countData);
24464     +   %if ^%sysfunc(exist(&nameData))%then %goto doendmc;
24465     +
24466     +   %global ReplaceNum;
24467     +   %let ReplaceNum=0;
24468     +   %let dsid = %sysfunc(open(&namedata));
24469     +   %if &dsid>0 %then %do;
24470     +       %let ReplaceNum = %sysfunc(attrn(&dsid, NOBS));
24471     +       %let dsid = %sysfunc(close(&dsid));
24472     +   %end;
24473     +   %if ^&ReplaceNum %then %goto doendmc;
24474     +
24475     +   %EM_REGISTER(key=DiffCode, TYPE=FILE, EXTENSION=sas);
24476     +   filename _F1 "&EM_USER_DiffCode";
24477     +
24478     +   data _null_;
24479     +      length string $200;
24480     +      set &namedata;
24481     +      file _F1;
24482     +      string = 'Label '!!'_ReplaceCount'!!strip(put(_N_,BEST.))!!' = "'!!strip(name)!!'";';
24483     +      put string;
24484     +      string = 'if '!!strip(NAME)!!' ne '!!strip(newname)!!' then ';
24485     +      put string;
24486     +      string = '_DIFF'!!strip(put(_N_,BEST.))!!'= 1;';
24487     +      put string;
24488     +      put ' else ';
24489     +      string = '_DIFF'!!strip(put(_N_,BEST.))!!'= 0;';
24490     +      put string;
24491     +   run;
24492     +   %countReplace(FileRef1=_F1, dataRole=Train, data=&EM_EXPORT_TRAIN,    CountData=_tempCount);
24493     +   %countReplace(FileRef1=_F1, dataRole=Valide,data=&EM_EXPORT_VALIDATE, CountData=_tempCount);
24494     +   %countReplace(FileRef1=_F1, dataRole=Test,  data=&EM_EXPORT_TEST,     CountData=_tempCount);
24495     +
24496     +   filename _F1;
24497     +
24498     +   %let validateFlag = 0;
24499     +   %let testFlag     = 0;
24500     +   %if (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW)))
24501     +                  and (&EM_IMPORT_VALIDATE ne ) %then %do;
24502     +        %let validateFlag = 1;
24503     +    %end;
24504     +    %if (%sysfunc(exist(&EM_IMPORT_TEST)) or %sysfunc(exist(&EM_IMPORT_TEST, VIEW)))
24505     +                    and (&EM_IMPORT_TEST ne ) %then %do;
24506     +          %let testFlag   = 1;
24507     +    %end;
24508     +
24509     +    proc transpose data=_tempCount out=&outData(drop=_NAME_ rename=(_LABEL_=NAME Col1=TRAIN
24510     +      %if &validateFlag = 1 %then %do;
24511     +          Col2=VALIDATE
24512     +      %end;
24513     +      %if &testFlag = 1 %then %do;
24514     +          Col3=TEST
24515     +      %end;
24516     +
24517     +      ));
24518     +   run;
24519     +
24520     +   %let lib = WORK;
24521     +   %if %index(&outData, .) %then %do;
24522     +       %let lib    = %scan(&outData, 1, .);
24523     +       %let member = %scan(&outData, 2, .);
24524     +   %end;
24525     +   %else
24526     +       %let member = &outData;
24527     +  proc sort data=&outdata;
24528     +     by name;
24529     +  run;
24530     +  data &outData;
24531     +      merge &namedata(keep=NAME ROLE LABEL) &outData;
24532     +      by NAME;
24533     +   run;
24534     +   proc datasets lib=&lib nolist;
24535     +      modify &member;
24536     +      label NAME =  "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))"
24537     +            ROLE =  "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel   , NOQUOTE))"
24538     +            LABEL=  "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))"
24539     +            TRAIN=  "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel   , NOQUOTE))"
24540     +      %if &validateFlag = 1 %then %do;
24541     +            VALIDATE= "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel   , NOQUOTE))"
24542     +      %end;
24543     +      %if &testFlag = 1 %then %do;
24544     +            TEST= "%sysfunc(sasmsg(sashelp.dmine, rpt_test_vlabel   , NOQUOTE))"
24545     +      %end;
24546     +      ;
24547     +   run;
24548     +   proc print data=&em_user_count label;
24549     +      title9  ' ';
24550     +      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_replacecount_title, NOQUOTE))";
24551     +   run;
24552     +   title10;
24553     +   proc datasets lib=WORK nolist;
24554     +      delete _tempCount;
24555     +   run;
24556     +
24557     +  %doendmc:
24558     +%mend makeCountReport;
24559     +
24560     +%macro report;
24561     +   %em_getname(key=COUNT,        type=DATA);
24562     +   %em_getname(key=REPORTLIMITS, type=DATA);
24563     +   %em_getname(key=LIMITS,       type=DATA);
24564     +   %em_getname(key=CLASSINFO,    type=DATA);
24565     +
24566     +  /* Generating Reports */
24567     +   %let lib     = %scan(&EM_USER_COUNT, 1, .);
24568     +   %let member =;
24569     +   %if %sysfunc(exist(&em_user_reportlimits)) %then %let member = %scan(&EM_USER_REPORTLIMITS, 2, .);
24570     +   %if %sysfunc(exist(&em_user_count))        %then %let member = &member %scan(&EM_USER_count, 2, .);
24571     +   %if "&member" ne "" %then %do;
24572     +       proc datasets lib=&lib nolist;
24573     +         delete &member;
24574     +       run;
24575     +       quit;
24576     +   %end;
24577     +
24578     +   %let limitFlag = %sysfunc(exist(&em_user_limits));
24579     +    %if ^&limitFlag and  ^%sysfunc(exist(&em_user_classinfo)) %then %goto doendr;
24580     +
24581     +    %if &limitFlag %then %do;
24582     +        data &em_user_reportlimits;
24583     +           set &em_user_limits;
24584     +           label REPLACEMETHODUSED = "%sysfunc(sasmsg(sashelp.dmine, rpt_replacemethod_vlabel, NOQUOTE))"
24585     +                 REPLACEMINUSED    = "%sysfunc(sasmsg(sashelp.dmine, rpt_replacemin_vlabel, NOQUOTE))"
24586     +                 REPLACEMAXUSED    = "%sysfunc(sasmsg(sashelp.dmine, rpt_replacemax_vlabel, NOQUOTE))";
24587     +           drop ROLE LEVEL REPLACEMETHOD REPLACEMIN REPLACEMAX;
24588     +        run;
24589     +        %EM_REPORT(key=REPORTLIMITS,  viewtype=DATA, block=MODEL, description=ReplaceInterval, autoDisplay=Y);
24590     +    %end;
24591     +
24592     +    %if &em_property_CountReport=Y %then %do;
24593     +        %makeNameDs(namedata=newVarInfo, limitDs=&em_user_limits, classname=&em_user_classinfo);
24594     +
24595     +        %let labeloption = %sysfunc(getoption(label));
24596     +        options LABEL;run;
24597     +
24598     +        %makeCountReport(namedata=newVarInfo, outdata=&EM_USER_COUNT);
24599     +
24600     +        options &labeloption;run;
24601     +
24602     +        %EM_REPORT(key=COUNT, viewtype=DATA, block=MODEL, description=ReplaceCount, autoDisplay=Y);
24603     +   %end;
24604     +   proc datasets lib=WORK nolist;
24605     +      delete newVarInfo;
24606     +   run;
24607     +   %doendr:
24608     +%mend report;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(REPORT):  ;
MPRINT(REPORT):  ;
MPRINT(REPORT):  ;
MPRINT(REPORT):  ;
MPRINT(MAKENAMEDS):   data newVarInfo;
MPRINT(MAKENAMEDS):   set EMWS1.Repl_CLASSINFO ;
MPRINT(MAKENAMEDS):   run;

NOTE: There were 3 observations read from the data set EMWS1.REPL_CLASSINFO.
NOTE: The data set WORK.NEWVARINFO has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKENAMEDS):   proc sort data=newVarInfo;
MPRINT(MAKENAMEDS):   by name;
MPRINT(MAKENAMEDS):   run;

NOTE: There were 3 observations read from the data set WORK.NEWVARINFO.
NOTE: The data set WORK.NEWVARINFO has 3 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(REPORT):  ;
MPRINT(REPORT):   options LABEL;
MPRINT(REPORT):  run;
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   set WORK.EM_USER_KEY end=eof;
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   if eof then do;
MPRINT(EM_REGISTER):   key = upcase("DiffCode");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "DiffCode";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "sas";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   end;
MPRINT(EM_REGISTER):   run;

NOTE: There were 3 observations read from the data set WORK.EM_USER_KEY.
NOTE: The data set WORK.EM_USER_KEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECOUNTREPORT):  ;
MPRINT(MAKECOUNTREPORT):   filename _F1 "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\DiffCode.sas";
MPRINT(MAKECOUNTREPORT):   data _null_;
MPRINT(MAKECOUNTREPORT):   length string $200;
MPRINT(MAKECOUNTREPORT):   set newVarInfo;
MPRINT(MAKECOUNTREPORT):   file _F1;
MPRINT(MAKECOUNTREPORT):   string = 'Label '!!'_ReplaceCount'!!strip(put(_N_,BEST.))!!' = "'!!strip(name)!!'";';
MPRINT(MAKECOUNTREPORT):   put string;
MPRINT(MAKECOUNTREPORT):   string = 'if '!!strip(NAME)!!' ne '!!strip(newname)!!' then ';
MPRINT(MAKECOUNTREPORT):   put string;
MPRINT(MAKECOUNTREPORT):   string = '_DIFF'!!strip(put(_N_,BEST.))!!'= 1;';
MPRINT(MAKECOUNTREPORT):   put string;
MPRINT(MAKECOUNTREPORT):   put ' else ';
MPRINT(MAKECOUNTREPORT):   string = '_DIFF'!!strip(put(_N_,BEST.))!!'= 0;';
MPRINT(MAKECOUNTREPORT):   put string;
MPRINT(MAKECOUNTREPORT):   run;

NOTE: The file _F1 is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\DiffCode.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=20Oct2018:15:53:23,
      Create Time=20Oct2018:15:53:23

NOTE: 15 records were written to the file _F1.
      The minimum record length was 6.
      The maximum record length was 40.
NOTE: There were 3 observations read from the data set WORK.NEWVARINFO.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(COUNTREPLACE):   data _temp;
MPRINT(COUNTREPLACE):   length DataRole $8;
MPRINT(COUNTREPLACE):   DataRole ="Train";
MPRINT(COUNTREPLACE):   array _ReplaceCount{3} ( 0 0 0 );
MPRINT(COUNTREPLACE):   array _DIFF{3};
MPRINT(COUNTREPLACE):   retain _ReplaceCount1 -- _ReplaceCount3;
MPRINT(COUNTREPLACE):   set EMWS1.Repl_TRAIN end=eof;
NOTE: %INCLUDE (level 1) file _F1 is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\DiffCode.sas.
24609     +Label _ReplaceCount1 = "DONOR_GENDER";
MPRINT(COUNTREPLACE):   Label _ReplaceCount1 = "DONOR_GENDER";
24610     +if DONOR_GENDER ne REP_DONOR_GENDER then
24611     +_DIFF1= 1;
MPRINT(COUNTREPLACE):   if DONOR_GENDER ne REP_DONOR_GENDER then _DIFF1= 1;
24612     + else
24613     +_DIFF1= 0;
MPRINT(COUNTREPLACE):   else _DIFF1= 0;
24614     +Label _ReplaceCount2 = "SES";
MPRINT(COUNTREPLACE):   Label _ReplaceCount2 = "SES";
24615     +if SES ne REP_SES then
24616     +_DIFF2= 1;
MPRINT(COUNTREPLACE):   if SES ne REP_SES then _DIFF2= 1;
24617     + else
24618     +_DIFF2= 0;
MPRINT(COUNTREPLACE):   else _DIFF2= 0;
24619     +Label _ReplaceCount3 = "URBANICITY";
MPRINT(COUNTREPLACE):   Label _ReplaceCount3 = "URBANICITY";
24620     +if URBANICITY ne REP_URBANICITY then
24621     +_DIFF3= 1;
MPRINT(COUNTREPLACE):   if URBANICITY ne REP_URBANICITY then _DIFF3= 1;
24622     + else
24623     +_DIFF3= 0;
MPRINT(COUNTREPLACE):   else _DIFF3= 0;
NOTE: %INCLUDE (level 1) ending.
MPRINT(COUNTREPLACE):   do i=1 to 3;
MPRINT(COUNTREPLACE):   if _DIFF(i) then _ReplaceCount(i) = _ReplaceCount(i)+1;
MPRINT(COUNTREPLACE):   end;
MPRINT(COUNTREPLACE):   keep DataRole _ReplaceCount:;
MPRINT(COUNTREPLACE):   if eof then output;
MPRINT(COUNTREPLACE):   run;

NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: There were 10654 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 10654 observations read from the data set EMWS1.REPL_TRAIN.
NOTE: The data set WORK._TEMP has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(COUNTREPLACE):   proc append base=_tempCount data=_temp;
MPRINT(COUNTREPLACE):   run;

NOTE: Appending WORK._TEMP to WORK._TEMPCOUNT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMPCOUNT has 1 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(COUNTREPLACE):   proc datasets lib=WORK nolist;
MPRINT(COUNTREPLACE):   delete _temp;
MPRINT(COUNTREPLACE):   run;

NOTE: Deleting WORK._TEMP (memtype=DATA).
MPRINT(MAKECOUNTREPORT):  ;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(COUNTREPLACE):   data _temp;
MPRINT(COUNTREPLACE):   length DataRole $8;
MPRINT(COUNTREPLACE):   DataRole ="Valide";
MPRINT(COUNTREPLACE):   array _ReplaceCount{3} ( 0 0 0 );
MPRINT(COUNTREPLACE):   array _DIFF{3};
MPRINT(COUNTREPLACE):   retain _ReplaceCount1 -- _ReplaceCount3;
MPRINT(COUNTREPLACE):   set EMWS1.Repl_VALIDATE end=eof;
NOTE: %INCLUDE (level 1) file _F1 is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Repl\DiffCode.sas.
24624     +Label _ReplaceCount1 = "DONOR_GENDER";
MPRINT(COUNTREPLACE):   Label _ReplaceCount1 = "DONOR_GENDER";
24625     +if DONOR_GENDER ne REP_DONOR_GENDER then
24626     +_DIFF1= 1;
MPRINT(COUNTREPLACE):   if DONOR_GENDER ne REP_DONOR_GENDER then _DIFF1= 1;
24627     + else
24628     +_DIFF1= 0;
MPRINT(COUNTREPLACE):   else _DIFF1= 0;
24629     +Label _ReplaceCount2 = "SES";
MPRINT(COUNTREPLACE):   Label _ReplaceCount2 = "SES";
24630     +if SES ne REP_SES then
24631     +_DIFF2= 1;
MPRINT(COUNTREPLACE):   if SES ne REP_SES then _DIFF2= 1;
24632     + else
24633     +_DIFF2= 0;
MPRINT(COUNTREPLACE):   else _DIFF2= 0;
24634     +Label _ReplaceCount3 = "URBANICITY";
MPRINT(COUNTREPLACE):   Label _ReplaceCount3 = "URBANICITY";
24635     +if URBANICITY ne REP_URBANICITY then
24636     +_DIFF3= 1;
MPRINT(COUNTREPLACE):   if URBANICITY ne REP_URBANICITY then _DIFF3= 1;
24637     + else
24638     +_DIFF3= 0;
MPRINT(COUNTREPLACE):   else _DIFF3= 0;
NOTE: %INCLUDE (level 1) ending.
MPRINT(COUNTREPLACE):   do i=1 to 3;
MPRINT(COUNTREPLACE):   if _DIFF(i) then _ReplaceCount(i) = _ReplaceCount(i)+1;
MPRINT(COUNTREPLACE):   end;
MPRINT(COUNTREPLACE):   keep DataRole _ReplaceCount:;
MPRINT(COUNTREPLACE):   if eof then output;
MPRINT(COUNTREPLACE):   run;

NOTE: View EMWS1.REPL_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      
NOTE: There were 8718 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 8718 observations read from the data set EMWS1.REPL_VALIDATE.
NOTE: The data set WORK._TEMP has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

MPRINT(COUNTREPLACE):   proc append base=_tempCount data=_temp;
MPRINT(COUNTREPLACE):   run;

NOTE: Appending WORK._TEMP to WORK._TEMPCOUNT.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: 1 observations added.
NOTE: The data set WORK._TEMPCOUNT has 2 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(COUNTREPLACE):   proc datasets lib=WORK nolist;
MPRINT(COUNTREPLACE):   delete _temp;
MPRINT(COUNTREPLACE):   run;

NOTE: Deleting WORK._TEMP (memtype=DATA).
MPRINT(MAKECOUNTREPORT):  ;
MPRINT(MAKECOUNTREPORT):  ;
MPRINT(MAKECOUNTREPORT):   filename _F1;
NOTE: Fileref _F1 has been deassigned.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKECOUNTREPORT):   proc transpose data=_tempCount out=EMWS1.Repl_COUNT(drop=_NAME_ rename=(_LABEL_=NAME Col1=TRAIN Col2=VALIDATE ));
MPRINT(MAKECOUNTREPORT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCOUNT.
NOTE: The data set EMWS1.REPL_COUNT has 3 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
      

MPRINT(MAKECOUNTREPORT):   proc sort data=EMWS1.Repl_COUNT;
MPRINT(MAKECOUNTREPORT):   by name;
MPRINT(MAKECOUNTREPORT):   run;

NOTE: There were 3 observations read from the data set EMWS1.REPL_COUNT.
NOTE: The data set EMWS1.REPL_COUNT has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.04 seconds
      

MPRINT(MAKECOUNTREPORT):   data EMWS1.Repl_COUNT;
MPRINT(MAKECOUNTREPORT):   merge newVarInfo(keep=NAME ROLE LABEL) EMWS1.Repl_COUNT;
MPRINT(MAKECOUNTREPORT):   by NAME;
MPRINT(MAKECOUNTREPORT):   run;

WARNING: Multiple lengths were specified for the BY variable Name by input data sets. This might cause unexpected results.
NOTE: There were 3 observations read from the data set WORK.NEWVARINFO.
NOTE: There were 3 observations read from the data set EMWS1.REPL_COUNT.
NOTE: The data set EMWS1.REPL_COUNT has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

MPRINT(MAKECOUNTREPORT):   proc datasets lib=EMWS1 nolist;
MPRINT(MAKECOUNTREPORT):   modify Repl_COUNT;
MPRINT(MAKECOUNTREPORT):   label NAME = "Variable" ROLE = "Role" LABEL= "Label" TRAIN= "Train" VALIDATE= "Validation" ;
MPRINT(MAKECOUNTREPORT):   run;

NOTE: MODIFY was successful for EMWS1.REPL_COUNT.DATA.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.50 seconds
      cpu time            0.09 seconds
      

MPRINT(MAKECOUNTREPORT):   proc print data=EMWS1.Repl_COUNT label;
MPRINT(MAKECOUNTREPORT):   title9 ' ';
MPRINT(MAKECOUNTREPORT):   title10 "Replacement Counts";
MPRINT(MAKECOUNTREPORT):   run;
NOTE: There were 3 observations read from the data set EMWS1.REPL_COUNT.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECOUNTREPORT):   title10;
MPRINT(MAKECOUNTREPORT):   proc datasets lib=WORK nolist;
MPRINT(MAKECOUNTREPORT):   delete _tempCount;
MPRINT(MAKECOUNTREPORT):   run;
NOTE: Deleting WORK._TEMPCOUNT (memtype=DATA).
MPRINT(REPORT):  ;
MPRINT(REPORT):   options LABEL;
MPRINT(REPORT):  run;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "COUNT";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "ReplaceCount";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10472847153652;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(REPORT):  ;
MPRINT(REPORT):   proc datasets lib=WORK nolist;
MPRINT(REPORT):   delete newVarInfo;
MPRINT(REPORT):   run;

NOTE: Deleting WORK.NEWVARINFO (memtype=DATA).
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
24639      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24640      * End REPORT: Repl;
MPRINT(EM_DIAGRAM):   * End REPORT: Repl;
24641      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24642      
24643      /* Reset EM Options */
24644      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
24645      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
24646      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.09 seconds
      

24647      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.EM_USER_REPORT;
24648      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
24649      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
