MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 20, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:57:27" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                October 20, 2018
Time:                15:57:27
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2UFAT8_ "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2UFAT8_ new;
MPRINT(EM_DIAGRAM):   run;
23827      %let EMEXCEPTIONSTRING=;
23828      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23829      * SCORE: Tree;
MPRINT(EM_DIAGRAM):   * SCORE: Tree;
23830      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23831      %let EM_ACTION = SCORE;
23832      %let syscc = 0;
23833      %macro main;
23834      
23835        %if %upcase(&EM_ACTION) = CREATE %then %do;
23836          filename temp catalog 'sashelp.emmodl.tree_create.source';
23837          %include temp;
23838          filename temp;
23839      
23840          %em_tree_create;
23841        %end;
23842      
23843         %else
23844         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23845      
23846             filename temp catalog 'sashelp.emmodl.tree_train.source';
23847             %include temp;
23848             filename temp;
23849             %em_tree_train;
23850         %end;
23851      
23852        %else
23853        %if %upcase(&EM_ACTION) = SCORE %then %do;
23854          filename temp catalog 'sashelp.emmodl.tree_score.source';
23855          %include temp;
23856          filename temp;
23857      
23858          %em_tree_score;
23859      
23860        %end;
23861      
23862        %else
23863        %if %upcase(&EM_ACTION) = REPORT %then %do;
23864      
23865             filename temp catalog 'sashelp.emmodl.tree_report.source';
23866             %include temp;
23867             filename temp;
23868      
23869             %em_tree_report;
23870         %end;
23871      
23872        %else
23873        %if %upcase(&EM_ACTION) = OPENINT %then %do;
23874      
23875             filename temp catalog 'sashelp.emmodl.tree_actions.source';
23876             %include temp;
23877             filename temp;
23878             %EM_TREE_OPENTREEVIEWER;
23879      
23880         %end;
23881      
23882        %else
23883        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
23884      
23885             filename temp catalog 'sashelp.emmodl.tree_actions.source';
23886             %include temp;
23887             filename temp;
23888             %EM_TREE_CLOSETREEVIEWER;
23889      
23890         %end;
23891      
23892      
23893         %doendm:
23894      %mend main;
23895      
23896      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
23898     +%macro em_tree_score;
23900     +   /* determine if multiple targets will be processed */
23901     +   %let em_tree_multipleTargets=N;
23902     +   %let em_tree_numTarget=1;
23903     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
23904     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
23905     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
23906     +         %let em_tree_multipleTargets=N;
23907     +      %end;
23908     +      %else %do;
23909     +         /* create macro array of targets  */
23910     +         data _null_;
23911     +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
23912     +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
23913     +           if eof then
23914     +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
23915     +        run;
23917     +        %if &em_tree_numTarget gt 1 %then %do;
23918     +           %let em_tree_multipleTargets=Y;
23919     +        %end;
23920     +      %end;
23921     +   %end;
23923     +   /* build flow and publish scoring code */
23924     +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
23925     +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
23927     +   filename treeflow "&EM_USER_TREEFLOW";
23928     +   filename treepub "&EM_USER_TREEPUBLISH";
23930     +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
23931     +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
23933     +   %em_copyfile(infref=treeflow, outfref=flowref);
23934     +   %em_copyfile(infref=treepub, outfref=pubref);
23936     +   filename treeflow;
23937     +   filename treepub;
23939     +   /* if priors are used, add code to generate unadjusted residuals in export */
23940     +   %let useAdjPriors = N;
23941     +   data _null_;
23942     +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
23943     +     if USE="Y" then call symput('useAdjPriors', 'Y');
23944     +   run;
23945     +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
23946     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
23947     +      %include temp;
23948     +      filename temp;
23950     +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
23951     +      filename adjref "&EM_USER_adjResidualCode";
23952     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
23954     +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
23956     +      filename adjref;
23957     +   %end;
23959     +   /* LEAF */
23960     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
23961     +      data _null_;
23962     +        file flowref mod;
23963     +        put 'drop _LEAF_;';
23964     +      run;
23966     +      data _null_;
23967     +        file pubref mod;
23968     +        put 'drop _LEAF_;';
23969     +      run;
23971     +   %end;
23973     +   filename flowref;
23974     +   filename pubref;
23976     +   /* em_metachange code */
23977     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
23978     +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
23979     +   %end;
23981     +   /* variable selection based on importance stat    */
23982     +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
23983     +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
23984     +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
23985     +     %let varnum = %sysfunc(varnum(&dsid, NAME));
23986     +     %let obs = %sysfunc(fetch(&dsid));
23987     +     %do %while(&obs=0);
23988     +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
23989     +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
23990     +       %EM_METACHANGE(name=&varname, role=REJECTED);
23991     +       %let obs = %sysfunc(fetch(&dsid));
23992     +     %end;
23993     +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
23994     +   %end;
23996     +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
23997     +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
23998     +    %let tree_pred_vars = ;
23999     +    %let tree_pred_lvl =;
24000     +    %let numpred= 0;
24002     +    data _null_;
24003     +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
24004     +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
24005     +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
24006     +     if eof then
24007     +       call symput('numpred', strip(put(_N_, BEST.)));
24008     +    run;
24009     +   %end;
24011     +   %if &numpred ne 0 %then %do;
24012     +    %do i=1 %to &numpred;
24013     +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
24014     +      %EM_METACHANGE(name=&qpred, role=ASSESS);
24015     +    %end;
24016     +   %end;
24018     +   /* determine if multiple targets will be processed */
24019     +   %let em_tree_multipleTargets=N;
24020     +   %let em_tree_numTarget=1;
24021     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
24022     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
24023     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
24024     +         %let em_tree_multipleTargets=N;
24025     +      %end;
24026     +      %else %do;
24027     +        data _null_;
24028     +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
24029     +          if eof then
24030     +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
24031     +        run;
24033     +        %if &em_tree_numTarget gt 1 %then %do;
24034     +           %let em_tree_multipleTargets=Y;
24035     +        %end;
24036     +     %end;
24037     +   %end;
24039     +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
24040     +   %if "&em_tree_multipleTargets" eq "N" %then %do;
24042     +      /* variable importance */
24043     +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
24044     +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
24046     +         %let validexist=0;
24047     +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
24048     +           %let validexist=1;
24049     +         %end;
24051     +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
24052     +         /* and the columns may not be generated                                                                                 */
24053     +         %let em_tree_cvexists=;
24054     +         %let em_tree_surrexists=.;
24055     +         data _null_;
24056     +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
24057     +            if eof then do ;
24058     +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
24059     +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
24060     +            end;
24061     +         run;
24063     +         data &EM_USER_OUTIMPORT;
24064     +            set &EM_USER_OUTIMPORT;
24066     +            /* format columns based on Precison value specified */
24067     +            format importance 15.&EM_PROPERTY_PRECISION
24068     +                 %if &validexist %then %do;
24069     +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
24070     +                 %end;
24071     +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
24072     +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
24073     +                 %end;
24074     +            ;
24075     +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
24076     +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
24077     +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
24078     +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
24079     +                 %if "&em_tree_surrexists" ne "" %then %do;
24080     +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
24081     +                 %end;
24082     +                 %if &validexist %then %do;
24083     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
24084     +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
24085     +                 %end;
24086     +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
24087     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
24088     +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
24089     +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
24090     +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
24091     +                 %end;
24092     +            ;
24093     +         run;
24095     +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
24096     +      %end;
24097     +   %end;
24099     +   %doendm:
24100     +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=20Oct2018:15:57:26,
      Create Time=20Oct2018:15:55:44

NOTE: 458 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=20Oct2018:15:57:27,
      Create Time=20Oct2018:15:55:44

NOTE: 409 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_TARGET_B_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_MAKEUNADJUSTEDRESIDUALVARS.SOURCE.
24101     +%macro makeUnadjustedResidualVars(target=, decmeta=, fref=);
24102     +    %local from_var target_level pred_level res_var res_label res_vars res_levels pred_var numLevels;
24103     +    %let from_var  =;
24104     +    %let res_var   =;
24105     +    %let res_label =;
24106     +    %let res_vars = ;
24107     +    %let res_levels =;
24108     +    %let pred_var  =;
24109     +    %let pred_level =;
24110     +    %let numLevels =;
24111     +    %let target_level =;
24112     +
24113     +    %if (&target eq ) or ^%sysfunc(exist(&decmeta)) or (&fref eq ) %then %goto doendm;
24114     +
24115     +    data _null_;
24116     +       set &decmeta end=eof;
24117     +       where _TYPE_ in('TARGET', 'FROM');
24118     +       if _TYPE_='TARGET' then
24119     +          call symput('target_level', strip(LEVEL));
24120     +       else
24121     +          call symput('from_var', strip(VARIABLE));
24122     +    run;
24123     +    %if &target_level = INTERVAL %then %do;
24124     +        data _null_;
24125     +           set &decmeta end=eof;
24126     +           where _TYPE_ in('PREDICTED', 'RESIDUAL');
24127     +           if _TYPE_ eq 'PREDICTED' then do;
24128     +               call symput('pred_var',   strip(Variable));
24129     +           end;
24130     +           else do;
24131     +              call symput('res_var',   strip(Variable));
24132     +              call symput('res_label', strip(tranwrd(LABEL,"'","''")));
24133     +           end;
24134     +        run;
24135     +    %end;
24136     +    %else %do;
24137     +        data _null_;
24138     +           set &decmeta;
24139     +           where _TYPE_ ='PREDICTED';
24140     +           call symput('pred_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
24141     +        run;
24142     +        data _null_;
24143     +           set &decmeta end=eof;
24144     +           where _TYPE_ ='RESIDUAL';
24145     +           call symput('res_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
24146     +           call symput('res_labels'!!strip(put(_N_,BEST.)), strip(tranwrd(LABEL,"'","''")));
24147     +           call symput('res_levels'!!strip(put(_N_,BEST.)), strip(tranwrd(LEVEL,"'","''")));
24148     +           if eof then
24149     +              call symput('numLevels', strip(put(_N_,BEST.)));
24150     +        run;
24151     +    %end;
24152     +
24153     +    data _null_;
24154     +        file &fref;
24155     +
24156     +    put "&EM_codebar;";
24157     +    put "*Computing Unadjusted Residual Vars: &Target;";
24158     +    put "&EM_codebar;";
24159     +
24160     +    %if &target_level eq INTERVAL %then %do;
24161     +        %if &res_label ne %then %do;
24162     +            put "Label &res_var = '&res_label';";
24163     +        %end;
24164     +         put "&res_var = &target - &pred_var;";
24165     +    %end;
24166     +    %else %do;
24167     +       %do i= 1 %to &numLevels;
24168     +           %let res_var =  &&res_vars&i;
24169     +           %let string = %nrbquote(Label &res_var='&&res_labels&i');
24170     +           put "&string;";
24171     +        %end;
24172     +
24173     +        put "if ";
24174     +
24175     +        %do i= 1 %to &numLevels;
24176     +            %let and = ;
24177     +            %if &i>1 %then
24178     +                %let and = and;
24179     +            %let string = %nrbquote(&and &from_var ne '&&res_levels&i');
24180     +                 put "&string";
24181     +        %end;
24182     +
24183     +        put " then do;";
24184     +
24185     +        %do i= 1 %to &numLevels;
24186     +            put "&&res_vars&i=.;";
24187     +        %end;
24188     +
24189     +        put "end;";
24190     +        put "else do;";
24191     +
24192     +        %do i= 1 %to &numLevels;
24193     +           %let qvar =  &&res_vars&i;
24194     +            %let qvar = %substr(&qvar, 2);
24195     +            %let qvar = Q&qvar;
24196     +            put "&&res_vars&i= - &qvar;";
24197     +        %end;
24198     +
24199     +         put "select(&from_var);";
24200     +
24201     +         %do i= 1 %to &numLevels;
24202     +            %let string = %nrbquote(when('&&res_levels&i')&&res_vars&i= &&res_vars&i+1);
24203     +            put "&string;";
24204     +        %end;
24205     +         put 'otherwise;';
24206     +         put 'end;';
24207     +         put 'end;';
24208     +    %end;
24209     +    run;
24210     +    %doendm:
24211     +%mend;
24212     +
24213     +
24214     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_TREE_SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename adjref "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\adjResidualCode.sas";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM end=eof;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ in('TARGET', 'FROM');
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   if _TYPE_='TARGET' then call symput('target_level', strip(LEVEL));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   else call symput('from_var', strip(VARIABLE));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_ in ('FROM', 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ ='PREDICTED';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('pred_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   set EMWS1.Ids_TARGET_B_DM end=eof;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   where _TYPE_ ='RESIDUAL';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_labels'!!strip(put(_N_,BEST.)), strip(tranwrd(LABEL,"'","''")));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   call symput('res_levels'!!strip(put(_N_,BEST.)), strip(tranwrd(LEVEL,"'","''")));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   data _null_;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   file adjref;
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*------------------------------------------------------------*;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*Computing Unadjusted Residual Vars: TARGET_B;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "*------------------------------------------------------------*;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "Label R_TARGET_B1='Residual: TARGET_B=1';";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "Label R_TARGET_B0='Residual: TARGET_B=0';";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "if ";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put " F_TARGET_B ne '1'";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "and F_TARGET_B ne '0'";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put " then do;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B1=.;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B0=.;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "end;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "else do;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B1= - Q_TARGET_B1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "R_TARGET_B0= - Q_TARGET_B0;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "select(F_TARGET_B);";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "when('1')R_TARGET_B1= R_TARGET_B1+1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put "when('0')R_TARGET_B0= R_TARGET_B0+1;";
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'otherwise;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'end;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   put 'end;';
MPRINT(MAKEUNADJUSTEDRESIDUALVARS):   run;

NOTE: The file ADJREF is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\adjResidualCode.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=20Oct2018:15:57:27,
      Create Time=20Oct2018:15:57:27

NOTE: 21 records were written to the file ADJREF.
      The minimum record length was 3.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("adjref",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=15683,
      Last Modified=20Oct2018:15:57:27,
      Create Time=20Oct2018:15:55:44

NOTE: 21 records were written to the file FLOWREF.
      The minimum record length was 2.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename adjref;
NOTE: Fileref ADJREF has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=16232,
      Last Modified=20Oct2018:15:57:27,
      Create Time=20Oct2018:15:55:44

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14340,
      Last Modified=20Oct2018:15:57:27,
      Create Time=20Oct2018:15:55:44

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE4                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_ORIGIN             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("OVERLAY_SOURCE                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("DONOR_AGE                       ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_AVG_CARD_GIFT_AMT        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MOR_HIT_RATE                    ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE3                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_CARD_PROM              ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_OWNER_OCCUPIED              ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_CARD_RESPONSE_PROP       ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_RANGE             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LIFETIME_GIFT_AMOUNT            ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("INCOME_GROUP                    ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_URBANICITY                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENCY_STATUS_96NK             ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RECENT_CARD_RESPONSE_COUNT      ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_FIRST_GIFT         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LAST_GIFT_AMT                   ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MONTHS_SINCE_LAST_PROM_RESP     ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PCT_ATTRIBUTE1                  ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("WEALTH_RATING                   ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("HOME_OWNER                      ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("REP_DONOR_GENDER                ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PUBLISHED_PHONE                 ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_TARGET_B_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_TARGET_B_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_TARGET_B1");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_TARGET_B0");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable cvimportance is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training 
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 47 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: The data set EMWS1.TREE_OUTIMPORT has 47 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.88434786157885;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24215      
24216      *------------------------------------------------------------*;
24217      * End SCORE: Tree;
24218      *------------------------------------------------------------*;

24219      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
24220      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
24221      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

24222      filename x "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
24223      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
24224      file x;
MPRINT(EM_DIAGRAM):   file x;
24225      put 'if upcase(NAME) = "DONOR_AGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "DONOR_AGE" then do;';
24226      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24227      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24228      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24229      put 'if upcase(NAME) = "HOME_OWNER" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "HOME_OWNER" then do;';
24230      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24231      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24232      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24233      put 'if upcase(NAME) = "INCOME_GROUP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "INCOME_GROUP" then do;';
24234      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24235      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24236      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24237      put 'if upcase(NAME) = "LAST_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LAST_GIFT_AMT" then do;';
24238      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24239      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24240      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24241      put 'if upcase(NAME) = "LIFETIME_CARD_PROM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_CARD_PROM" then do;';
24242      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24243      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24244      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24245      put 'if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;';
24246      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24247      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24248      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24249      put 'if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;';
24250      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24251      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24252      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24253      put 'if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;';
24254      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24255      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24256      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24257      put 'if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;';
24258      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24259      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24260      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24261      put 'if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;';
24262      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24263      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24264      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24265      put 'if upcase(NAME) = "MOR_HIT_RATE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MOR_HIT_RATE" then do;';
24266      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24267      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24268      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24269      put 'if upcase(NAME) = "OVERLAY_SOURCE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "OVERLAY_SOURCE" then do;';
24270      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24271      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24272      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24273      put 'if upcase(NAME) = "PCT_ATTRIBUTE1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE1" then do;';
24274      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24275      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24276      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24277      put 'if upcase(NAME) = "PCT_ATTRIBUTE3" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE3" then do;';
24278      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24279      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24280      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24281      put 'if upcase(NAME) = "PCT_ATTRIBUTE4" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_ATTRIBUTE4" then do;';
24282      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24283      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24284      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24285      put 'if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;';
24286      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24287      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24288      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24289      put 'if upcase(NAME) = "PUBLISHED_PHONE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PUBLISHED_PHONE" then do;';
24290      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24291      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24292      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24293      put 'if upcase(NAME) = "Q_TARGET_B0" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_TARGET_B0" then do;';
24294      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
24295      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24296      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24297      put 'if upcase(NAME) = "Q_TARGET_B1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_TARGET_B1" then do;';
24298      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
24299      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24300      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24301      put 'if upcase(NAME) = "RECENCY_STATUS_96NK" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENCY_STATUS_96NK" then do;';
24302      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24303      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24304      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24305      put 'if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;';
24306      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24307      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24308      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24309      put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;';
24310      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24311      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24312      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24313      put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;';
24314      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24315      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24316      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24317      put 'if upcase(NAME) = "REP_DONOR_GENDER" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_DONOR_GENDER" then do;';
24318      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24319      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24320      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24321      put 'if upcase(NAME) = "REP_URBANICITY" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "REP_URBANICITY" then do;';
24322      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24323      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24324      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24325      put 'if upcase(NAME) = "WEALTH_RATING" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "WEALTH_RATING" then do;';
24326      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
24327      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24328      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24329      put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
24330      put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
24331      put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
24332      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24333      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=20Oct2018:15:57:28,
      Create Time=20Oct2018:15:55:44

NOTE: 108 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

24334      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
24335      filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24336      *------------------------------------------------------------*;
24337      * Tree: Scoring DATA data;
24338      *------------------------------------------------------------*;
24339      data EMWS1.Tree_TRAIN
24340      / view=EMWS1.Tree_TRAIN
24341      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_TRAIN / view=EMWS1.Tree_TRAIN ;
24342      set EMWS1.Repl_TRAIN
24343      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_TRAIN ;
24344      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
24345     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24346     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
24347     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24348     +
24349     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
24350     +LENGTH F_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_TARGET_B $ 12;
24351     +LENGTH I_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_TARGET_B $ 12;
24352     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
24353     +
24354     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
24355     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
24356     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
24357     +label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
24358     +label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
24359     +label Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
24360     +label Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
24361     +label V_TARGET_B1 = 'Validated: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label V_TARGET_B1 = 'Validated: TARGET_B=1' ;
24362     +label V_TARGET_B0 = 'Validated: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label V_TARGET_B0 = 'Validated: TARGET_B=0' ;
24363     +label R_TARGET_B1 = 'Residual: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label R_TARGET_B1 = 'Residual: TARGET_B=1' ;
24364     +label R_TARGET_B0 = 'Residual: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label R_TARGET_B0 = 'Residual: TARGET_B=0' ;
24365     +label F_TARGET_B = 'From: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label F_TARGET_B = 'From: TARGET_B' ;
24366     +label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
24367     +label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
24368     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
24369     +
24370     +
24371     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24372     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
24373     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
24374     +LENGTH _ARBFMT_2 $      2; DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
24375     +_ARBFMT_2 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
24376     +LENGTH _ARBFMT_4 $      4; DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
24377     +_ARBFMT_4 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
24378     +
24379     +
24380     +_ARBFMT_12 = PUT( TARGET_B , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( TARGET_B , BEST12.);
24381     + %DMNORMCP( _ARBFMT_12, F_TARGET_B );
MPRINT(DMNORMCP):   F_TARGET_B=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24382     +
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
24383     +******             ASSIGN OBSERVATION TO NODE             ******;
24384     +
24385     + DROP _BRANCH_;
24386     +_BRANCH_ = -1;
24387     +_ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
24388     + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
24389     +  IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24390     +   _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24391     +  END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
24392     +  ELSE IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 0.218 <= RECENT_RESPONSE_PROP THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24393     +   _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
24394     +  END;
24395     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF RECENT_RESPONSE_PROP < 0.218 THEN DO;
24396     +    IF                0.218 <= RECENT_RESPONSE_PROP  THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24397     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24398     +    END;
24399     +    ELSE IF RECENT_RESPONSE_PROP  <                0.218 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24400     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_COUNT ) THEN DO;
24401     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
24402     +   ELSE _BRANCH_ =    1;
24403     +  END;
24404     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_COUNT ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
24405     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
24406     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'11' ,'7' ,'4' ,'12' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24407     +    IF _ARBFMT_12 IN ('9' ,'11' ,'7' ,'4' ,'12' ,'5' ,'8' ,'6' ,'10' ,'13' )
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'0' ) THEN DO;
24408     +     THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24409     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24410     +    END;
MPRINT(EM_DIAGRAM):   END;
24411     +    ELSE IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MAX_GIFT_AMT < 13.5 THEN DO;
24412     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24413     +    END;
MPRINT(EM_DIAGRAM):   END;
24414     +  END;
24415     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 13.5 <= LIFETIME_MAX_GIFT_AMT THEN DO;
24416     +    IF LIFETIME_MAX_GIFT_AMT  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24417     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24418     +    END;
24419     +    ELSE IF                 13.5 <= LIFETIME_MAX_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24420     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
24421     +    END;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_GIFT_AMT < 9.95 THEN DO;
24422     +   ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24423     +  END;
24424     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 9.95 <= RECENT_AVG_GIFT_AMT THEN DO;
24425     +    IF RECENT_AVG_GIFT_AMT  <                 9.95 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24426     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24427     +    END;
24428     +    ELSE IF                 9.95 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24429     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
24430     +    END;
24431     +   ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
24432     +  END;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
24433     +IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.07300054401831;
24434     +
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.92699945598168;
24435     +IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.33283087126921;
24436     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.66716912873078;
24437     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.07029666958131;
24438     +  P_TARGET_B1  =     0.07300054401831;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.92970333041868;
24439     +  P_TARGET_B0  =     0.92699945598168;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24440     +  Q_TARGET_B1  =     0.33283087126921;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24441     +  Q_TARGET_B0  =     0.66716912873078;
MPRINT(EM_DIAGRAM):   END;
24442     +  V_TARGET_B1  =     0.07029666958131;
24443     +  V_TARGET_B0  =     0.92970333041868;
MPRINT(EM_DIAGRAM):   ELSE DO;
24444     +  I_TARGET_B  = '0' ;
24445     +  U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24446     +  END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
24447     +ELSE DO;
24448     +
24449     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
24450     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
24451     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('0' ) THEN DO;
24452     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24453     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24454     +    END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
24455     +    ELSE IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 4.5 <= FILE_CARD_GIFT THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24456     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
24457     +    END;
24458     +  IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF FILE_CARD_GIFT < 4.5 THEN DO;
24459     +      IF                  4.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24460     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24461     +      END;
24462     +      ELSE IF FILE_CARD_GIFT  <                  4.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24463     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
24464     +      END;
MPRINT(EM_DIAGRAM):   IF 8.5 <= LIFETIME_GIFT_COUNT THEN DO;
24465     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24466     +    END;
24467     +  IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_GIFT_COUNT < 8.5 THEN DO;
24468     +      IF                  8.5 <= LIFETIME_GIFT_COUNT  THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24469     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24470     +      END;
24471     +      ELSE IF LIFETIME_GIFT_COUNT  <                  8.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24472     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_STAR_STATUS ) THEN DO;
24473     +      END;
MPRINT(EM_DIAGRAM):   IF 0.5 <= RECENT_STAR_STATUS THEN DO;
24474     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24475     +    END;
24476     +  IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_STAR_STATUS ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF RECENT_STAR_STATUS < 0.5 THEN DO;
24477     +      IF                  0.5 <= RECENT_STAR_STATUS  THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24478     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24479     +      END;
24480     +      ELSE IF RECENT_STAR_STATUS  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24481     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
24482     +      END;
MPRINT(EM_DIAGRAM):   IF 53.5 <= LIFETIME_PROM THEN DO;
24483     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24484     +    END;
24485     +  IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_PROM < 53.5 THEN DO;
24486     +      IF                 53.5 <= LIFETIME_PROM  THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24487     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24488     +      END;
24489     +      ELSE IF LIFETIME_PROM  <                 53.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24490     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
24491     +      END;
24492     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
24493     +    END;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
24494     +  IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.05030587345486;
24495     +
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.94969412654513;
24496     +  IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.25125292348813;
24497     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.74874707651186;
24498     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04964830264094;
24499     +    P_TARGET_B1  =     0.05030587345486;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95035169735905;
24500     +    P_TARGET_B0  =     0.94969412654513;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24501     +    Q_TARGET_B1  =     0.25125292348813;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24502     +    Q_TARGET_B0  =     0.74874707651186;
MPRINT(EM_DIAGRAM):   END;
24503     +    V_TARGET_B1  =     0.04964830264094;
24504     +    V_TARGET_B0  =     0.95035169735905;
MPRINT(EM_DIAGRAM):   ELSE DO;
24505     +    I_TARGET_B  = '0' ;
24506     +    U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24507     +    END;
24508     +  ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 17477 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24509     +
MPRINT(EM_DIAGRAM):   END;
24510     +    _BRANCH_ = -1;
24511     +      IF  NOT MISSING(PER_CAPITA_INCOME ) AND
24512     +      PER_CAPITA_INCOME  <                17477 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 17477 <= PER_CAPITA_INCOME THEN DO;
24513     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24514     +      END;
MPRINT(EM_DIAGRAM):   END;
24515     +      ELSE IF  NOT MISSING(PER_CAPITA_INCOME ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
24516     +                     17477 <= PER_CAPITA_INCOME  THEN DO;
24517     +       _BRANCH_ =    2;
24518     +      END;
24519     +    IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
24520     +      _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
24521     +       %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' , '20' ,'16' ,'30' ,'07' ,'25' ,'09' ,'41' ,'37' ,'38' ,'18' ,'36' , '48' ,'08' ,'31' ,'19' ,'27' ,'40' ,'26' ,'28' ,'21' ,'51' ,'44' , '05' ,'17' ,'39' ,'33' ,'47' 
,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24522     +        IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,
MPRINT(EM_DIAGRAM):   END;
24523     +        '20' ,'16' ,'30' ,'07' ,'25' ,'09' ,'41' ,'37' ,'38' ,'18' ,'36' ,
24524     +        '48' ,'08' ,'31' ,'19' ,'27' ,'40' ,'26' ,'28' ,'21' ,'51' ,'44' ,
24525     +        '05' ,'17' ,'39' ,'33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'29' ,'11' ,'22' ,'03' ) THEN DO;
24526     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24527     +        END;
MPRINT(EM_DIAGRAM):   END;
24528     +        ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
24529     +        '13' ,'14' ,'29' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 409.5 THEN DO;
24530     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24531     +        END;
MPRINT(EM_DIAGRAM):   END;
24532     +      END;
24533     +    IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 409.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
24534     +        IF MEDIAN_HOUSEHOLD_INCOME  <                409.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24535     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24536     +        END;
24537     +        ELSE IF                409.5 <= MEDIAN_HOUSEHOLD_INCOME  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24538     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
24539     +        END;
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
24540     +       ELSE _BRANCH_ =    2;
24541     +      END;
24542     +    IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
24543     +      _ARBFMT_4 = PUT( REP_SES , $4.);
24544     +       %DMNORMIP( _ARBFMT_4);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
24545     +        IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24546     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24547     +        END;
MPRINT(EM_DIAGRAM):   END;
24548     +        ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1126 THEN DO;
24549     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24550     +        END;
MPRINT(EM_DIAGRAM):   END;
24551     +      END;
24552     +    IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1126 <= MEDIAN_HOME_VALUE THEN DO;
24553     +        IF MEDIAN_HOME_VALUE  <                 1126 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24554     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24555     +        END;
24556     +        ELSE IF                 1126 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24557     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
24558     +        END;
24559     +       ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
24560     +      END;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
24561     +    IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04725884462623;
24562     +
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95274115537376;
24563     +    IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.2390988372093;
24564     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.76090116279069;
24565     +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04024137145951;
24566     +      P_TARGET_B1  =     0.04725884462623;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95975862854048;
24567     +      P_TARGET_B0  =     0.95274115537376;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24568     +      Q_TARGET_B1  =      0.2390988372093;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24569     +      Q_TARGET_B0  =     0.76090116279069;
MPRINT(EM_DIAGRAM):   END;
24570     +      V_TARGET_B1  =     0.04024137145951;
24571     +      V_TARGET_B0  =     0.95975862854048;
MPRINT(EM_DIAGRAM):   ELSE DO;
24572     +      I_TARGET_B  = '0' ;
24573     +      U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24574     +      END;
24575     +    ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 13.615 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24576     +
MPRINT(EM_DIAGRAM):   END;
24577     +      _BRANCH_ = -1;
24578     +        IF  NOT MISSING(FILE_AVG_GIFT ) AND
24579     +        FILE_AVG_GIFT  <               13.615 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(FILE_AVG_GIFT ) AND 13.615 <= FILE_AVG_GIFT THEN DO;
24580     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24581     +        END;
MPRINT(EM_DIAGRAM):   END;
24582     +        ELSE IF  NOT MISSING(FILE_AVG_GIFT ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 13.615 THEN DO;
24583     +                      13.615 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24584     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
24585     +        END;
24586     +      IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 13.615 <= LIFETIME_AVG_GIFT_AMT THEN DO;
24587     +          IF LIFETIME_AVG_GIFT_AMT  <               13.615 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24588     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24589     +          END;
24590     +          ELSE IF               13.615 <= LIFETIME_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24591     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
24592     +          END;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MIN_GIFT_AMT < 7.75 THEN DO;
24593     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24594     +        END;
24595     +      IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 7.75 <= LIFETIME_MIN_GIFT_AMT THEN DO;
24596     +          IF LIFETIME_MIN_GIFT_AMT  <                 7.75 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24597     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24598     +          END;
24599     +          ELSE IF                 7.75 <= LIFETIME_MIN_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24600     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
24601     +          END;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_GIFT_AMT < 14.835 THEN DO;
24602     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24603     +        END;
24604     +      IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 14.835 <= RECENT_AVG_GIFT_AMT THEN DO;
24605     +          IF RECENT_AVG_GIFT_AMT  <               14.835 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24606     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24607     +          END;
24608     +          ELSE IF               14.835 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24609     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
24610     +          END;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MAX_GIFT_AMT < 19.5 THEN DO;
24611     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24612     +        END;
24613     +      IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 19.5 <= LIFETIME_MAX_GIFT_AMT THEN DO;
24614     +          IF LIFETIME_MAX_GIFT_AMT  <                 19.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24615     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24616     +          END;
24617     +          ELSE IF                 19.5 <= LIFETIME_MAX_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24618     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
24619     +          END;
24620     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
24621     +        END;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
24622     +      IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0361451652753;
24623     +
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.96385483472469;
24624     +      IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.19196062346185;
24625     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.80803937653814;
24626     +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03668059246853;
24627     +        P_TARGET_B1  =      0.0361451652753;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96331940753146;
24628     +        P_TARGET_B0  =     0.96385483472469;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24629     +        Q_TARGET_B1  =     0.19196062346185;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24630     +        Q_TARGET_B0  =     0.80803937653814;
MPRINT(EM_DIAGRAM):   END;
24631     +        V_TARGET_B1  =     0.03668059246853;
24632     +        V_TARGET_B0  =     0.96331940753146;
MPRINT(EM_DIAGRAM):   ELSE DO;
24633     +        I_TARGET_B  = '0' ;
24634     +        U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24635     +        END;
24636     +      ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NUMBER_PROM_12 ) AND NUMBER_PROM_12 < 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24637     +
MPRINT(EM_DIAGRAM):   END;
24638     +        _BRANCH_ = -1;
24639     +          IF  NOT MISSING(NUMBER_PROM_12 ) AND
24640     +          NUMBER_PROM_12  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(NUMBER_PROM_12 ) AND 13.5 <= NUMBER_PROM_12 THEN DO;
24641     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24642     +          END;
MPRINT(EM_DIAGRAM):   END;
24643     +          ELSE IF  NOT MISSING(NUMBER_PROM_12 ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
24644     +                          13.5 <= NUMBER_PROM_12  THEN DO;
24645     +           _BRANCH_ =    2;
24646     +          END;
24647     +        IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
24648     +          _ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
24649     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
24650     +            IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24651     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24652     +            END;
MPRINT(EM_DIAGRAM):   END;
24653     +            ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_LAST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF 14.5 <= MONTHS_SINCE_LAST_GIFT THEN DO;
24654     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24655     +            END;
MPRINT(EM_DIAGRAM):   END;
24656     +          END;
24657     +        IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_LAST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MONTHS_SINCE_LAST_GIFT < 14.5 THEN DO;
24658     +            IF                 14.5 <= MONTHS_SINCE_LAST_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24659     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24660     +            END;
24661     +            ELSE IF MONTHS_SINCE_LAST_GIFT  <                 14.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24662     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CARD_PROM_12 ) THEN DO;
24663     +            END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
24664     +           ELSE _BRANCH_ =    1;
24665     +          END;
24666     +        IF _BRANCH_ LT 0 AND NOT MISSING(CARD_PROM_12 ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
24667     +          _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
24668     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'4' ,'2' ,'3' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('7' ,'9' ,'8' ) THEN DO;
24669     +            IF _ARBFMT_12 IN ('5' ,'6' ,'4' ,'2' ,'3' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24670     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24671     +            END;
MPRINT(EM_DIAGRAM):   END;
24672     +            ELSE IF _ARBFMT_12 IN ('7' ,'9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 71.5 THEN DO;
24673     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24674     +            END;
MPRINT(EM_DIAGRAM):   END;
24675     +          END;
24676     +        IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 71.5 <= LIFETIME_PROM THEN DO;
24677     +            IF LIFETIME_PROM  <                 71.5 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24678     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24679     +            END;
24680     +            ELSE IF                 71.5 <= LIFETIME_PROM  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24681     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
24682     +            END;
24683     +           ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
24684     +          END;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
24685     +        IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04899772110298;
24686     +
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95100227889701;
24687     +        IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.24607329842931;
24688     +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.75392670157068;
24689     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03602921311568;
24690     +          P_TARGET_B1  =     0.04899772110298;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96397078688431;
24691     +          P_TARGET_B0  =     0.95100227889701;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24692     +          Q_TARGET_B1  =     0.24607329842931;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24693     +          Q_TARGET_B0  =     0.75392670157068;
MPRINT(EM_DIAGRAM):   END;
24694     +          V_TARGET_B1  =     0.03602921311568;
24695     +          V_TARGET_B0  =     0.96397078688431;
MPRINT(EM_DIAGRAM):   ELSE DO;
24696     +          I_TARGET_B  = '0' ;
24697     +          U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE2 ) AND 58.5 <= PCT_ATTRIBUTE2 THEN DO;
24698     +          END;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
24699     +        ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.12136059263373;
24700     +          IF  NOT MISSING(PCT_ATTRIBUTE2 ) AND
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.87863940736626;
24701     +                            58.5 <= PCT_ATTRIBUTE2  THEN DO;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.46666666666666;
24702     +            _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.53333333333333;
24703     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.05942303585465;
24704     +            P_TARGET_B1  =     0.12136059263373;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.94057696414534;
24705     +            P_TARGET_B0  =     0.87863940736626;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24706     +            Q_TARGET_B1  =     0.46666666666666;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24707     +            Q_TARGET_B0  =     0.53333333333333;
MPRINT(EM_DIAGRAM):   END;
24708     +            V_TARGET_B1  =     0.05942303585465;
24709     +            V_TARGET_B0  =     0.94057696414534;
MPRINT(EM_DIAGRAM):   ELSE DO;
24710     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
24711     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
24712     +            END;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0218140868437;
24713     +          ELSE DO;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.97818591315629;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.12378483473752;
24714     +            _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.87621516526247;
24715     +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03330189507384;
24716     +            P_TARGET_B1  =      0.0218140868437;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96669810492615;
24717     +            P_TARGET_B0  =     0.97818591315629;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24718     +            Q_TARGET_B1  =     0.12378483473752;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24719     +            Q_TARGET_B0  =     0.87621516526247;
MPRINT(EM_DIAGRAM):   END;
24720     +            V_TARGET_B1  =     0.03330189507384;
MPRINT(EM_DIAGRAM):   END;
24721     +            V_TARGET_B0  =     0.96669810492615;
MPRINT(EM_DIAGRAM):   END;
24722     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   END;
24723     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   END;
24724     +            END;
MPRINT(EM_DIAGRAM):   END;
24725     +          END;
24726     +        END;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
24727     +      END;
24728     +    END;
MPRINT(EM_DIAGRAM):   IF F_TARGET_B NE '1' AND F_TARGET_B NE '0' THEN DO;
24729     +  END;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = .;
24730     +
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = .;
24731     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   END;
24732     +IF  F_TARGET_B  NE '1'
24733     +AND F_TARGET_B  NE '0'  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24734     +        R_TARGET_B1  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = -P_TARGET_B1 ;
24735     +        R_TARGET_B0  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = -P_TARGET_B0 ;
24736     + END;
MPRINT(EM_DIAGRAM):   SELECT( F_TARGET_B );
24737     + ELSE DO;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_TARGET_B1 = R_TARGET_B1 +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_TARGET_B0 = R_TARGET_B0 +1;
24738     +       R_TARGET_B1  =  -P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   END;
24739     +       R_TARGET_B0  =  -P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   END;
24740     +       SELECT( F_TARGET_B  );
24741     +          WHEN( '1'  ) R_TARGET_B1  = R_TARGET_B1  +1;
MPRINT(EM_DIAGRAM):   ***** DECISION VARIABLES *******;
24742     +          WHEN( '0'  ) R_TARGET_B0  = R_TARGET_B0  +1;
24743     +       END;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
24744     + END;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
24745     +
24746     +*****  DECISION VARIABLES *******;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
24747     +
24748     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   label BP_TARGET_B = 'Best Profit: TARGET_B' ;
24749     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
24750     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
24751     +label BP_TARGET_B = 'Best Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
24752     +label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
24753     +
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
24754     +length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = .;
24755     +
24756     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
24757     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
24758     +BP_TARGET_B = .;
24759     +CP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
24760     +
MPRINT(EM_DIAGRAM):   EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
24761     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   drop _sum;
24762     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
24763     +
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
24764     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
24765     +EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
24766     +drop _sum;
MPRINT(EM_DIAGRAM):   end;
24767     +_sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
24768     +if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
24769     +   EP_TARGET_B = _sum; _decnum = 2;
24770     +   D_TARGET_B = '0' ;
24771     +end;
24772     +
MPRINT(EM_DIAGRAM):   array TREEdema [2,2] _temporary_ ( 14.5 0 -0.5 0 );
24773     +*** Decision Matrix;
24774     +array TREEdema [2,2] _temporary_ (
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
24775     +/* row 1 */  14.5 0
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_TARGET_B );
24776     +/* row 2 */  -0.5 0
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
24777     +);
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
24778     +
24779     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
24780     +drop _tarnum; select( F_TARGET_B );
MPRINT(EM_DIAGRAM):   end;
24781     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto TREEdeex;
24782     +   when('0' ) _tarnum = 2;
24783     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = TREEdema [_tarnum,_decnum];
24784     +end;
24785     +if _tarnum <= 0 then goto TREEdeex;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
24786     +
MPRINT(EM_DIAGRAM):   array TREEdebe [2] _temporary_ ( 14.5 0);
24787     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = TREEdebe [_tarnum];
24788     +CP_TARGET_B = TREEdema [_tarnum,_decnum];
24789     +
24790     +*** Best Possible Consequence of Any Decision without Cost;
24791     +array TREEdebe [2] _temporary_ ( 14.5 0);
MPRINT(EM_DIAGRAM):   TREEdeex:;
24792     +BP_TARGET_B = TREEdebe [_tarnum];
24793     +
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
24794     +
24795     +TREEdeex:;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
24796     +
MPRINT(EM_DIAGRAM):   ****************************************************************;
24797     +*** End Decision Processing ;
24798     +
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24799     +****************************************************************;
MPRINT(EM_DIAGRAM):   *Computing Unadjusted Residual Vars: TARGET_B;
24800     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24801     +****************************************************************;
MPRINT(EM_DIAGRAM):   Label R_TARGET_B1= 'Residual: TARGET_B=1';
24802     +
24803     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   Label R_TARGET_B0= 'Residual: TARGET_B=0';
24804     +*Computing Unadjusted Residual Vars: TARGET_B;
24805     +*------------------------------------------------------------*;
24806     +Label R_TARGET_B1='Residual: TARGET_B=1';
24807     +Label R_TARGET_B0='Residual: TARGET_B=0';
MPRINT(EM_DIAGRAM):   if F_TARGET_B ne '1' and F_TARGET_B ne '0' then do;
MPRINT(EM_DIAGRAM):   R_TARGET_B1=.;
24808     +if
MPRINT(EM_DIAGRAM):   R_TARGET_B0=.;
24809     + F_TARGET_B ne '1'
MPRINT(EM_DIAGRAM):   end;
24810     +and F_TARGET_B ne '0'
24811     + then do;
MPRINT(EM_DIAGRAM):   else do;
24812     +R_TARGET_B1=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B1= - Q_TARGET_B1;
24813     +R_TARGET_B0=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B0= - Q_TARGET_B0;
24814     +end;
MPRINT(EM_DIAGRAM):   select(F_TARGET_B);
24815     +else do;
MPRINT(EM_DIAGRAM):   when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   when('0')R_TARGET_B0= R_TARGET_B0+1;
24816     +R_TARGET_B1= - Q_TARGET_B1;
24817     +R_TARGET_B0= - Q_TARGET_B0;
MPRINT(EM_DIAGRAM):   otherwise;
24818     +select(F_TARGET_B);
MPRINT(EM_DIAGRAM):   end;
24819     +when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   end;
24820     +when('0')R_TARGET_B0= R_TARGET_B0+1;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
24821     +otherwise;
24822     +end;
24823     +end;
24824     +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24825      run;

NOTE: DATA STEP view saved on file EMWS1.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
24826      quit;
24827      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
24828      filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24829      *------------------------------------------------------------*;
24830      * Tree: Scoring VALIDATE data;
24831      *------------------------------------------------------------*;
24832      data EMWS1.Tree_VALIDATE
24833      / view=EMWS1.Tree_VALIDATE
24834      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_VALIDATE / view=EMWS1.Tree_VALIDATE ;
24835      set EMWS1.Repl_VALIDATE
24836      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl_VALIDATE ;
24837      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
24838     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24839     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
24840     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24841     +
24842     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
24843     +LENGTH F_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_TARGET_B $ 12;
24844     +LENGTH I_TARGET_B  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_TARGET_B $ 12;
24845     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
24846     +
24847     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
24848     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
24849     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
24850     +label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B1 = 'Predicted: TARGET_B=1' ;
24851     +label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label P_TARGET_B0 = 'Predicted: TARGET_B=0' ;
24852     +label Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label Q_TARGET_B1 = 'Unadjusted P: TARGET_B=1' ;
24853     +label Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label Q_TARGET_B0 = 'Unadjusted P: TARGET_B=0' ;
24854     +label V_TARGET_B1 = 'Validated: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label V_TARGET_B1 = 'Validated: TARGET_B=1' ;
24855     +label V_TARGET_B0 = 'Validated: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label V_TARGET_B0 = 'Validated: TARGET_B=0' ;
24856     +label R_TARGET_B1 = 'Residual: TARGET_B=1' ;
MPRINT(EM_DIAGRAM):   label R_TARGET_B1 = 'Residual: TARGET_B=1' ;
24857     +label R_TARGET_B0 = 'Residual: TARGET_B=0' ;
MPRINT(EM_DIAGRAM):   label R_TARGET_B0 = 'Residual: TARGET_B=0' ;
24858     +label F_TARGET_B = 'From: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label F_TARGET_B = 'From: TARGET_B' ;
24859     +label I_TARGET_B = 'Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label I_TARGET_B = 'Into: TARGET_B' ;
24860     +label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label U_TARGET_B = 'Unnormalized Into: TARGET_B' ;
24861     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
24862     +
24863     +
24864     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24865     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
24866     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
24867     +LENGTH _ARBFMT_2 $      2; DROP _ARBFMT_2;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_2 $ 2;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_2;
24868     +_ARBFMT_2 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = ' ';
24869     +LENGTH _ARBFMT_4 $      4; DROP _ARBFMT_4;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_4 $ 4;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_4;
24870     +_ARBFMT_4 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = ' ';
24871     +
24872     +
24873     +_ARBFMT_12 = PUT( TARGET_B , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( TARGET_B , BEST12.);
24874     + %DMNORMCP( _ARBFMT_12, F_TARGET_B );
MPRINT(DMNORMCP):   F_TARGET_B=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
24875     +
24876     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
24877     +
24878     + DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
24879     +_BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24880     +_ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( FREQUENCY_STATUS_97NK , BEST12.);
24881     + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24882     +  IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
24883     +   _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24884     +  END;
MPRINT(EM_DIAGRAM):   END;
24885     +  ELSE IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ,'2' ) THEN DO;
24886     +   _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24887     +  END;
MPRINT(EM_DIAGRAM):   END;
24888     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_PROP ) THEN DO;
24889     +    IF                0.218 <= RECENT_RESPONSE_PROP  THEN DO;
MPRINT(EM_DIAGRAM):   IF 0.218 <= RECENT_RESPONSE_PROP THEN DO;
24890     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24891     +    END;
MPRINT(EM_DIAGRAM):   END;
24892     +    ELSE IF RECENT_RESPONSE_PROP  <                0.218 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF RECENT_RESPONSE_PROP < 0.218 THEN DO;
24893     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24894     +    END;
MPRINT(EM_DIAGRAM):   END;
24895     +   ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
24896     +  END;
MPRINT(EM_DIAGRAM):   END;
24897     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_COUNT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_RESPONSE_COUNT ) THEN DO;
24898     +  _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( RECENT_RESPONSE_COUNT , BEST12.);
24899     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24900     +    IF _ARBFMT_12 IN ('9' ,'11' ,'7' ,'4' ,'12' ,'5' ,'8' ,'6' ,'10' ,'13' )
24901     +     THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'11' ,'7' ,'4' ,'12' ,'5' ,'8' ,'6' ,'10' ,'13' ) THEN DO;
24902     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24903     +    END;
MPRINT(EM_DIAGRAM):   END;
24904     +    ELSE IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'0' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ,'2' ,'3' ,'0' ) THEN DO;
24905     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24906     +    END;
MPRINT(EM_DIAGRAM):   END;
24907     +  END;
MPRINT(EM_DIAGRAM):   END;
24908     +IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
24909     +    IF LIFETIME_MAX_GIFT_AMT  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MAX_GIFT_AMT < 13.5 THEN DO;
24910     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24911     +    END;
MPRINT(EM_DIAGRAM):   END;
24912     +    ELSE IF                 13.5 <= LIFETIME_MAX_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 13.5 <= LIFETIME_MAX_GIFT_AMT THEN DO;
24913     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24914     +    END;
MPRINT(EM_DIAGRAM):   END;
24915     +   ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
24916     +  END;
MPRINT(EM_DIAGRAM):   END;
24917     +IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
24918     +    IF RECENT_AVG_GIFT_AMT  <                 9.95 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_GIFT_AMT < 9.95 THEN DO;
24919     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24920     +    END;
MPRINT(EM_DIAGRAM):   END;
24921     +    ELSE IF                 9.95 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 9.95 <= RECENT_AVG_GIFT_AMT THEN DO;
24922     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24923     +    END;
MPRINT(EM_DIAGRAM):   END;
24924     +   ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
24925     +  END;
MPRINT(EM_DIAGRAM):   END;
24926     +IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
24927     +
24928     +IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
24929     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
24930     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
24931     +  P_TARGET_B1  =     0.07300054401831;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.07300054401831;
24932     +  P_TARGET_B0  =     0.92699945598168;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.92699945598168;
24933     +  Q_TARGET_B1  =     0.33283087126921;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.33283087126921;
24934     +  Q_TARGET_B0  =     0.66716912873078;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.66716912873078;
24935     +  V_TARGET_B1  =     0.07029666958131;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.07029666958131;
24936     +  V_TARGET_B0  =     0.92970333041868;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.92970333041868;
24937     +  I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24938     +  U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
24939     +  END;
MPRINT(EM_DIAGRAM):   END;
24940     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24941     +
24942     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24943     +  _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PEP_STAR , BEST12.);
24944     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24945     +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24946     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24947     +    END;
MPRINT(EM_DIAGRAM):   END;
24948     +    ELSE IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('0' ) THEN DO;
24949     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24950     +    END;
MPRINT(EM_DIAGRAM):   END;
24951     +  IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(FILE_CARD_GIFT ) THEN DO;
24952     +      IF                  4.5 <= FILE_CARD_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF 4.5 <= FILE_CARD_GIFT THEN DO;
24953     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24954     +      END;
MPRINT(EM_DIAGRAM):   END;
24955     +      ELSE IF FILE_CARD_GIFT  <                  4.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF FILE_CARD_GIFT < 4.5 THEN DO;
24956     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24957     +      END;
MPRINT(EM_DIAGRAM):   END;
24958     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
24959     +    END;
MPRINT(EM_DIAGRAM):   END;
24960     +  IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_GIFT_COUNT ) THEN DO;
24961     +      IF                  8.5 <= LIFETIME_GIFT_COUNT  THEN DO;
MPRINT(EM_DIAGRAM):   IF 8.5 <= LIFETIME_GIFT_COUNT THEN DO;
24962     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24963     +      END;
MPRINT(EM_DIAGRAM):   END;
24964     +      ELSE IF LIFETIME_GIFT_COUNT  <                  8.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_GIFT_COUNT < 8.5 THEN DO;
24965     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24966     +      END;
MPRINT(EM_DIAGRAM):   END;
24967     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
24968     +    END;
MPRINT(EM_DIAGRAM):   END;
24969     +  IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_STAR_STATUS ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_STAR_STATUS ) THEN DO;
24970     +      IF                  0.5 <= RECENT_STAR_STATUS  THEN DO;
MPRINT(EM_DIAGRAM):   IF 0.5 <= RECENT_STAR_STATUS THEN DO;
24971     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24972     +      END;
MPRINT(EM_DIAGRAM):   END;
24973     +      ELSE IF RECENT_STAR_STATUS  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF RECENT_STAR_STATUS < 0.5 THEN DO;
24974     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24975     +      END;
MPRINT(EM_DIAGRAM):   END;
24976     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
24977     +    END;
MPRINT(EM_DIAGRAM):   END;
24978     +  IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
24979     +      IF                 53.5 <= LIFETIME_PROM  THEN DO;
MPRINT(EM_DIAGRAM):   IF 53.5 <= LIFETIME_PROM THEN DO;
24980     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24981     +      END;
MPRINT(EM_DIAGRAM):   END;
24982     +      ELSE IF LIFETIME_PROM  <                 53.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF LIFETIME_PROM < 53.5 THEN DO;
24983     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24984     +      END;
MPRINT(EM_DIAGRAM):   END;
24985     +     ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
24986     +    END;
MPRINT(EM_DIAGRAM):   END;
24987     +  IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
24988     +
24989     +  IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
24990     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
24991     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
24992     +    P_TARGET_B1  =     0.05030587345486;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.05030587345486;
24993     +    P_TARGET_B0  =     0.94969412654513;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.94969412654513;
24994     +    Q_TARGET_B1  =     0.25125292348813;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.25125292348813;
24995     +    Q_TARGET_B0  =     0.74874707651186;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.74874707651186;
24996     +    V_TARGET_B1  =     0.04964830264094;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04964830264094;
24997     +    V_TARGET_B0  =     0.95035169735905;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95035169735905;
24998     +    I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
24999     +    U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
25000     +    END;
MPRINT(EM_DIAGRAM):   END;
25001     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
25002     +
25003     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25004     +      IF  NOT MISSING(PER_CAPITA_INCOME ) AND
25005     +      PER_CAPITA_INCOME  <                17477 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PER_CAPITA_INCOME ) AND PER_CAPITA_INCOME < 17477 THEN DO;
25006     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25007     +      END;
MPRINT(EM_DIAGRAM):   END;
25008     +      ELSE IF  NOT MISSING(PER_CAPITA_INCOME ) AND
25009     +                     17477 <= PER_CAPITA_INCOME  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(PER_CAPITA_INCOME ) AND 17477 <= PER_CAPITA_INCOME THEN DO;
25010     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25011     +      END;
MPRINT(EM_DIAGRAM):   END;
25012     +    IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CLUSTER_CODE ) THEN DO;
25013     +      _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
MPRINT(EM_DIAGRAM):   _ARBFMT_2 = PUT( CLUSTER_CODE , $2.);
25014     +       %DMNORMIP( _ARBFMT_2);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
25015     +        IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' ,
25016     +        '20' ,'16' ,'30' ,'07' ,'25' ,'09' ,'41' ,'37' ,'38' ,'18' ,'36' ,
25017     +        '48' ,'08' ,'31' ,'19' ,'27' ,'40' ,'26' ,'28' ,'21' ,'51' ,'44' ,
25018     +        '05' ,'17' ,'39' ,'33' ,'47' ,'06' ,'32' ,'52' ,'10' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_2 IN ('.' ,'04' ,'49' ,'50' ,'43' ,'53' ,'42' ,'46' ,'45' , '20' ,'16' ,'30' ,'07' ,'25' ,'09' ,'41' ,'37' ,'38' ,'18' ,'36' , '48' ,'08' ,'31' ,'19' ,'27' ,'40' ,'26' ,'28' ,'21' ,'51' ,'44' , '05' ,'17' ,'39' ,'33' ,'47' 
,'06' ,'32' ,'52' ,'10' ) THEN DO;
25019     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25020     +        END;
MPRINT(EM_DIAGRAM):   END;
25021     +        ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' ,
25022     +        '13' ,'14' ,'29' ,'11' ,'22' ,'03' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_2 IN ('34' ,'23' ,'01' ,'02' ,'15' ,'24' ,'12' ,'35' , '13' ,'14' ,'29' ,'11' ,'22' ,'03' ) THEN DO;
25023     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25024     +        END;
MPRINT(EM_DIAGRAM):   END;
25025     +      END;
MPRINT(EM_DIAGRAM):   END;
25026     +    IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOUSEHOLD_INCOME ) THEN DO;
25027     +        IF MEDIAN_HOUSEHOLD_INCOME  <                409.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOUSEHOLD_INCOME < 409.5 THEN DO;
25028     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25029     +        END;
MPRINT(EM_DIAGRAM):   END;
25030     +        ELSE IF                409.5 <= MEDIAN_HOUSEHOLD_INCOME  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 409.5 <= MEDIAN_HOUSEHOLD_INCOME THEN DO;
25031     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25032     +        END;
MPRINT(EM_DIAGRAM):   END;
25033     +       ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
25034     +      END;
MPRINT(EM_DIAGRAM):   END;
25035     +    IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(REP_SES ) THEN DO;
25036     +      _ARBFMT_4 = PUT( REP_SES , $4.);
MPRINT(EM_DIAGRAM):   _ARBFMT_4 = PUT( REP_SES , $4.);
25037     +       %DMNORMIP( _ARBFMT_4);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
25038     +        IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_4 IN ('2' ,'3' ,'4' ) THEN DO;
25039     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25040     +        END;
MPRINT(EM_DIAGRAM):   END;
25041     +        ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_4 IN ('1' ) THEN DO;
25042     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25043     +        END;
MPRINT(EM_DIAGRAM):   END;
25044     +      END;
MPRINT(EM_DIAGRAM):   END;
25045     +    IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MEDIAN_HOME_VALUE ) THEN DO;
25046     +        IF MEDIAN_HOME_VALUE  <                 1126 THEN DO;
MPRINT(EM_DIAGRAM):   IF MEDIAN_HOME_VALUE < 1126 THEN DO;
25047     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25048     +        END;
MPRINT(EM_DIAGRAM):   END;
25049     +        ELSE IF                 1126 <= MEDIAN_HOME_VALUE  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 1126 <= MEDIAN_HOME_VALUE THEN DO;
25050     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25051     +        END;
MPRINT(EM_DIAGRAM):   END;
25052     +       ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
25053     +      END;
MPRINT(EM_DIAGRAM):   END;
25054     +    IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
25055     +
25056     +    IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
25057     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
25058     +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
25059     +      P_TARGET_B1  =     0.04725884462623;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04725884462623;
25060     +      P_TARGET_B0  =     0.95274115537376;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95274115537376;
25061     +      Q_TARGET_B1  =      0.2390988372093;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.2390988372093;
25062     +      Q_TARGET_B0  =     0.76090116279069;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.76090116279069;
25063     +      V_TARGET_B1  =     0.04024137145951;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.04024137145951;
25064     +      V_TARGET_B0  =     0.95975862854048;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.95975862854048;
25065     +      I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
25066     +      U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
25067     +      END;
MPRINT(EM_DIAGRAM):   END;
25068     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
25069     +
25070     +      _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25071     +        IF  NOT MISSING(FILE_AVG_GIFT ) AND
25072     +        FILE_AVG_GIFT  <               13.615 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(FILE_AVG_GIFT ) AND FILE_AVG_GIFT < 13.615 THEN DO;
25073     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25074     +        END;
MPRINT(EM_DIAGRAM):   END;
25075     +        ELSE IF  NOT MISSING(FILE_AVG_GIFT ) AND
25076     +                      13.615 <= FILE_AVG_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(FILE_AVG_GIFT ) AND 13.615 <= FILE_AVG_GIFT THEN DO;
25077     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25078     +        END;
MPRINT(EM_DIAGRAM):   END;
25079     +      IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_AVG_GIFT_AMT ) THEN DO;
25080     +          IF LIFETIME_AVG_GIFT_AMT  <               13.615 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_AVG_GIFT_AMT < 13.615 THEN DO;
25081     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25082     +          END;
MPRINT(EM_DIAGRAM):   END;
25083     +          ELSE IF               13.615 <= LIFETIME_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 13.615 <= LIFETIME_AVG_GIFT_AMT THEN DO;
25084     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25085     +          END;
MPRINT(EM_DIAGRAM):   END;
25086     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
25087     +        END;
MPRINT(EM_DIAGRAM):   END;
25088     +      IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MIN_GIFT_AMT ) THEN DO;
25089     +          IF LIFETIME_MIN_GIFT_AMT  <                 7.75 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MIN_GIFT_AMT < 7.75 THEN DO;
25090     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25091     +          END;
MPRINT(EM_DIAGRAM):   END;
25092     +          ELSE IF                 7.75 <= LIFETIME_MIN_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 7.75 <= LIFETIME_MIN_GIFT_AMT THEN DO;
25093     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25094     +          END;
MPRINT(EM_DIAGRAM):   END;
25095     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
25096     +        END;
MPRINT(EM_DIAGRAM):   END;
25097     +      IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(RECENT_AVG_GIFT_AMT ) THEN DO;
25098     +          IF RECENT_AVG_GIFT_AMT  <               14.835 THEN DO;
MPRINT(EM_DIAGRAM):   IF RECENT_AVG_GIFT_AMT < 14.835 THEN DO;
25099     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25100     +          END;
MPRINT(EM_DIAGRAM):   END;
25101     +          ELSE IF               14.835 <= RECENT_AVG_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 14.835 <= RECENT_AVG_GIFT_AMT THEN DO;
25102     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25103     +          END;
MPRINT(EM_DIAGRAM):   END;
25104     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
25105     +        END;
MPRINT(EM_DIAGRAM):   END;
25106     +      IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_MAX_GIFT_AMT ) THEN DO;
25107     +          IF LIFETIME_MAX_GIFT_AMT  <                 19.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_MAX_GIFT_AMT < 19.5 THEN DO;
25108     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25109     +          END;
MPRINT(EM_DIAGRAM):   END;
25110     +          ELSE IF                 19.5 <= LIFETIME_MAX_GIFT_AMT  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 19.5 <= LIFETIME_MAX_GIFT_AMT THEN DO;
25111     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25112     +          END;
MPRINT(EM_DIAGRAM):   END;
25113     +         ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
25114     +        END;
MPRINT(EM_DIAGRAM):   END;
25115     +      IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
25116     +
25117     +      IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
25118     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
25119     +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
25120     +        P_TARGET_B1  =      0.0361451652753;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0361451652753;
25121     +        P_TARGET_B0  =     0.96385483472469;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.96385483472469;
25122     +        Q_TARGET_B1  =     0.19196062346185;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.19196062346185;
25123     +        Q_TARGET_B0  =     0.80803937653814;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.80803937653814;
25124     +        V_TARGET_B1  =     0.03668059246853;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03668059246853;
25125     +        V_TARGET_B0  =     0.96331940753146;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96331940753146;
25126     +        I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
25127     +        U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
25128     +        END;
MPRINT(EM_DIAGRAM):   END;
25129     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
25130     +
25131     +        _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25132     +          IF  NOT MISSING(NUMBER_PROM_12 ) AND
25133     +          NUMBER_PROM_12  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NUMBER_PROM_12 ) AND NUMBER_PROM_12 < 13.5 THEN DO;
25134     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25135     +          END;
MPRINT(EM_DIAGRAM):   END;
25136     +          ELSE IF  NOT MISSING(NUMBER_PROM_12 ) AND
25137     +                          13.5 <= NUMBER_PROM_12  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(NUMBER_PROM_12 ) AND 13.5 <= NUMBER_PROM_12 THEN DO;
25138     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25139     +          END;
MPRINT(EM_DIAGRAM):   END;
25140     +        IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(IN_HOUSE ) THEN DO;
25141     +          _ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( IN_HOUSE , BEST12.);
25142     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
25143     +            IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
25144     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25145     +            END;
MPRINT(EM_DIAGRAM):   END;
25146     +            ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('1' ) THEN DO;
25147     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25148     +            END;
MPRINT(EM_DIAGRAM):   END;
25149     +          END;
MPRINT(EM_DIAGRAM):   END;
25150     +        IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_LAST_GIFT ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(MONTHS_SINCE_LAST_GIFT ) THEN DO;
25151     +            IF                 14.5 <= MONTHS_SINCE_LAST_GIFT  THEN DO;
MPRINT(EM_DIAGRAM):   IF 14.5 <= MONTHS_SINCE_LAST_GIFT THEN DO;
25152     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25153     +            END;
MPRINT(EM_DIAGRAM):   END;
25154     +            ELSE IF MONTHS_SINCE_LAST_GIFT  <                 14.5 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF MONTHS_SINCE_LAST_GIFT < 14.5 THEN DO;
25155     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25156     +            END;
MPRINT(EM_DIAGRAM):   END;
25157     +           ELSE _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 1;
25158     +          END;
MPRINT(EM_DIAGRAM):   END;
25159     +        IF _BRANCH_ LT 0 AND NOT MISSING(CARD_PROM_12 ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(CARD_PROM_12 ) THEN DO;
25160     +          _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( CARD_PROM_12 , BEST12.);
25161     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
25162     +            IF _ARBFMT_12 IN ('5' ,'6' ,'4' ,'2' ,'3' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ,'6' ,'4' ,'2' ,'3' ,'1' ) THEN DO;
25163     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25164     +            END;
MPRINT(EM_DIAGRAM):   END;
25165     +            ELSE IF _ARBFMT_12 IN ('7' ,'9' ,'8' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('7' ,'9' ,'8' ) THEN DO;
25166     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25167     +            END;
MPRINT(EM_DIAGRAM):   END;
25168     +          END;
MPRINT(EM_DIAGRAM):   END;
25169     +        IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(LIFETIME_PROM ) THEN DO;
25170     +            IF LIFETIME_PROM  <                 71.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF LIFETIME_PROM < 71.5 THEN DO;
25171     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25172     +            END;
MPRINT(EM_DIAGRAM):   END;
25173     +            ELSE IF                 71.5 <= LIFETIME_PROM  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF 71.5 <= LIFETIME_PROM THEN DO;
25174     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25175     +            END;
MPRINT(EM_DIAGRAM):   END;
25176     +           ELSE _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   ELSE _BRANCH_ = 2;
25177     +          END;
MPRINT(EM_DIAGRAM):   END;
25178     +        IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
25179     +
25180     +        IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
25181     +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
25182     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
25183     +          P_TARGET_B1  =     0.04899772110298;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.04899772110298;
25184     +          P_TARGET_B0  =     0.95100227889701;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.95100227889701;
25185     +          Q_TARGET_B1  =     0.24607329842931;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.24607329842931;
25186     +          Q_TARGET_B0  =     0.75392670157068;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.75392670157068;
25187     +          V_TARGET_B1  =     0.03602921311568;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03602921311568;
25188     +          V_TARGET_B0  =     0.96397078688431;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96397078688431;
25189     +          I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
25190     +          U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
25191     +          END;
MPRINT(EM_DIAGRAM):   END;
25192     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
25193     +          IF  NOT MISSING(PCT_ATTRIBUTE2 ) AND
25194     +                            58.5 <= PCT_ATTRIBUTE2  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PCT_ATTRIBUTE2 ) AND 58.5 <= PCT_ATTRIBUTE2 THEN DO;
25195     +            _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
25196     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
25197     +            P_TARGET_B1  =     0.12136059263373;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.12136059263373;
25198     +            P_TARGET_B0  =     0.87863940736626;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.87863940736626;
25199     +            Q_TARGET_B1  =     0.46666666666666;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.46666666666666;
25200     +            Q_TARGET_B0  =     0.53333333333333;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.53333333333333;
25201     +            V_TARGET_B1  =     0.05942303585465;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.05942303585465;
25202     +            V_TARGET_B0  =     0.94057696414534;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.94057696414534;
25203     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
25204     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
25205     +            END;
MPRINT(EM_DIAGRAM):   END;
25206     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
25207     +            _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
25208     +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
25209     +            P_TARGET_B1  =      0.0218140868437;
MPRINT(EM_DIAGRAM):   P_TARGET_B1 = 0.0218140868437;
25210     +            P_TARGET_B0  =     0.97818591315629;
MPRINT(EM_DIAGRAM):   P_TARGET_B0 = 0.97818591315629;
25211     +            Q_TARGET_B1  =     0.12378483473752;
MPRINT(EM_DIAGRAM):   Q_TARGET_B1 = 0.12378483473752;
25212     +            Q_TARGET_B0  =     0.87621516526247;
MPRINT(EM_DIAGRAM):   Q_TARGET_B0 = 0.87621516526247;
25213     +            V_TARGET_B1  =     0.03330189507384;
MPRINT(EM_DIAGRAM):   V_TARGET_B1 = 0.03330189507384;
25214     +            V_TARGET_B0  =     0.96669810492615;
MPRINT(EM_DIAGRAM):   V_TARGET_B0 = 0.96669810492615;
25215     +            I_TARGET_B  = '0' ;
MPRINT(EM_DIAGRAM):   I_TARGET_B = '0' ;
25216     +            U_TARGET_B  =                    0;
MPRINT(EM_DIAGRAM):   U_TARGET_B = 0;
25217     +            END;
MPRINT(EM_DIAGRAM):   END;
25218     +          END;
MPRINT(EM_DIAGRAM):   END;
25219     +        END;
MPRINT(EM_DIAGRAM):   END;
25220     +      END;
MPRINT(EM_DIAGRAM):   END;
25221     +    END;
MPRINT(EM_DIAGRAM):   END;
25222     +  END;
MPRINT(EM_DIAGRAM):   END;
25223     +
25224     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
25225     +IF  F_TARGET_B  NE '1'
25226     +AND F_TARGET_B  NE '0'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_TARGET_B NE '1' AND F_TARGET_B NE '0' THEN DO;
25227     +        R_TARGET_B1  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = .;
25228     +        R_TARGET_B0  = .;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = .;
25229     + END;
MPRINT(EM_DIAGRAM):   END;
25230     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
25231     +       R_TARGET_B1  =  -P_TARGET_B1 ;
MPRINT(EM_DIAGRAM):   R_TARGET_B1 = -P_TARGET_B1 ;
25232     +       R_TARGET_B0  =  -P_TARGET_B0 ;
MPRINT(EM_DIAGRAM):   R_TARGET_B0 = -P_TARGET_B0 ;
25233     +       SELECT( F_TARGET_B  );
MPRINT(EM_DIAGRAM):   SELECT( F_TARGET_B );
25234     +          WHEN( '1'  ) R_TARGET_B1  = R_TARGET_B1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_TARGET_B1 = R_TARGET_B1 +1;
25235     +          WHEN( '0'  ) R_TARGET_B0  = R_TARGET_B0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_TARGET_B0 = R_TARGET_B0 +1;
25236     +       END;
MPRINT(EM_DIAGRAM):   END;
25237     + END;
MPRINT(EM_DIAGRAM):   END;
25238     +
25239     +*****  DECISION VARIABLES *******;
MPRINT(EM_DIAGRAM):   ***** DECISION VARIABLES *******;
25240     +
25241     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
25242     +label D_TARGET_B = 'Decision: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label D_TARGET_B = 'Decision: TARGET_B' ;
25243     +label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label EP_TARGET_B = 'Expected Profit: TARGET_B' ;
25244     +label BP_TARGET_B = 'Best Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label BP_TARGET_B = 'Best Profit: TARGET_B' ;
25245     +label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
MPRINT(EM_DIAGRAM):   label CP_TARGET_B = 'Computed Profit: TARGET_B' ;
25246     +
25247     +length D_TARGET_B $ 9;
MPRINT(EM_DIAGRAM):   length D_TARGET_B $ 9;
25248     +
25249     +D_TARGET_B = ' ';
MPRINT(EM_DIAGRAM):   D_TARGET_B = ' ';
25250     +EP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = .;
25251     +BP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   BP_TARGET_B = .;
25252     +CP_TARGET_B = .;
MPRINT(EM_DIAGRAM):   CP_TARGET_B = .;
25253     +
25254     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
25255     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
25256     +
25257     +D_TARGET_B = '1' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '1' ;
25258     +EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = P_TARGET_B1 * 14.5 + P_TARGET_B0 * -0.5;
25259     +drop _sum;
MPRINT(EM_DIAGRAM):   drop _sum;
25260     +_sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
MPRINT(EM_DIAGRAM):   _sum = P_TARGET_B1 * 0 + P_TARGET_B0 * 0;
25261     +if _sum > EP_TARGET_B + 6.593837E-12 then do;
MPRINT(EM_DIAGRAM):   if _sum > EP_TARGET_B + 6.593837E-12 then do;
25262     +   EP_TARGET_B = _sum; _decnum = 2;
MPRINT(EM_DIAGRAM):   EP_TARGET_B = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
25263     +   D_TARGET_B = '0' ;
MPRINT(EM_DIAGRAM):   D_TARGET_B = '0' ;
25264     +end;
MPRINT(EM_DIAGRAM):   end;
25265     +
25266     +*** Decision Matrix;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
25267     +array TREEdema [2,2] _temporary_ (
25268     +/* row 1 */  14.5 0
25269     +/* row 2 */  -0.5 0
25270     +);
MPRINT(EM_DIAGRAM):   array TREEdema [2,2] _temporary_ ( 14.5 0 -0.5 0 );
25271     +
25272     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
25273     +drop _tarnum; select( F_TARGET_B );
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_TARGET_B );
25274     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
25275     +   when('0' ) _tarnum = 2;
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
25276     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
25277     +end;
MPRINT(EM_DIAGRAM):   end;
25278     +if _tarnum <= 0 then goto TREEdeex;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto TREEdeex;
25279     +
25280     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
25281     +CP_TARGET_B = TREEdema [_tarnum,_decnum];
MPRINT(EM_DIAGRAM):   CP_TARGET_B = TREEdema [_tarnum,_decnum];
25282     +
25283     +*** Best Possible Consequence of Any Decision without Cost;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
25284     +array TREEdebe [2] _temporary_ ( 14.5 0);
MPRINT(EM_DIAGRAM):   array TREEdebe [2] _temporary_ ( 14.5 0);
25285     +BP_TARGET_B = TREEdebe [_tarnum];
MPRINT(EM_DIAGRAM):   BP_TARGET_B = TREEdebe [_tarnum];
25286     +
25287     +
25288     +TREEdeex:;
MPRINT(EM_DIAGRAM):   TREEdeex:;
25289     +
25290     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
25291     +
25292     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
25293     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
25294     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
25295     +
25296     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25297     +*Computing Unadjusted Residual Vars: TARGET_B;
MPRINT(EM_DIAGRAM):   *Computing Unadjusted Residual Vars: TARGET_B;
25298     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25299     +Label R_TARGET_B1='Residual: TARGET_B=1';
MPRINT(EM_DIAGRAM):   Label R_TARGET_B1= 'Residual: TARGET_B=1';
25300     +Label R_TARGET_B0='Residual: TARGET_B=0';
MPRINT(EM_DIAGRAM):   Label R_TARGET_B0= 'Residual: TARGET_B=0';
25301     +if
25302     + F_TARGET_B ne '1'
25303     +and F_TARGET_B ne '0'
25304     + then do;
MPRINT(EM_DIAGRAM):   if F_TARGET_B ne '1' and F_TARGET_B ne '0' then do;
25305     +R_TARGET_B1=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B1=.;
25306     +R_TARGET_B0=.;
MPRINT(EM_DIAGRAM):   R_TARGET_B0=.;
25307     +end;
MPRINT(EM_DIAGRAM):   end;
25308     +else do;
MPRINT(EM_DIAGRAM):   else do;
25309     +R_TARGET_B1= - Q_TARGET_B1;
MPRINT(EM_DIAGRAM):   R_TARGET_B1= - Q_TARGET_B1;
25310     +R_TARGET_B0= - Q_TARGET_B0;
MPRINT(EM_DIAGRAM):   R_TARGET_B0= - Q_TARGET_B0;
25311     +select(F_TARGET_B);
MPRINT(EM_DIAGRAM):   select(F_TARGET_B);
25312     +when('1')R_TARGET_B1= R_TARGET_B1+1;
MPRINT(EM_DIAGRAM):   when('1')R_TARGET_B1= R_TARGET_B1+1;
25313     +when('0')R_TARGET_B0= R_TARGET_B0+1;
MPRINT(EM_DIAGRAM):   when('0')R_TARGET_B0= R_TARGET_B0+1;
25314     +otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
25315     +end;
MPRINT(EM_DIAGRAM):   end;
25316     +end;
MPRINT(EM_DIAGRAM):   end;
25317     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
25318      run;

NOTE: DATA STEP view saved on file EMWS1.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
25319      quit;
25320      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
25322      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
25323      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
25324      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

25325      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
25326      * Tree: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree: Computing metadata for TRAIN data;
25327      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "J:\JMMORR01\CIS 445\Tutorial 1\Charity\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree_TRAIN out=WORK.M24XVY2T noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24XVY2T;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M24XVY2T(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24XVY2T;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M24XVY2T;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1A3A5WI NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1A3A5WI;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3A5WI;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MTXWFC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3A5WI;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1A3A5WI;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3A5WI;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1A3A5WI;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3A5WI;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Repl_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Repl_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("TARGET_B") model = "Tree";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DONOR_AGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "HOME_OWNER" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "INCOME_GROUP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LAST_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_CARD_PROM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_AMOUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LIFETIME_GIFT_RANGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_FIRST_GIFT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_LAST_PROM_RESP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MONTHS_SINCE_ORIGIN" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MOR_HIT_RATE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "OVERLAY_SOURCE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE3" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_ATTRIBUTE4" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PCT_OWNER_OCCUPIED" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PUBLISHED_PHONE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_TARGET_B0" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_TARGET_B1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENCY_STATUS_96NK" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_AVG_CARD_GIFT_AMT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_CARD_RESPONSE_COUNT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RECENT_CARD_RESPONSE_PROP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_DONOR_GENDER" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "REP_URBANICITY" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "WEALTH_RATING" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
25780      data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree_EMINFO;
25781      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
25782      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
25783      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   run;
25787      run;
25788      proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
25789      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25790      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.00 seconds
      

25791      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
25792      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25793      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

25794      proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
25795      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25796      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

25797      data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_EMINFO;
25798      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
25799      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
25800      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

25801      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
25802      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
25803      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
25804      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS1.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
